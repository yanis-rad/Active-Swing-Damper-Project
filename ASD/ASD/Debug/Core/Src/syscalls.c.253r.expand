
;; Function initialise_monitor_handles (initialise_monitor_handles, funcdef_no=25, decl_uid=7440, cgraph_uid=26, symbol_order=27)

void initialise_monitor_handles ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  return;
;;    succ:       EXIT

}



Partition map 



Coalescible Partition map 


After Coalescing:

Partition map 


void initialise_monitor_handles ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [always]  (FALLTHRU) ../Core/Src/syscalls.c:46:1


;; Function _getpid (_getpid, funcdef_no=26, decl_uid=7443, cgraph_uid=27, symbol_order=28)

int _getpid ()
{
  int D.7523;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (_3(D) - 3 )


Coalescible Partition map 

Partition 0, base 0 (_3(D) - 3 )


Partition map 

Partition 0 (_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_3(D) - 3 )

int _getpid ()
{
  int D.7523;
  int _1;
  int _3(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 1;

(insn 5 4 0 (set (reg:SI 113 [ _1 ])
        (const_int 1 [0x1])) "../Core/Src/syscalls.c":50:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 6 5 7 3 (nil) [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 8 7 9 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":50:10 -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":50:10 -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 113 [ _1 ])
        (const_int 1 [0x1])) "../Core/Src/syscalls.c":50:10 -1
     (nil))
(insn 8 5 12 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":50:10 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":51:1 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":51:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _kill (_kill, funcdef_no=27, decl_uid=7447, cgraph_uid=28, symbol_order=29)

int _kill (int pid, int sig)
{
  int D.7525;
  int * _1;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 22;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (pid_6(D) - 6 )
Partition 7 (sig_7(D) - 7 )
Partition 8 (_8(D) - 8 )


Coalescible Partition map 

Partition 0, base 0 (pid_6(D) - 6 )
Partition 1, base 1 (sig_7(D) - 7 )
Partition 2, base 2 (_8(D) - 8 )


Partition map 

Partition 0 (pid_6(D) - 6 )
Partition 1 (sig_7(D) - 7 )
Partition 2 (_8(D) - 8 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (pid_6(D) - 6 )
Partition 1 (sig_7(D) - 7 )
Partition 2 (_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_5 - 5 )
Partition 2 (pid_6(D) - 6 )
Partition 3 (sig_7(D) - 7 )
Partition 4 (_8(D) - 8 )

int _kill (int pid, int sig)
{
  int D.7525;
  int * _1;
  int _5;
  int _8(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 22;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = __errno ();

(call_insn 7 6 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":57:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 8 7 0 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":57:3 -1
     (nil))

;; *_1 = 22;

(insn 9 8 10 (set (reg:SI 116)
        (const_int 22 [0x16])) "../Core/Src/syscalls.c":57:9 -1
     (nil))

(insn 10 9 0 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":57:9 -1
     (nil))

;; _5 = -1;

(insn 11 10 0 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":58:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 12 11 13 5 (nil) [0 uses])

(note 13 12 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 14 13 15 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":58:10 -1
     (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":58:10 -1
     (nil))

(barrier 16 15 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 15.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 pid+0 S4 A32])
        (reg:SI 0 r0 [ pid ])) "../Core/Src/syscalls.c":54:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 sig+0 S4 A32])
        (reg:SI 1 r1 [ sig ])) "../Core/Src/syscalls.c":54:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 7 4 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":57:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":57:3 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 116)
        (const_int 22 [0x16])) "../Core/Src/syscalls.c":57:9 -1
     (nil))
(insn 10 9 11 2 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":57:9 -1
     (nil))
(insn 11 10 14 2 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":58:10 -1
     (nil))
(insn 14 11 18 2 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":58:10 -1
     (nil))
(insn 18 14 19 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "../Core/Src/syscalls.c":59:1 -1
     (nil))
(insn 19 18 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":59:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _exit (_exit, funcdef_no=28, decl_uid=1157, cgraph_uid=29, symbol_order=30)

__attribute__((nothrow, leaf, noreturn))
void _exit (int status)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _kill (status_2(D), -1);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

}



Partition map 

Partition 2 (status_2(D) - 2 )


Coalescible Partition map 

Partition 0, base 0 (status_2(D) - 2 )


Partition map 

Partition 0 (status_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (status_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (status_2(D) - 2 )

__attribute__((nothrow, leaf, noreturn))
void _exit (int status)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _kill (status_2(D), -1);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       3
  goto <bb 3>; [100.00%]
;;    succ:       3

}



;; Generating RTL for gimple basic block 2

;; _kill (status_2(D), -1);

(insn 6 5 7 (set (reg:SI 1 r1)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":63:3 -1
     (nil))

(insn 7 6 8 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 status+0 S4 A32])) "../Core/Src/syscalls.c":63:3 -1
     (nil))

(call_insn 8 7 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_kill") [flags 0x3]  <function_decl 0000000006251a00 _kill>) [0 _kill S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":63:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
deleting block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 status+0 S4 A32])
        (reg:SI 0 r0 [ status ])) "../Core/Src/syscalls.c":62:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 1 r1)
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":63:3 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 status+0 S4 A32])) "../Core/Src/syscalls.c":63:3 -1
     (nil))
(call_insn 8 7 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_kill") [flags 0x3]  <function_decl 0000000006251a00 _kill>) [0 _kill S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":63:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 (FALLTHRU)
;;              5 [always]  (DFS_BACK)
(code_label 11 8 9 4 7 (nil) [1 uses])
(note 9 11 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU) ../Core/Src/syscalls.c:64:9

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       4 (FALLTHRU) ../Core/Src/syscalls.c:64:9
(note 10 9 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 10 13 5 (set (pc)
        (label_ref 11)) -1
     (nil)
 -> 11)
;;  succ:       4 [always]  (DFS_BACK)

(barrier 13 12 0)

;; Function _read (_read, funcdef_no=29, decl_uid=7458, cgraph_uid=30, symbol_order=31)

__attribute__((weak))
int _read (int file, char * ptr, int len)
{
  int DataIdx;
  int D.7527;
  int _1;
  char * ptr.0_2;
  char _3;
  int _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  DataIdx_7 = 0;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  _1 = __io_getchar ();
  ptr.0_2 = ptr_4;
  ptr_13 = ptr.0_2 + 1;
  _3 = (char) _1;
  *ptr.0_2 = _3;
  DataIdx_15 = DataIdx_5 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # ptr_4 = PHI <ptr_8(D)(2), ptr_13(3)>
  # DataIdx_5 = PHI <DataIdx_7(2), DataIdx_15(3)>
  if (DataIdx_5 < len_10(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _11 = len_10(D);
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (ptr.0_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (ptr_4 - 4 )
Partition 5 (DataIdx_5 - 5 )
Partition 7 (DataIdx_7 - 7 )
Partition 8 (ptr_8(D) - 8 )
Partition 10 (len_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 13 (ptr_13 - 13 )
Partition 15 (DataIdx_15 - 15 )
Partition 16 (file_16(D) - 16 )
Partition 17 (_17(D) - 17 )


Coalescible Partition map 

Partition 0, base 0 (ptr_4 - 4 8 13 )
Partition 1, base 1 (DataIdx_5 - 5 7 15 )
Partition 4, base 2 (len_10(D) - 10 )
Partition 7, base 3 (file_16(D) - 16 )
Partition 8, base 4 (_17(D) - 17 )


Partition map 

Partition 0 (ptr_4 - 4 )
Partition 1 (DataIdx_5 - 5 )
Partition 2 (DataIdx_7 - 7 )
Partition 3 (ptr_8(D) - 8 )
Partition 4 (len_10(D) - 10 )
Partition 5 (ptr_13 - 13 )
Partition 6 (DataIdx_15 - 15 )
Partition 7 (file_16(D) - 16 )
Partition 8 (_17(D) - 17 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483647, 0) ptr_4 <-> ptr_8(D)
(2147483647, 0) ptr_4 <-> ptr_13
(2147483646, 0) DataIdx_5 <-> DataIdx_7
(2147483646, 0) DataIdx_5 <-> DataIdx_15

Partition map 

Partition 0 (ptr_4 - 4 )
Partition 1 (DataIdx_5 - 5 )
Partition 2 (DataIdx_7 - 7 )
Partition 3 (ptr_8(D) - 8 )
Partition 4 (len_10(D) - 10 )
Partition 5 (ptr_13 - 13 )
Partition 6 (DataIdx_15 - 15 )
Partition 7 (file_16(D) - 16 )
Partition 8 (_17(D) - 17 )

Coalesce list: (4)ptr_4 & (8)ptr_8(D) [map: 0, 3] : Success -> 0
Coalesce list: (4)ptr_4 & (13)ptr_13 [map: 0, 5] : Success -> 0
Coalesce list: (5)DataIdx_5 & (7)DataIdx_7 [map: 1, 2] : Success -> 1
Coalesce list: (5)DataIdx_5 & (15)DataIdx_15 [map: 1, 6] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (ptr.0_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (ptr_4 - 4 8 13 )
Partition 4 (DataIdx_5 - 5 7 15 )
Partition 5 (len_10(D) - 10 )
Partition 6 (_11 - 11 )
Partition 7 (file_16(D) - 16 )
Partition 8 (_17(D) - 17 )

__attribute__((weak))
int _read (int file, char * ptr, int len)
{
  int DataIdx;
  int D.7527;
  int _1;
  char * ptr.0_2;
  char _3;
  int _11;
  int _17(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  DataIdx_7 = 0;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  _1 = __io_getchar ();
  ptr.0_2 = ptr_4;
  ptr_13 = ptr.0_2 + 1;
  _3 = (char) _1;
  *ptr.0_2 = _3;
  DataIdx_15 = DataIdx_5 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # ptr_4 = PHI <ptr_8(D)(2), ptr_13(3)>
  # DataIdx_5 = PHI <DataIdx_7(2), DataIdx_15(3)>
  if (DataIdx_5 < len_10(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _11 = len_10(D);
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _11;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; DataIdx_7 = 0;

(insn 8 7 9 (set (reg:SI 118)
        (const_int 0 [0])) "../Core/Src/syscalls.c":72:16 -1
     (nil))

(insn 9 8 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 118)) "../Core/Src/syscalls.c":72:16 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _1 = __io_getchar ();

(call_insn 13 12 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("__io_getchar") [flags 0x41]  <function_decl 0000000006251500 __io_getchar>) [0 __io_getchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":74:14 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 14 13 0 (set (reg:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":74:14 -1
     (nil))

;; ptr.0_2 = ptr_4;

(insn 15 14 0 (set (reg/f:SI 114 [ ptr.0_2 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])) "../Core/Src/syscalls.c":74:9 -1
     (nil))

;; ptr_13 = ptr.0_2 + 1;

(insn 16 15 17 (set (reg:SI 119)
        (plus:SI (reg/f:SI 114 [ ptr.0_2 ])
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":74:9 -1
     (nil))

(insn 17 16 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])
        (reg:SI 119)) "../Core/Src/syscalls.c":74:9 -1
     (nil))

;; _3 = (char) _1;

(insn 18 17 0 (set (reg:SI 115 [ _3 ])
        (zero_extend:SI (subreg:QI (reg:SI 113 [ _1 ]) 0))) "../Core/Src/syscalls.c":74:12 -1
     (nil))

;; *ptr.0_2 = _3;

(insn 19 18 20 (set (reg:QI 120)
        (subreg/s/v:QI (reg:SI 115 [ _3 ]) 0)) "../Core/Src/syscalls.c":74:12 -1
     (nil))

(insn 20 19 0 (set (mem:QI (reg/f:SI 114 [ ptr.0_2 ]) [0 *ptr.0_2+0 S1 A8])
        (reg:QI 120)) "../Core/Src/syscalls.c":74:12 -1
     (nil))

;; DataIdx_15 = DataIdx_5 + 1;

(insn 21 20 22 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":72:43 -1
     (nil))

(insn 22 21 23 (set (reg:SI 121)
        (plus:SI (reg:SI 122)
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":72:43 -1
     (nil))

(insn 23 22 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 121)) "../Core/Src/syscalls.c":72:43 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 24 23 25 9 (nil) [0 uses])

(note 25 24 0 NOTE_INSN_BASIC_BLOCK)

;; if (DataIdx_5 < len_10(D))

(insn 27 25 28 (set (reg:SI 123)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":72:29 -1
     (nil))

(insn 28 27 29 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":72:29 -1
     (nil))

(insn 29 28 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (reg:SI 124))) "../Core/Src/syscalls.c":72:29 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "../Core/Src/syscalls.c":72:29 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _11 = len_10(D);

(insn 32 31 0 (set (reg:SI 116 [ _11 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":77:10 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 33 32 34 11 (nil) [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 35 34 36 (set (reg:SI 117 [ <retval> ])
        (reg:SI 116 [ _11 ])) "../Core/Src/syscalls.c":77:10 -1
     (nil))

(jump_insn 36 35 37 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":77:10 -1
     (nil))

(barrier 37 36 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 36.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":68:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])
        (reg:SI 1 r1 [ ptr ])) "../Core/Src/syscalls.c":68:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])
        (reg:SI 2 r2 [ len ])) "../Core/Src/syscalls.c":68:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 118)
        (const_int 0 [0])) "../Core/Src/syscalls.c":72:16 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 118)) "../Core/Src/syscalls.c":72:16 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 24)) "../Core/Src/syscalls.c":72:3 -1
     (nil)
 -> 24)
;;  succ:       5 ../Core/Src/syscalls.c:72:3

(barrier 11 10 26)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       5
(code_label 26 11 12 4 10 (nil) [1 uses])
(note 12 26 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 14 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("__io_getchar") [flags 0x41]  <function_decl 0000000006251500 __io_getchar>) [0 __io_getchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":74:14 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 14 13 15 4 (set (reg:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":74:14 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:SI 114 [ ptr.0_2 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])) "../Core/Src/syscalls.c":74:9 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 119)
        (plus:SI (reg/f:SI 114 [ ptr.0_2 ])
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":74:9 -1
     (nil))
(insn 17 16 18 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])
        (reg:SI 119)) "../Core/Src/syscalls.c":74:9 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 115 [ _3 ])
        (zero_extend:SI (subreg:QI (reg:SI 113 [ _1 ]) 0))) "../Core/Src/syscalls.c":74:12 -1
     (nil))
(insn 19 18 20 4 (set (reg:QI 120)
        (subreg/s/v:QI (reg:SI 115 [ _3 ]) 0)) "../Core/Src/syscalls.c":74:12 -1
     (nil))
(insn 20 19 21 4 (set (mem:QI (reg/f:SI 114 [ ptr.0_2 ]) [0 *ptr.0_2+0 S1 A8])
        (reg:QI 120)) "../Core/Src/syscalls.c":74:12 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":72:43 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 121)
        (plus:SI (reg:SI 122)
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":72:43 -1
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 121)) "../Core/Src/syscalls.c":72:43 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 ../Core/Src/syscalls.c:72:3
;;              4 (FALLTHRU,DFS_BACK)
(code_label 24 23 25 5 9 (nil) [1 uses])
(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 25 28 5 (set (reg:SI 123)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":72:29 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":72:29 -1
     (nil))
(insn 29 28 30 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 123)
            (reg:SI 124))) "../Core/Src/syscalls.c":72:29 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "../Core/Src/syscalls.c":72:29 -1
     (nil)
 -> 26)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       5 (FALLTHRU)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 35 6 (set (reg:SI 116 [ _11 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":77:10 -1
     (nil))
(insn 35 32 39 6 (set (reg:SI 117 [ <retval> ])
        (reg:SI 116 [ _11 ])) "../Core/Src/syscalls.c":77:10 -1
     (nil))
(insn 39 35 40 6 (set (reg/i:SI 0 r0)
        (reg:SI 117 [ <retval> ])) "../Core/Src/syscalls.c":78:1 -1
     (nil))
(insn 40 39 0 6 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":78:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _write (_write, funcdef_no=30, decl_uid=7468, cgraph_uid=31, symbol_order=32)

__attribute__((weak))
int _write (int file, char * ptr, int len)
{
  int DataIdx;
  int D.7529;
  char * ptr.1_1;
  char _2;
  int _3;
  int _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  DataIdx_7 = 0;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  ptr.1_1 = ptr_4;
  ptr_12 = ptr.1_1 + 1;
  _2 = *ptr.1_1;
  _3 = (int) _2;
  __io_putchar (_3);
  DataIdx_14 = DataIdx_5 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # ptr_4 = PHI <ptr_8(D)(2), ptr_12(3)>
  # DataIdx_5 = PHI <DataIdx_7(2), DataIdx_14(3)>
  if (DataIdx_5 < len_10(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _11 = len_10(D);
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (ptr.1_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (ptr_4 - 4 )
Partition 5 (DataIdx_5 - 5 )
Partition 7 (DataIdx_7 - 7 )
Partition 8 (ptr_8(D) - 8 )
Partition 10 (len_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (ptr_12 - 12 )
Partition 14 (DataIdx_14 - 14 )
Partition 15 (file_15(D) - 15 )
Partition 16 (_16(D) - 16 )


Coalescible Partition map 

Partition 0, base 0 (ptr_4 - 4 8 12 )
Partition 1, base 1 (DataIdx_5 - 5 7 14 )
Partition 4, base 2 (len_10(D) - 10 )
Partition 7, base 3 (file_15(D) - 15 )
Partition 8, base 4 (_16(D) - 16 )


Partition map 

Partition 0 (ptr_4 - 4 )
Partition 1 (DataIdx_5 - 5 )
Partition 2 (DataIdx_7 - 7 )
Partition 3 (ptr_8(D) - 8 )
Partition 4 (len_10(D) - 10 )
Partition 5 (ptr_12 - 12 )
Partition 6 (DataIdx_14 - 14 )
Partition 7 (file_15(D) - 15 )
Partition 8 (_16(D) - 16 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483647, 0) ptr_4 <-> ptr_8(D)
(2147483647, 0) ptr_4 <-> ptr_12
(2147483646, 0) DataIdx_5 <-> DataIdx_7
(2147483646, 0) DataIdx_5 <-> DataIdx_14

Partition map 

Partition 0 (ptr_4 - 4 )
Partition 1 (DataIdx_5 - 5 )
Partition 2 (DataIdx_7 - 7 )
Partition 3 (ptr_8(D) - 8 )
Partition 4 (len_10(D) - 10 )
Partition 5 (ptr_12 - 12 )
Partition 6 (DataIdx_14 - 14 )
Partition 7 (file_15(D) - 15 )
Partition 8 (_16(D) - 16 )

Coalesce list: (4)ptr_4 & (8)ptr_8(D) [map: 0, 3] : Success -> 0
Coalesce list: (4)ptr_4 & (12)ptr_12 [map: 0, 5] : Success -> 0
Coalesce list: (5)DataIdx_5 & (7)DataIdx_7 [map: 1, 2] : Success -> 1
Coalesce list: (5)DataIdx_5 & (14)DataIdx_14 [map: 1, 6] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (ptr.1_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (ptr_4 - 4 8 12 )
Partition 4 (DataIdx_5 - 5 7 14 )
Partition 5 (len_10(D) - 10 )
Partition 6 (_11 - 11 )
Partition 7 (file_15(D) - 15 )
Partition 8 (_16(D) - 16 )

__attribute__((weak))
int _write (int file, char * ptr, int len)
{
  int DataIdx;
  int D.7529;
  char * ptr.1_1;
  char _2;
  int _3;
  int _11;
  int _16(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  DataIdx_7 = 0;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  ptr.1_1 = ptr_4;
  ptr_12 = ptr.1_1 + 1;
  _2 = *ptr.1_1;
  _3 = (int) _2;
  __io_putchar (_3);
  DataIdx_14 = DataIdx_5 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # ptr_4 = PHI <ptr_8(D)(2), ptr_12(3)>
  # DataIdx_5 = PHI <DataIdx_7(2), DataIdx_14(3)>
  if (DataIdx_5 < len_10(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _11 = len_10(D);
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _11;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; DataIdx_7 = 0;

(insn 8 7 9 (set (reg:SI 118)
        (const_int 0 [0])) "../Core/Src/syscalls.c":85:16 -1
     (nil))

(insn 9 8 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 118)) "../Core/Src/syscalls.c":85:16 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; ptr.1_1 = ptr_4;

(insn 13 12 0 (set (reg/f:SI 113 [ ptr.1_1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])) "../Core/Src/syscalls.c":87:22 -1
     (nil))

;; ptr_12 = ptr.1_1 + 1;

(insn 14 13 15 (set (reg:SI 119)
        (plus:SI (reg/f:SI 113 [ ptr.1_1 ])
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":87:22 -1
     (nil))

(insn 15 14 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])
        (reg:SI 119)) "../Core/Src/syscalls.c":87:22 -1
     (nil))

;; _2 = *ptr.1_1;

(insn 16 15 0 (set (reg:SI 114 [ _2 ])
        (zero_extend:SI (mem:QI (reg/f:SI 113 [ ptr.1_1 ]) [0 *ptr.1_1+0 S1 A8]))) "../Core/Src/syscalls.c":87:18 -1
     (nil))

;; _3 = (int) _2;

(insn 17 16 0 (set (reg:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "../Core/Src/syscalls.c":87:5 -1
     (nil))

;; __io_putchar (_3);

(insn 18 17 19 (set (reg:SI 0 r0)
        (reg:SI 115 [ _3 ])) "../Core/Src/syscalls.c":87:5 -1
     (nil))

(call_insn 19 18 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("__io_putchar") [flags 0x41]  <function_decl 0000000006251400 __io_putchar>) [0 __io_putchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":87:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))

;; DataIdx_14 = DataIdx_5 + 1;

(insn 20 19 21 (set (reg:SI 121)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":85:43 -1
     (nil))

(insn 21 20 22 (set (reg:SI 120)
        (plus:SI (reg:SI 121)
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":85:43 -1
     (nil))

(insn 22 21 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 120)) "../Core/Src/syscalls.c":85:43 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 13 (nil) [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; if (DataIdx_5 < len_10(D))

(insn 26 24 27 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":85:29 -1
     (nil))

(insn 27 26 28 (set (reg:SI 123)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":85:29 -1
     (nil))

(insn 28 27 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 122)
            (reg:SI 123))) "../Core/Src/syscalls.c":85:29 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Core/Src/syscalls.c":85:29 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _11 = len_10(D);

(insn 31 30 0 (set (reg:SI 116 [ _11 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":89:10 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 32 31 33 15 (nil) [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 34 33 35 (set (reg:SI 117 [ <retval> ])
        (reg:SI 116 [ _11 ])) "../Core/Src/syscalls.c":89:10 -1
     (nil))

(jump_insn 35 34 36 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":89:10 -1
     (nil))

(barrier 36 35 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 35.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":81:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])
        (reg:SI 1 r1 [ ptr ])) "../Core/Src/syscalls.c":81:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])
        (reg:SI 2 r2 [ len ])) "../Core/Src/syscalls.c":81:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 118)
        (const_int 0 [0])) "../Core/Src/syscalls.c":85:16 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 118)) "../Core/Src/syscalls.c":85:16 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (label_ref 23)) "../Core/Src/syscalls.c":85:3 -1
     (nil)
 -> 23)
;;  succ:       5 ../Core/Src/syscalls.c:85:3

(barrier 11 10 25)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       5
(code_label 25 11 12 4 14 (nil) [1 uses])
(note 12 25 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:SI 113 [ ptr.1_1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])) "../Core/Src/syscalls.c":87:22 -1
     (nil))
(insn 14 13 15 4 (set (reg:SI 119)
        (plus:SI (reg/f:SI 113 [ ptr.1_1 ])
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":87:22 -1
     (nil))
(insn 15 14 16 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [7 ptr+0 S4 A32])
        (reg:SI 119)) "../Core/Src/syscalls.c":87:22 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 114 [ _2 ])
        (zero_extend:SI (mem:QI (reg/f:SI 113 [ ptr.1_1 ]) [0 *ptr.1_1+0 S1 A8]))) "../Core/Src/syscalls.c":87:18 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 115 [ _3 ])
        (reg:SI 114 [ _2 ])) "../Core/Src/syscalls.c":87:5 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 0 r0)
        (reg:SI 115 [ _3 ])) "../Core/Src/syscalls.c":87:5 -1
     (nil))
(call_insn 19 18 20 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("__io_putchar") [flags 0x41]  <function_decl 0000000006251400 __io_putchar>) [0 __io_putchar S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":87:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 20 19 21 4 (set (reg:SI 121)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":85:43 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 120)
        (plus:SI (reg:SI 121)
            (const_int 1 [0x1]))) "../Core/Src/syscalls.c":85:43 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])
        (reg:SI 120)) "../Core/Src/syscalls.c":85:43 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 ../Core/Src/syscalls.c:85:3
;;              4 (FALLTHRU,DFS_BACK)
(code_label 23 22 24 5 13 (nil) [1 uses])
(note 24 23 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 24 27 5 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 DataIdx+0 S4 A32])) "../Core/Src/syscalls.c":85:29 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 123)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":85:29 -1
     (nil))
(insn 28 27 29 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 122)
            (reg:SI 123))) "../Core/Src/syscalls.c":85:29 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Core/Src/syscalls.c":85:29 -1
     (nil)
 -> 25)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       5 (FALLTHRU)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 34 6 (set (reg:SI 116 [ _11 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 len+0 S4 A32])) "../Core/Src/syscalls.c":89:10 -1
     (nil))
(insn 34 31 38 6 (set (reg:SI 117 [ <retval> ])
        (reg:SI 116 [ _11 ])) "../Core/Src/syscalls.c":89:10 -1
     (nil))
(insn 38 34 39 6 (set (reg/i:SI 0 r0)
        (reg:SI 117 [ <retval> ])) "../Core/Src/syscalls.c":90:1 -1
     (nil))
(insn 39 38 0 6 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":90:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _close (_close, funcdef_no=31, decl_uid=7476, cgraph_uid=32, symbol_order=33)

int _close (int file)
{
  int D.7531;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (file_3(D) - 3 )
Partition 4 (_4(D) - 4 )


Coalescible Partition map 

Partition 0, base 0 (file_3(D) - 3 )
Partition 1, base 1 (_4(D) - 4 )


Partition map 

Partition 0 (file_3(D) - 3 )
Partition 1 (_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (file_3(D) - 3 )
Partition 1 (_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (file_3(D) - 3 )
Partition 2 (_4(D) - 4 )

int _close (int file)
{
  int D.7531;
  int _1;
  int _4(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = -1;

(insn 6 5 0 (set (reg:SI 113 [ _1 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":95:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 7 6 8 17 (nil) [0 uses])

(note 8 7 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 9 8 10 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":95:10 -1
     (nil))

(jump_insn 10 9 11 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":95:10 -1
     (nil))

(barrier 11 10 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 10.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":93:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 113 [ _1 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":95:10 -1
     (nil))
(insn 9 6 13 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":95:10 -1
     (nil))
(insn 13 9 14 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":96:1 -1
     (nil))
(insn 14 13 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":96:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _fstat (_fstat, funcdef_no=32, decl_uid=7480, cgraph_uid=33, symbol_order=34)

int _fstat (int file, struct stat * st)
{
  int D.7533;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  st_2(D)->st_mode = 8192;
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 2 (st_2(D) - 2 )
Partition 4 (_4 - 4 )
Partition 5 (file_5(D) - 5 )
Partition 6 (_6(D) - 6 )


Coalescible Partition map 

Partition 0, base 0 (st_2(D) - 2 )
Partition 1, base 1 (file_5(D) - 5 )
Partition 2, base 2 (_6(D) - 6 )


Partition map 

Partition 0 (st_2(D) - 2 )
Partition 1 (file_5(D) - 5 )
Partition 2 (_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (st_2(D) - 2 )
Partition 1 (file_5(D) - 5 )
Partition 2 (_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (st_2(D) - 2 )
Partition 1 (_4 - 4 )
Partition 2 (file_5(D) - 5 )
Partition 3 (_6(D) - 6 )

int _fstat (int file, struct stat * st)
{
  int D.7533;
  int _4;
  int _6(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  st_2(D)->st_mode = 8192;
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; st_2(D)->st_mode = 8192;

(insn 7 6 8 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 st+0 S4 A32])) "../Core/Src/syscalls.c":102:15 -1
     (nil))

(insn 8 7 9 (set (reg:SI 116)
        (const_int 8192 [0x2000])) "../Core/Src/syscalls.c":102:15 -1
     (nil))

(insn 9 8 0 (set (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [2 st_2(D)->st_mode+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":102:15 -1
     (nil))

;; _4 = 0;

(insn 10 9 0 (set (reg:SI 113 [ _4 ])
        (const_int 0 [0])) "../Core/Src/syscalls.c":103:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 11 10 12 19 (nil) [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 13 12 14 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _4 ])) "../Core/Src/syscalls.c":103:10 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":103:10 -1
     (nil))

(barrier 15 14 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":100:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 st+0 S4 A32])
        (reg:SI 1 r1 [ st ])) "../Core/Src/syscalls.c":100:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 st+0 S4 A32])) "../Core/Src/syscalls.c":102:15 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 116)
        (const_int 8192 [0x2000])) "../Core/Src/syscalls.c":102:15 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [2 st_2(D)->st_mode+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":102:15 -1
     (nil))
(insn 10 9 13 2 (set (reg:SI 113 [ _4 ])
        (const_int 0 [0])) "../Core/Src/syscalls.c":103:10 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _4 ])) "../Core/Src/syscalls.c":103:10 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":104:1 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":104:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _isatty (_isatty, funcdef_no=33, decl_uid=7483, cgraph_uid=34, symbol_order=35)

int _isatty (int file)
{
  int D.7535;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (file_3(D) - 3 )
Partition 4 (_4(D) - 4 )


Coalescible Partition map 

Partition 0, base 0 (file_3(D) - 3 )
Partition 1, base 1 (_4(D) - 4 )


Partition map 

Partition 0 (file_3(D) - 3 )
Partition 1 (_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (file_3(D) - 3 )
Partition 1 (_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (file_3(D) - 3 )
Partition 2 (_4(D) - 4 )

int _isatty (int file)
{
  int D.7535;
  int _1;
  int _4(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 1;

(insn 6 5 0 (set (reg:SI 113 [ _1 ])
        (const_int 1 [0x1])) "../Core/Src/syscalls.c":109:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 7 6 8 21 (nil) [0 uses])

(note 8 7 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 9 8 10 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":109:10 -1
     (nil))

(jump_insn 10 9 11 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":109:10 -1
     (nil))

(barrier 11 10 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 10.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":107:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 113 [ _1 ])
        (const_int 1 [0x1])) "../Core/Src/syscalls.c":109:10 -1
     (nil))
(insn 9 6 13 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":109:10 -1
     (nil))
(insn 13 9 14 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":110:1 -1
     (nil))
(insn 14 13 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":110:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _lseek (_lseek, funcdef_no=34, decl_uid=7488, cgraph_uid=35, symbol_order=36)

int _lseek (int file, int ptr, int dir)
{
  int D.7537;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (file_3(D) - 3 )
Partition 4 (ptr_4(D) - 4 )
Partition 5 (dir_5(D) - 5 )
Partition 6 (_6(D) - 6 )


Coalescible Partition map 

Partition 0, base 0 (file_3(D) - 3 )
Partition 1, base 1 (ptr_4(D) - 4 )
Partition 2, base 2 (dir_5(D) - 5 )
Partition 3, base 3 (_6(D) - 6 )


Partition map 

Partition 0 (file_3(D) - 3 )
Partition 1 (ptr_4(D) - 4 )
Partition 2 (dir_5(D) - 5 )
Partition 3 (_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (file_3(D) - 3 )
Partition 1 (ptr_4(D) - 4 )
Partition 2 (dir_5(D) - 5 )
Partition 3 (_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (file_3(D) - 3 )
Partition 2 (ptr_4(D) - 4 )
Partition 3 (dir_5(D) - 5 )
Partition 4 (_6(D) - 6 )

int _lseek (int file, int ptr, int dir)
{
  int D.7537;
  int _1;
  int _6(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 0;

(insn 8 7 0 (set (reg:SI 113 [ _1 ])
        (const_int 0 [0])) "../Core/Src/syscalls.c":117:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 9 8 10 23 (nil) [0 uses])

(note 10 9 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 11 10 12 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":117:10 -1
     (nil))

(jump_insn 12 11 13 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":117:10 -1
     (nil))

(barrier 13 12 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 12.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":113:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ptr+0 S4 A32])
        (reg:SI 1 r1 [ ptr ])) "../Core/Src/syscalls.c":113:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 dir+0 S4 A32])
        (reg:SI 2 r2 [ dir ])) "../Core/Src/syscalls.c":113:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 11 2 (set (reg:SI 113 [ _1 ])
        (const_int 0 [0])) "../Core/Src/syscalls.c":117:10 -1
     (nil))
(insn 11 8 15 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":117:10 -1
     (nil))
(insn 15 11 16 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":118:1 -1
     (nil))
(insn 16 15 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":118:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _open (_open, funcdef_no=35, decl_uid=7492, cgraph_uid=36, symbol_order=37)

int _open (char * path, int flags)
{
  int D.7539;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (path_3(D) - 3 )
Partition 4 (flags_4(D) - 4 )
Partition 5 (_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (path_3(D) - 3 )
Partition 1, base 1 (flags_4(D) - 4 )
Partition 2, base 2 (_5(D) - 5 )


Partition map 

Partition 0 (path_3(D) - 3 )
Partition 1 (flags_4(D) - 4 )
Partition 2 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (path_3(D) - 3 )
Partition 1 (flags_4(D) - 4 )
Partition 2 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (path_3(D) - 3 )
Partition 2 (flags_4(D) - 4 )
Partition 3 (_5(D) - 5 )

int _open (char * path, int flags)
{
  int D.7539;
  int _1;
  int _5(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = -1;

(insn 6 5 0 (set (reg:SI 113 [ _1 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":125:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 7 6 8 25 (nil) [0 uses])

(note 8 7 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 9 8 10 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":125:10 -1
     (nil))

(jump_insn 10 9 11 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":125:10 -1
     (nil))

(barrier 11 10 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 10.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [7 path+0 S4 A32])
        (reg:SI 0 r0 [ path ])) "../Core/Src/syscalls.c":121:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 113 [ _1 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":125:10 -1
     (nil))
(insn 9 6 13 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":125:10 -1
     (nil))
(insn 13 9 14 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":126:1 -1
     (nil))
(insn 14 13 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":126:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _wait (_wait, funcdef_no=36, decl_uid=7495, cgraph_uid=37, symbol_order=38)

int _wait (int * status)
{
  int D.7541;
  int * _1;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 10;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (status_6(D) - 6 )
Partition 7 (_7(D) - 7 )


Coalescible Partition map 

Partition 0, base 0 (status_6(D) - 6 )
Partition 1, base 1 (_7(D) - 7 )


Partition map 

Partition 0 (status_6(D) - 6 )
Partition 1 (_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (status_6(D) - 6 )
Partition 1 (_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_5 - 5 )
Partition 2 (status_6(D) - 6 )
Partition 3 (_7(D) - 7 )

int _wait (int * status)
{
  int D.7541;
  int * _1;
  int _5;
  int _7(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 10;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = __errno ();

(call_insn 6 5 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":131:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 7 6 0 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":131:3 -1
     (nil))

;; *_1 = 10;

(insn 8 7 9 (set (reg:SI 116)
        (const_int 10 [0xa])) "../Core/Src/syscalls.c":131:9 -1
     (nil))

(insn 9 8 0 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":131:9 -1
     (nil))

;; _5 = -1;

(insn 10 9 0 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":132:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 11 10 12 27 (nil) [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 13 12 14 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":132:10 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":132:10 -1
     (nil))

(barrier 15 14 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [11 status+0 S4 A32])
        (reg:SI 0 r0 [ status ])) "../Core/Src/syscalls.c":129:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":131:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":131:3 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 116)
        (const_int 10 [0xa])) "../Core/Src/syscalls.c":131:9 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":131:9 -1
     (nil))
(insn 10 9 13 2 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":132:10 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":132:10 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "../Core/Src/syscalls.c":133:1 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":133:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _unlink (_unlink, funcdef_no=37, decl_uid=7498, cgraph_uid=38, symbol_order=39)

int _unlink (char * name)
{
  int D.7543;
  int * _1;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 2;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (name_6(D) - 6 )
Partition 7 (_7(D) - 7 )


Coalescible Partition map 

Partition 0, base 0 (name_6(D) - 6 )
Partition 1, base 1 (_7(D) - 7 )


Partition map 

Partition 0 (name_6(D) - 6 )
Partition 1 (_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (name_6(D) - 6 )
Partition 1 (_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_5 - 5 )
Partition 2 (name_6(D) - 6 )
Partition 3 (_7(D) - 7 )

int _unlink (char * name)
{
  int D.7543;
  int * _1;
  int _5;
  int _7(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 2;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = __errno ();

(call_insn 6 5 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":138:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 7 6 0 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":138:3 -1
     (nil))

;; *_1 = 2;

(insn 8 7 9 (set (reg:SI 116)
        (const_int 2 [0x2])) "../Core/Src/syscalls.c":138:9 -1
     (nil))

(insn 9 8 0 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":138:9 -1
     (nil))

;; _5 = -1;

(insn 10 9 0 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":139:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 11 10 12 29 (nil) [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 13 12 14 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":139:10 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":139:10 -1
     (nil))

(barrier 15 14 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [7 name+0 S4 A32])
        (reg:SI 0 r0 [ name ])) "../Core/Src/syscalls.c":136:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":138:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":138:3 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 116)
        (const_int 2 [0x2])) "../Core/Src/syscalls.c":138:9 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":138:9 -1
     (nil))
(insn 10 9 13 2 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":139:10 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":139:10 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "../Core/Src/syscalls.c":140:1 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":140:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _times (_times, funcdef_no=38, decl_uid=7501, cgraph_uid=39, symbol_order=40)

int _times (struct tms * buf)
{
  int D.7545;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (buf_3(D) - 3 )
Partition 4 (_4(D) - 4 )


Coalescible Partition map 

Partition 0, base 0 (buf_3(D) - 3 )
Partition 1, base 1 (_4(D) - 4 )


Partition map 

Partition 0 (buf_3(D) - 3 )
Partition 1 (_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (buf_3(D) - 3 )
Partition 1 (_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (buf_3(D) - 3 )
Partition 2 (_4(D) - 4 )

int _times (struct tms * buf)
{
  int D.7545;
  int _1;
  int _4(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = -1;

(insn 6 5 0 (set (reg:SI 113 [ _1 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":145:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 7 6 8 31 (nil) [0 uses])

(note 8 7 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 9 8 10 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":145:10 -1
     (nil))

(jump_insn 10 9 11 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":145:10 -1
     (nil))

(barrier 11 10 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 10.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [12 buf+0 S4 A32])
        (reg:SI 0 r0 [ buf ])) "../Core/Src/syscalls.c":143:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 113 [ _1 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":145:10 -1
     (nil))
(insn 9 6 13 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _1 ])) "../Core/Src/syscalls.c":145:10 -1
     (nil))
(insn 13 9 14 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":146:1 -1
     (nil))
(insn 14 13 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":146:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _stat (_stat, funcdef_no=39, decl_uid=7505, cgraph_uid=40, symbol_order=41)

int _stat (char * file, struct stat * st)
{
  int D.7547;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  st_2(D)->st_mode = 8192;
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 2 (st_2(D) - 2 )
Partition 4 (_4 - 4 )
Partition 5 (file_5(D) - 5 )
Partition 6 (_6(D) - 6 )


Coalescible Partition map 

Partition 0, base 0 (st_2(D) - 2 )
Partition 1, base 1 (file_5(D) - 5 )
Partition 2, base 2 (_6(D) - 6 )


Partition map 

Partition 0 (st_2(D) - 2 )
Partition 1 (file_5(D) - 5 )
Partition 2 (_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (st_2(D) - 2 )
Partition 1 (file_5(D) - 5 )
Partition 2 (_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (st_2(D) - 2 )
Partition 1 (_4 - 4 )
Partition 2 (file_5(D) - 5 )
Partition 3 (_6(D) - 6 )

int _stat (char * file, struct stat * st)
{
  int D.7547;
  int _4;
  int _6(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  st_2(D)->st_mode = 8192;
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; st_2(D)->st_mode = 8192;

(insn 7 6 8 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 st+0 S4 A32])) "../Core/Src/syscalls.c":151:15 -1
     (nil))

(insn 8 7 9 (set (reg:SI 116)
        (const_int 8192 [0x2000])) "../Core/Src/syscalls.c":151:15 -1
     (nil))

(insn 9 8 0 (set (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [2 st_2(D)->st_mode+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":151:15 -1
     (nil))

;; _4 = 0;

(insn 10 9 0 (set (reg:SI 113 [ _4 ])
        (const_int 0 [0])) "../Core/Src/syscalls.c":152:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 11 10 12 33 (nil) [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 13 12 14 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _4 ])) "../Core/Src/syscalls.c":152:10 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":152:10 -1
     (nil))

(barrier 15 14 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [7 file+0 S4 A32])
        (reg:SI 0 r0 [ file ])) "../Core/Src/syscalls.c":149:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 st+0 S4 A32])
        (reg:SI 1 r1 [ st ])) "../Core/Src/syscalls.c":149:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 st+0 S4 A32])) "../Core/Src/syscalls.c":151:15 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 116)
        (const_int 8192 [0x2000])) "../Core/Src/syscalls.c":151:15 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [2 st_2(D)->st_mode+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":151:15 -1
     (nil))
(insn 10 9 13 2 (set (reg:SI 113 [ _4 ])
        (const_int 0 [0])) "../Core/Src/syscalls.c":152:10 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ _4 ])) "../Core/Src/syscalls.c":152:10 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 r0)
        (reg:SI 114 [ <retval> ])) "../Core/Src/syscalls.c":153:1 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":153:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _link (_link, funcdef_no=40, decl_uid=7509, cgraph_uid=41, symbol_order=42)

int _link (char * old, char * new)
{
  int D.7549;
  int * _1;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 31;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (old_6(D) - 6 )
Partition 7 (new_7(D) - 7 )
Partition 8 (_8(D) - 8 )


Coalescible Partition map 

Partition 0, base 0 (old_6(D) - 6 )
Partition 1, base 1 (new_7(D) - 7 )
Partition 2, base 2 (_8(D) - 8 )


Partition map 

Partition 0 (old_6(D) - 6 )
Partition 1 (new_7(D) - 7 )
Partition 2 (_8(D) - 8 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (old_6(D) - 6 )
Partition 1 (new_7(D) - 7 )
Partition 2 (_8(D) - 8 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_5 - 5 )
Partition 2 (old_6(D) - 6 )
Partition 3 (new_7(D) - 7 )
Partition 4 (_8(D) - 8 )

int _link (char * old, char * new)
{
  int D.7549;
  int * _1;
  int _5;
  int _8(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 31;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = __errno ();

(call_insn 7 6 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":159:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 8 7 0 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":159:3 -1
     (nil))

;; *_1 = 31;

(insn 9 8 10 (set (reg:SI 116)
        (const_int 31 [0x1f])) "../Core/Src/syscalls.c":159:9 -1
     (nil))

(insn 10 9 0 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":159:9 -1
     (nil))

;; _5 = -1;

(insn 11 10 0 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":160:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 12 11 13 35 (nil) [0 uses])

(note 13 12 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 14 13 15 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":160:10 -1
     (nil))

(jump_insn 15 14 16 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":160:10 -1
     (nil))

(barrier 16 15 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 15.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [7 old+0 S4 A32])
        (reg:SI 0 r0 [ old ])) "../Core/Src/syscalls.c":156:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [7 new+0 S4 A32])
        (reg:SI 1 r1 [ new ])) "../Core/Src/syscalls.c":156:1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 7 4 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":159:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":159:3 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 116)
        (const_int 31 [0x1f])) "../Core/Src/syscalls.c":159:9 -1
     (nil))
(insn 10 9 11 2 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":159:9 -1
     (nil))
(insn 11 10 14 2 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":160:10 -1
     (nil))
(insn 14 11 18 2 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":160:10 -1
     (nil))
(insn 18 14 19 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "../Core/Src/syscalls.c":161:1 -1
     (nil))
(insn 19 18 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":161:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _fork (_fork, funcdef_no=41, decl_uid=7512, cgraph_uid=42, symbol_order=43)

int _fork ()
{
  int D.7551;
  int * _1;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 11;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (_6(D) - 6 )


Coalescible Partition map 

Partition 0, base 0 (_6(D) - 6 )


Partition map 

Partition 0 (_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_5 - 5 )
Partition 2 (_6(D) - 6 )

int _fork ()
{
  int D.7551;
  int * _1;
  int _5;
  int _6(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 11;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = __errno ();

(call_insn 5 4 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":165:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 6 5 0 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":165:3 -1
     (nil))

;; *_1 = 11;

(insn 7 6 8 (set (reg:SI 116)
        (const_int 11 [0xb])) "../Core/Src/syscalls.c":165:9 -1
     (nil))

(insn 8 7 0 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":165:9 -1
     (nil))

;; _5 = -1;

(insn 9 8 0 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":166:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 10 9 11 37 (nil) [0 uses])

(note 11 10 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 12 11 13 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":166:10 -1
     (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":166:10 -1
     (nil))

(barrier 14 13 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 13.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":165:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 6 5 7 2 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":165:3 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 116)
        (const_int 11 [0xb])) "../Core/Src/syscalls.c":165:9 -1
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":165:9 -1
     (nil))
(insn 9 8 12 2 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":166:10 -1
     (nil))
(insn 12 9 16 2 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":166:10 -1
     (nil))
(insn 16 12 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "../Core/Src/syscalls.c":167:1 -1
     (nil))
(insn 17 16 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":167:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function _execve (_execve, funcdef_no=42, decl_uid=7517, cgraph_uid=43, symbol_order=44)

int _execve (char * name, char * * argv, char * * env)
{
  int D.7553;
  int * _1;
  int _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 12;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 5 (_5 - 5 )
Partition 6 (name_6(D) - 6 )
Partition 7 (argv_7(D) - 7 )
Partition 8 (env_8(D) - 8 )
Partition 9 (_9(D) - 9 )


Coalescible Partition map 

Partition 0, base 0 (name_6(D) - 6 )
Partition 1, base 1 (argv_7(D) - 7 )
Partition 2, base 2 (env_8(D) - 8 )
Partition 3, base 3 (_9(D) - 9 )


Partition map 

Partition 0 (name_6(D) - 6 )
Partition 1 (argv_7(D) - 7 )
Partition 2 (env_8(D) - 8 )
Partition 3 (_9(D) - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (name_6(D) - 6 )
Partition 1 (argv_7(D) - 7 )
Partition 2 (env_8(D) - 8 )
Partition 3 (_9(D) - 9 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_5 - 5 )
Partition 2 (name_6(D) - 6 )
Partition 3 (argv_7(D) - 7 )
Partition 4 (env_8(D) - 8 )
Partition 5 (_9(D) - 9 )

int _execve (char * name, char * * argv, char * * env)
{
  int D.7553;
  int * _1;
  int _5;
  int _9(D);

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = __errno ();
  *_1 = 12;
  _5 = -1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = __errno ();

(call_insn 8 7 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":174:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 9 8 0 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":174:3 -1
     (nil))

;; *_1 = 12;

(insn 10 9 11 (set (reg:SI 116)
        (const_int 12 [0xc])) "../Core/Src/syscalls.c":174:9 -1
     (nil))

(insn 11 10 0 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":174:9 -1
     (nil))

;; _5 = -1;

(insn 12 11 0 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":175:10 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 13 12 14 39 (nil) [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 15 14 16 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":175:10 -1
     (nil))

(jump_insn 16 15 17 (set (pc)
        (label_ref 0)) "../Core/Src/syscalls.c":175:10 -1
     (nil))

(barrier 17 16 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 16.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [7 name+0 S4 A32])
        (reg:SI 0 r0 [ name ])) "../Core/Src/syscalls.c":170:1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [8 argv+0 S4 A32])
        (reg:SI 1 r1 [ argv ])) "../Core/Src/syscalls.c":170:1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [8 env+0 S4 A32])
        (reg:SI 2 r2 [ env ])) "../Core/Src/syscalls.c":170:1 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 8 5 9 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000006199200 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/syscalls.c":174:3 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 113 [ _1 ])
        (reg:SI 0 r0)) "../Core/Src/syscalls.c":174:3 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 116)
        (const_int 12 [0xc])) "../Core/Src/syscalls.c":174:9 -1
     (nil))
(insn 11 10 12 2 (set (mem:SI (reg/f:SI 113 [ _1 ]) [1 *_1+0 S4 A32])
        (reg:SI 116)) "../Core/Src/syscalls.c":174:9 -1
     (nil))
(insn 12 11 15 2 (set (reg:SI 114 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "../Core/Src/syscalls.c":175:10 -1
     (nil))
(insn 15 12 19 2 (set (reg:SI 115 [ <retval> ])
        (reg:SI 114 [ _5 ])) "../Core/Src/syscalls.c":175:10 -1
     (nil))
(insn 19 15 20 2 (set (reg/i:SI 0 r0)
        (reg:SI 115 [ <retval> ])) "../Core/Src/syscalls.c":176:1 -1
     (nil))
(insn 20 19 0 2 (use (reg/i:SI 0 r0)) "../Core/Src/syscalls.c":176:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

