
;; Function NMI_Handler (NMI_Handler, funcdef_no=134, decl_uid=7899, cgraph_uid=139, symbol_order=138)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 [always] 
(code_label 7 2 5 3 2 (nil) [1 uses])
(note 5 7 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:75:10

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL)
;;  pred:       3 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:75:10
(note 14 5 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 6 5 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":75:10 -1
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED, VISITED)
;;  pred:       5 [always]  (FALLTHRU)
(note 6 15 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 6 13 4 (set (pc)
        (label_ref 7)) -1
     (nil)
 -> 7)
;;  succ:       3 [always] 

(barrier 13 12 0)

;; Function HardFault_Handler (HardFault_Handler, funcdef_no=135, decl_uid=7901, cgraph_uid=140, symbol_order=139)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 [always] 
(code_label 7 2 5 3 4 (nil) [1 uses])
(note 5 7 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:89:9

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL)
;;  pred:       3 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:89:9
(note 14 5 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 6 5 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":89:9 -1
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED, VISITED)
;;  pred:       5 [always]  (FALLTHRU)
(note 6 15 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 6 13 4 (set (pc)
        (label_ref 7)) -1
     (nil)
 -> 7)
;;  succ:       3 [always] 

(barrier 13 12 0)

;; Function MemManage_Handler (MemManage_Handler, funcdef_no=136, decl_uid=7903, cgraph_uid=141, symbol_order=140)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 [always] 
(code_label 7 2 5 3 6 (nil) [1 uses])
(note 5 7 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:104:9

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL)
;;  pred:       3 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:104:9
(note 14 5 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 6 5 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":104:9 -1
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED, VISITED)
;;  pred:       5 [always]  (FALLTHRU)
(note 6 15 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 6 13 4 (set (pc)
        (label_ref 7)) -1
     (nil)
 -> 7)
;;  succ:       3 [always] 

(barrier 13 12 0)

;; Function BusFault_Handler (BusFault_Handler, funcdef_no=137, decl_uid=7905, cgraph_uid=142, symbol_order=141)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 [always] 
(code_label 7 2 5 3 8 (nil) [1 uses])
(note 5 7 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:119:9

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL)
;;  pred:       3 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:119:9
(note 14 5 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 6 5 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":119:9 -1
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED, VISITED)
;;  pred:       5 [always]  (FALLTHRU)
(note 6 15 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 6 13 4 (set (pc)
        (label_ref 7)) -1
     (nil)
 -> 7)
;;  succ:       3 [always] 

(barrier 13 12 0)

;; Function UsageFault_Handler (UsageFault_Handler, funcdef_no=138, decl_uid=7907, cgraph_uid=143, symbol_order=142)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       2 [always]  (FALLTHRU)
;;              4 [always] 
(code_label 7 2 5 3 10 (nil) [1 uses])
(note 5 7 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:134:9

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (NEW, RTL)
;;  pred:       3 (FALLTHRU) ../Core/Src/stm32f4xx_it.c:134:9
(note 14 5 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 6 5 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":134:9 -1
     (nil))
;;  succ:       4 [always]  (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED, VISITED)
;;  pred:       5 [always]  (FALLTHRU)
(note 6 15 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 6 13 4 (set (pc)
        (label_ref 7)) -1
     (nil)
 -> 7)
;;  succ:       3 [always] 

(barrier 13 12 0)

;; Function SVC_Handler (SVC_Handler, funcdef_no=139, decl_uid=7909, cgraph_uid=144, symbol_order=143)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:152:1

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (NEW, RTL)
;;  pred:       2 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:152:1
(note 7 2 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 0 3 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":152:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function DebugMon_Handler (DebugMon_Handler, funcdef_no=140, decl_uid=7911, cgraph_uid=145, symbol_order=144)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:165:1

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (NEW, RTL)
;;  pred:       2 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:165:1
(note 7 2 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 0 3 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":165:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function PendSV_Handler (PendSV_Handler, funcdef_no=141, decl_uid=7913, cgraph_uid=146, symbol_order=145)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:178:1

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (NEW, RTL)
;;  pred:       2 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:178:1
(note 7 2 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 0 3 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":178:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function SysTick_Handler (SysTick_Handler, funcdef_no=142, decl_uid=7915, cgraph_uid=147, symbol_order=146)

(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, VISITED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 8 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_IncTick") [flags 0x41]  <function_decl 0000000006909b00 HAL_IncTick>) [0 HAL_IncTick S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Core/Src/stm32f4xx_it.c":188:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:192:1

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (NEW, RTL)
;;  pred:       2 [always]  (FALLTHRU) ../Core/Src/stm32f4xx_it.c:192:1
(note 8 5 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 0 3 (const_int 0 [0]) "../Core/Src/stm32f4xx_it.c":192:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

