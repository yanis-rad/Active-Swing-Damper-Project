
;; Function SystemInit (SystemInit, funcdef_no=134, decl_uid=6570, cgraph_uid=139, symbol_order=141)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 9:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 13: point = 0, n_alt = -1
  BB 2
   Insn 9: point = 0, n_alt = 7
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 5
   Insn 6: point = 4, n_alt = 5
   Insn 5: point = 6, n_alt = 5
 r113: [5..6]
 r114: [2..4]
 r115: [0..3]
 r116: [0..1]
Compressing live ranges: from 7 to 6 - 85%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..3]
 r116: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns


SystemInit

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,3u} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 39{28d,11u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int -536810240 [0xffffffffe000ed00])) "../Core/Src/system_stm32f4xx.c":171:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 136 [0x88])) [1 _1->CPACR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":171:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int -536810240 [0xffffffffe000ed00])) "../Core/Src/system_stm32f4xx.c":171:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ior:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 15728640 [0xf00000]))) "../Core/Src/system_stm32f4xx.c":171:16 106 {*iorsi3_insn}
     (nil))
(insn 9 8 12 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 136 [0x88])) [1 _3->CPACR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Core/Src/system_stm32f4xx.c":171:16 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Core/Src/system_stm32f4xx.c:182:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Core/Src/system_stm32f4xx.c:182:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 12 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 16 3 (const_int 0 [0]) "../Core/Src/system_stm32f4xx.c":182:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 16 13 0 NOTE_INSN_DELETED)

;; Function SystemCoreClockUpdate (SystemCoreClockUpdate, funcdef_no=135, decl_uid=6572, cgraph_uid=140, symbol_order=142)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 7:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 33:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 40:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 49:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) r  (2) r {udivsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =l  (1) %0  (2) l {*mul}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 66:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) r  (2) r {udivsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =l  (1) %0  (2) l {*mul}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 79:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 86:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 88:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) r  (2) r {udivsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 92:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 93:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 100:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 104:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 106:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 107:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 109:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 111:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 112:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 113:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7
EBB 8
EBB 9 10
EBB 11
EBB 12
EBB 13 15
EBB 14 16

********** Pseudo live ranges #1: **********

  BB 16
   Insn 132: point = 0, n_alt = -1
  BB 14
   Insn 115: point = 0, n_alt = 7
   Insn 114: point = 1, n_alt = 5
   Insn 113: point = 2, n_alt = 3
   Insn 112: point = 4, n_alt = 5
   Insn 111: point = 5, n_alt = 5
   Insn 110: point = 7, n_alt = 5
   Insn 109: point = 8, n_alt = 7
   Insn 108: point = 9, n_alt = 1
   Insn 107: point = 11, n_alt = 5
   Insn 106: point = 12, n_alt = 0
   Insn 105: point = 14, n_alt = 1
   Insn 104: point = 16, n_alt = 5
   Insn 103: point = 18, n_alt = 5
  BB 12
   Insn 127: point = 19, n_alt = -1
   Insn 93: point = 19, n_alt = 7
   Insn 92: point = 20, n_alt = 5
   Insn 91: point = 21, n_alt = 0
   Insn 90: point = 23, n_alt = 5
   Insn 89: point = 24, n_alt = 5
   Insn 88: point = 25, n_alt = 7
   Insn 87: point = 26, n_alt = 1
   Insn 86: point = 28, n_alt = 2
   Insn 85: point = 30, n_alt = 0
   Insn 84: point = 32, n_alt = 1
   Insn 83: point = 34, n_alt = 5
   Insn 82: point = 36, n_alt = 5
  BB 10
   Insn 125: point = 37, n_alt = -1
   Insn 66: point = 37, n_alt = 7
   Insn 65: point = 38, n_alt = 0
   Insn 64: point = 40, n_alt = 0
   Insn 63: point = 42, n_alt = 1
   Insn 62: point = 44, n_alt = 5
   Insn 61: point = 46, n_alt = 5
   Insn 60: point = 47, n_alt = 0
   Insn 59: point = 49, n_alt = 5
   Insn 58: point = 50, n_alt = 5
  BB 11
   Insn 79: point = 51, n_alt = 7
   Insn 78: point = 52, n_alt = 0
   Insn 77: point = 54, n_alt = 0
   Insn 76: point = 56, n_alt = 1
   Insn 75: point = 58, n_alt = 5
   Insn 74: point = 60, n_alt = 5
   Insn 73: point = 61, n_alt = 0
   Insn 72: point = 63, n_alt = 5
   Insn 71: point = 64, n_alt = 5
  BB 9
   Insn 56: point = 65, n_alt = -1
   Insn 55: point = 65, n_alt = 0
   Insn 54: point = 66, n_alt = 5
   Insn 53: point = 67, n_alt = 7
   Insn 52: point = 68, n_alt = 0
   Insn 51: point = 70, n_alt = 5
   Insn 50: point = 72, n_alt = 5
   Insn 49: point = 73, n_alt = 7
   Insn 48: point = 74, n_alt = 0
   Insn 47: point = 76, n_alt = 1
   Insn 46: point = 78, n_alt = 5
   Insn 45: point = 80, n_alt = 5
  BB 8
   Insn 123: point = 81, n_alt = -1
   Insn 40: point = 81, n_alt = 7
   Insn 39: point = 82, n_alt = 5
   Insn 38: point = 83, n_alt = 5
  BB 7
   Insn 121: point = 84, n_alt = -1
   Insn 33: point = 84, n_alt = 7
   Insn 32: point = 85, n_alt = 5
   Insn 31: point = 86, n_alt = 5
  BB 15
   Insn 130: point = 87, n_alt = -1
  BB 13
   Insn 100: point = 87, n_alt = 7
   Insn 99: point = 88, n_alt = 5
   Insn 98: point = 89, n_alt = 5
  BB 6
   Insn 119: point = 90, n_alt = -1
  BB 5
   Insn 25: point = 90, n_alt = -1
   Insn 24: point = 90, n_alt = 0
   Insn 23: point = 91, n_alt = 5
  BB 4
   Insn 21: point = 92, n_alt = -1
   Insn 20: point = 92, n_alt = 0
   Insn 19: point = 93, n_alt = 5
  BB 3
   Insn 17: point = 94, n_alt = -1
   Insn 16: point = 94, n_alt = 0
   Insn 15: point = 95, n_alt = 5
  BB 2
   Insn 11: point = 96, n_alt = -1
   Insn 10: point = 96, n_alt = 0
   Insn 9: point = 97, n_alt = 5
   Insn 8: point = 98, n_alt = 7
   Insn 7: point = 99, n_alt = 0
   Insn 6: point = 101, n_alt = 5
   Insn 5: point = 103, n_alt = 5
 r113: [102..103]
 r114: [100..101]
 r115: [79..80]
 r116: [77..78]
 r117: [75..76]
 r118: [71..72]
 r119: [69..70]
 r120: [39..47]
 r121: [45..46]
 r122: [43..44]
 r123: [41..42]
 r124: [39..40]
 r125: [53..61]
 r126: [59..60]
 r127: [57..58]
 r128: [55..56]
 r129: [53..54]
 r130: [35..36]
 r131: [33..34]
 r132: [31..32]
 r133: [29..30]
 r134: [27..28]
 r135: [19..21]
 r136: [17..18]
 r137: [15..16]
 r138: [13..14]
 r139: [10..12]
 r140: [8..9]
 r141: [3..5]
 r142: [0..2]
 r143: [98..99]
 r144: [96..97]
 r145: [94..95]
 r146: [92..93]
 r147: [90..91]
 r148: [84..86]
 r149: [84..85]
 r150: [81..83]
 r151: [81..82]
 r152: [73..74]
 r153: [67..68]
 r154: [65..66]
 r155: [48..50]
 r156: [48..49]
 r157: [37..38]
 r158: [62..64]
 r159: [62..63]
 r160: [51..52]
 r161: [25..26]
 r162: [22..24]
 r163: [22..23]
 r164: [19..20]
 r165: [87..89]
 r166: [87..88]
 r167: [10..11]
 r168: [6..7]
 r169: [3..4]
 r170: [0..1]
Compressing live ranges: from 104 to 92 - 88%
Ranges after the compression:
 r113: [90..91]
 r114: [88..89]
 r115: [70..71]
 r116: [68..69]
 r117: [66..67]
 r118: [62..63]
 r119: [60..61]
 r120: [34..41]
 r121: [40..41]
 r122: [38..39]
 r123: [36..37]
 r124: [34..35]
 r125: [46..53]
 r126: [52..53]
 r127: [50..51]
 r128: [48..49]
 r129: [46..47]
 r130: [30..31]
 r131: [28..29]
 r132: [26..27]
 r133: [24..25]
 r134: [22..23]
 r135: [16..17]
 r136: [14..15]
 r137: [12..13]
 r138: [10..11]
 r139: [8..9]
 r140: [6..7]
 r141: [2..3]
 r142: [0..1]
 r143: [86..87]
 r144: [84..85]
 r145: [82..83]
 r146: [80..81]
 r147: [78..79]
 r148: [74..75]
 r149: [74..75]
 r150: [72..73]
 r151: [72..73]
 r152: [64..65]
 r153: [58..59]
 r154: [56..57]
 r155: [42..43]
 r156: [42..43]
 r157: [32..33]
 r158: [54..55]
 r159: [54..55]
 r160: [44..45]
 r161: [20..21]
 r162: [18..19]
 r163: [18..19]
 r164: [16..17]
 r165: [76..77]
 r166: [76..77]
 r167: [8..9]
 r168: [4..5]
 r169: [2..3]
 r170: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 60
changing reg in insn 65
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 73
changing reg in insn 78
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 91
changing reg in insn 93
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 111
changing reg in insn 113
changing reg in insn 113
changing reg in insn 115
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 38
changing reg in insn 40
changing reg in insn 39
changing reg in insn 40
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 58
changing reg in insn 60
changing reg in insn 59
changing reg in insn 60
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 73
changing reg in insn 72
changing reg in insn 73
changing reg in insn 78
changing reg in insn 79
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 98
changing reg in insn 100
changing reg in insn 99
changing reg in insn 100
changing reg in insn 107
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
starting the processing of deferred insns
ending the processing of deferred insns


SystemCoreClockUpdate

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d} r1={1d} r2={19d,18u} r3={41d,40u} r7={1d,33u} r13={1d,16u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={5d,5u} r102={1d,1u} 
;;    total ref usage 200{87d,113u,0e} in 87{87 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 143 144
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":225:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 8 [0x8])) [1 _1->CFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":225:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [143])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 12 [0xc]))) "../Core/Src/system_stm32f4xx.c":225:7 90 {*arm_andsi3_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])
        (reg:SI 3 r3 [143])) "../Core/Src/system_stm32f4xx.c":225:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [144])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":227:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [144])
            (const_int 8 [0x8]))) "../Core/Src/system_stm32f4xx.c":227:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "../Core/Src/system_stm32f4xx.c":227:3 273 {arm_cond_branch}
     (nil)
 -> 43)
;;  succ:       3 (FALLTHRU)
;;              9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 145
(note 12 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 12 16 3 (set (reg:SI 3 r3 [145])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":227:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [145])
            (const_int 8 [0x8]))) "../Core/Src/system_stm32f4xx.c":227:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "../Core/Src/system_stm32f4xx.c":227:3 273 {arm_cond_branch}
     (nil)
 -> 96)
;;  succ:       4 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 146
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 3 r3 [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":227:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [146])
            (const_int 0 [0]))) "../Core/Src/system_stm32f4xx.c":227:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "../Core/Src/system_stm32f4xx.c":227:3 273 {arm_cond_branch}
     (nil)
 -> 29)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:SI 3 r3 [147])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":227:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [147])
            (const_int 4 [0x4]))) "../Core/Src/system_stm32f4xx.c":227:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 25 24 118 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "../Core/Src/system_stm32f4xx.c":227:3 273 {arm_cond_branch}
     (nil)
 -> 36)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 118 25 119 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 119 118 120 6 (set (pc)
        (label_ref 96)) "../Core/Src/system_stm32f4xx.c":227:3 284 {*arm_jump}
     (nil)
 -> 96)
;;  succ:       13 [always]  ../Core/Src/system_stm32f4xx.c:227:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 120 119 29)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 148 149
(code_label 29 120 30 7 7 (nil) [1 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:SI 3 r3 [148])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x2]  <var_decl 0000000006337bd0 SystemCoreClock>)) "../Core/Src/system_stm32f4xx.c":230:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 7 (set (reg:SI 2 r2 [149])
        (const_int 16000000 [0xf42400])) "../Core/Src/system_stm32f4xx.c":230:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 121 7 (set (mem/c:SI (reg/f:SI 3 r3 [148]) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 2 r2 [149])) "../Core/Src/system_stm32f4xx.c":230:23 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 121 33 122 7 (set (pc)
        (label_ref 101)) "../Core/Src/system_stm32f4xx.c":231:7 284 {*arm_jump}
     (nil)
 -> 101)
;;  succ:       14 [always]  ../Core/Src/system_stm32f4xx.c:231:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 122 121 36)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 150 151
(code_label 36 122 37 8 8 (nil) [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:SI 3 r3 [150])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x2]  <var_decl 0000000006337bd0 SystemCoreClock>)) "../Core/Src/system_stm32f4xx.c":233:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 8 (set (reg:SI 2 r2 [151])
        (const_int 25000000 [0x17d7840])) "../Core/Src/system_stm32f4xx.c":233:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 123 8 (set (mem/c:SI (reg/f:SI 3 r3 [150]) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 2 r2 [151])) "../Core/Src/system_stm32f4xx.c":233:23 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 123 40 124 8 (set (pc)
        (label_ref 101)) "../Core/Src/system_stm32f4xx.c":234:7 284 {*arm_jump}
     (nil)
 -> 101)
;;  succ:       14 [always]  ../Core/Src/system_stm32f4xx.c:234:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 124 123 43)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 116 117 118 119 152 153 154
(code_label 43 124 44 9 5 (nil) [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":240:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 9 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:115 _3 ] [115])
                (const_int 4 [0x4])) [1 _3->PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":240:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 9 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (lshiftrt:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 22 [0x16]))) "../Core/Src/system_stm32f4xx.c":240:55 147 {*arm_shiftsi3}
     (nil))
(insn 48 47 49 9 (set (reg:SI 3 r3 [152])
        (and:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 1 [0x1]))) "../Core/Src/system_stm32f4xx.c":240:17 90 {*arm_andsi3_insn}
     (nil))
(insn 49 48 50 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pllsource+0 S4 A32])
        (reg:SI 3 r3 [152])) "../Core/Src/system_stm32f4xx.c":240:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":241:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 9 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118])
                (const_int 4 [0x4])) [1 _6->PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":241:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 9 (set (reg:SI 3 r3 [153])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 63 [0x3f]))) "../Core/Src/system_stm32f4xx.c":241:12 90 {*arm_andsi3_insn}
     (nil))
(insn 53 52 54 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 pllm+0 S4 A64])
        (reg:SI 3 r3 [153])) "../Core/Src/system_stm32f4xx.c":241:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 9 (set (reg:SI 3 r3 [154])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pllsource+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":243:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [154])
            (const_int 0 [0]))) "../Core/Src/system_stm32f4xx.c":243:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "../Core/Src/system_stm32f4xx.c":243:10 273 {arm_cond_branch}
     (nil)
 -> 69)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 120 121 122 123 124 155 156 157
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg:SI 2 r2 [155])
        (const_int 25000000 [0x17d7840])) "../Core/Src/system_stm32f4xx.c":246:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 10 (set (reg:SI 3 r3 [156])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 pllm+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":246:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 10 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (udiv:SI (reg:SI 2 r2 [155])
            (reg:SI 3 r3 [156]))) "../Core/Src/system_stm32f4xx.c":246:29 163 {udivsi3}
     (nil))
(insn 61 60 62 10 (set (reg/f:SI 2 r2 [orig:121 _9 ] [121])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":246:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 10 (set (reg:SI 2 r2 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:121 _9 ] [121])
                (const_int 4 [0x4])) [1 _9->PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":246:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 10 (set (reg:SI 2 r2 [orig:123 _11 ] [123])
        (lshiftrt:SI (reg:SI 2 r2 [orig:122 _10 ] [122])
            (const_int 6 [0x6]))) "../Core/Src/system_stm32f4xx.c":246:74 147 {*arm_shiftsi3}
     (nil))
(insn 64 63 65 10 (set (reg:SI 2 r2 [orig:124 _12 ] [124])
        (zero_extract:SI (reg:SI 2 r2 [orig:123 _11 ] [123])
            (const_int 9 [0x9])
            (const_int 0 [0]))) "../Core/Src/system_stm32f4xx.c":246:74 161 {extzv_t2}
     (nil))
(insn 65 64 66 10 (set (reg:SI 3 r3 [157])
        (mult:SI (reg:SI 2 r2 [orig:124 _12 ] [124])
            (reg:SI 3 r3 [orig:120 _8 ] [120]))) "../Core/Src/system_stm32f4xx.c":246:16 56 {*mul}
     (nil))
(insn 66 65 125 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 pllvco+0 S4 A32])
        (reg:SI 3 r3 [157])) "../Core/Src/system_stm32f4xx.c":246:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 125 66 126 10 (set (pc)
        (label_ref 80)) 284 {*arm_jump}
     (nil)
 -> 80)
;;  succ:       12 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 126 125 69)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126 127 128 129 158 159 160
(code_label 69 126 70 11 10 (nil) [1 uses])
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 11 (set (reg:SI 2 r2 [158])
        (const_int 16000000 [0xf42400])) "../Core/Src/system_stm32f4xx.c":251:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 11 (set (reg:SI 3 r3 [159])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 pllm+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":251:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 11 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (udiv:SI (reg:SI 2 r2 [158])
            (reg:SI 3 r3 [159]))) "../Core/Src/system_stm32f4xx.c":251:29 163 {udivsi3}
     (nil))
(insn 74 73 75 11 (set (reg/f:SI 2 r2 [orig:126 _14 ] [126])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":251:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 11 (set (reg:SI 2 r2 [orig:127 _15 ] [127])
        (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:126 _14 ] [126])
                (const_int 4 [0x4])) [1 _14->PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":251:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 11 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (lshiftrt:SI (reg:SI 2 r2 [orig:127 _15 ] [127])
            (const_int 6 [0x6]))) "../Core/Src/system_stm32f4xx.c":251:74 147 {*arm_shiftsi3}
     (nil))
(insn 77 76 78 11 (set (reg:SI 2 r2 [orig:129 _17 ] [129])
        (zero_extract:SI (reg:SI 2 r2 [orig:128 _16 ] [128])
            (const_int 9 [0x9])
            (const_int 0 [0]))) "../Core/Src/system_stm32f4xx.c":251:74 161 {extzv_t2}
     (nil))
(insn 78 77 79 11 (set (reg:SI 3 r3 [160])
        (mult:SI (reg:SI 2 r2 [orig:129 _17 ] [129])
            (reg:SI 3 r3 [orig:125 _13 ] [125]))) "../Core/Src/system_stm32f4xx.c":251:16 56 {*mul}
     (nil))
(insn 79 78 80 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 pllvco+0 S4 A32])
        (reg:SI 3 r3 [160])) "../Core/Src/system_stm32f4xx.c":251:16 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              10 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 130 131 132 133 134 135 161 162 163 164
(code_label 80 79 81 12 11 (nil) [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg/f:SI 3 r3 [orig:130 _18 ] [130])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":254:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 12 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:130 _18 ] [130])
                (const_int 4 [0x4])) [1 _18->PLLCFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":254:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 12 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (lshiftrt:SI (reg:SI 3 r3 [orig:131 _19 ] [131])
            (const_int 16 [0x10]))) "../Core/Src/system_stm32f4xx.c":254:50 147 {*arm_shiftsi3}
     (nil))
(insn 85 84 86 12 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (and:SI (reg:SI 3 r3 [orig:132 _20 ] [132])
            (const_int 3 [0x3]))) "../Core/Src/system_stm32f4xx.c":254:50 90 {*arm_andsi3_insn}
     (nil))
(insn 86 85 87 12 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (plus:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (const_int 1 [0x1]))) "../Core/Src/system_stm32f4xx.c":254:56 7 {*arm_addsi3}
     (nil))
(insn 87 86 88 12 (set (reg:SI 3 r3 [161])
        (ashift:SI (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 1 [0x1]))) "../Core/Src/system_stm32f4xx.c":254:12 147 {*arm_shiftsi3}
     (nil))
(insn 88 87 89 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 pllp+0 S4 A32])
        (reg:SI 3 r3 [161])) "../Core/Src/system_stm32f4xx.c":254:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 12 (set (reg:SI 2 r2 [162])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 pllvco+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":255:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 12 (set (reg:SI 3 r3 [163])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 pllp+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":255:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 12 (set (reg:SI 3 r3 [orig:135 _23 ] [135])
        (udiv:SI (reg:SI 2 r2 [162])
            (reg:SI 3 r3 [163]))) "../Core/Src/system_stm32f4xx.c":255:31 163 {udivsi3}
     (nil))
(insn 92 91 93 12 (set (reg/f:SI 2 r2 [164])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x2]  <var_decl 0000000006337bd0 SystemCoreClock>)) "../Core/Src/system_stm32f4xx.c":255:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 127 12 (set (mem/c:SI (reg/f:SI 2 r2 [164]) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 3 r3 [orig:135 _23 ] [135])) "../Core/Src/system_stm32f4xx.c":255:23 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 127 93 128 12 (set (pc)
        (label_ref 101)) "../Core/Src/system_stm32f4xx.c":256:7 284 {*arm_jump}
     (nil)
 -> 101)
;;  succ:       14 [always]  ../Core/Src/system_stm32f4xx.c:256:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 128 127 96)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 15, flags: (RTL, MODIFIED)
;;  pred:       3
;;              6 [always]  ../Core/Src/system_stm32f4xx.c:227:3
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 165 166
(code_label 96 128 97 13 6 (nil) [2 uses])
(note 97 96 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 13 (set (reg/f:SI 3 r3 [165])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x2]  <var_decl 0000000006337bd0 SystemCoreClock>)) "../Core/Src/system_stm32f4xx.c":258:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 100 13 (set (reg:SI 2 r2 [166])
        (const_int 16000000 [0xf42400])) "../Core/Src/system_stm32f4xx.c":258:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 100 99 129 13 (set (mem/c:SI (reg/f:SI 3 r3 [165]) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 2 r2 [166])) "../Core/Src/system_stm32f4xx.c":258:23 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       15 (FALLTHRU) ../Core/Src/system_stm32f4xx.c:259:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU) ../Core/Src/system_stm32f4xx.c:259:7
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 129 100 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 101 15 (const_int 0 [0]) "../Core/Src/system_stm32f4xx.c":259:7 313 {nop}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       15 [always]  (FALLTHRU)
;;              7 [always]  ../Core/Src/system_stm32f4xx.c:231:7
;;              8 [always]  ../Core/Src/system_stm32f4xx.c:234:7
;;              12 [always]  ../Core/Src/system_stm32f4xx.c:256:7
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 136 137 138 139 140 141 142 167 168 169 170
(code_label 101 130 102 14 9 (nil) [3 uses])
(note 102 101 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 14 (set (reg/f:SI 3 r3 [orig:136 _24 ] [136])
        (const_int 1073887232 [0x40023800])) "../Core/Src/system_stm32f4xx.c":263:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 104 103 105 14 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:136 _24 ] [136])
                (const_int 8 [0x8])) [1 _24->CFGR+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":263:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 105 104 106 14 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 _25 ] [137])
            (const_int 4 [0x4]))) "../Core/Src/system_stm32f4xx.c":263:52 147 {*arm_shiftsi3}
     (nil))
(insn 106 105 107 14 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (and:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 15 [0xf]))) "../Core/Src/system_stm32f4xx.c":263:52 90 {*arm_andsi3_insn}
     (nil))
(insn 107 106 108 14 (set (reg/f:SI 2 r2 [167])
        (symbol_ref:SI ("AHBPrescTable") [flags 0x2]  <var_decl 0000000006337c60 AHBPrescTable>)) "../Core/Src/system_stm32f4xx.c":263:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 108 107 109 14 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 2 r2 [167])
                    (reg:SI 3 r3 [orig:139 _27 ] [139])) [0 AHBPrescTable[_27]+0 S1 A8]))) "../Core/Src/system_stm32f4xx.c":263:22 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 109 108 110 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])
        (reg:SI 3 r3 [orig:140 _28 ] [140])) "../Core/Src/system_stm32f4xx.c":263:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 110 109 111 14 (set (reg/f:SI 3 r3 [168])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x2]  <var_decl 0000000006337bd0 SystemCoreClock>)) "../Core/Src/system_stm32f4xx.c":265:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 111 110 112 14 (set (reg:SI 2 r2 [orig:141 SystemCoreClock.0_29 ] [141])
        (mem/c:SI (reg/f:SI 3 r3 [168]) [1 SystemCoreClock+0 S4 A32])) "../Core/Src/system_stm32f4xx.c":265:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 112 111 113 14 (set (reg:SI 3 r3 [169])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tmp+0 S4 A64])) "../Core/Src/system_stm32f4xx.c":265:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 113 112 114 14 (set (reg:SI 3 r3 [orig:142 _30 ] [142])
        (lshiftrt:SI (reg:SI 2 r2 [orig:141 SystemCoreClock.0_29 ] [141])
            (reg:SI 3 r3 [169]))) "../Core/Src/system_stm32f4xx.c":265:19 147 {*arm_shiftsi3}
     (nil))
(insn 114 113 115 14 (set (reg/f:SI 2 r2 [170])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x2]  <var_decl 0000000006337bd0 SystemCoreClock>)) "../Core/Src/system_stm32f4xx.c":265:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 115 114 131 14 (set (mem/c:SI (reg/f:SI 2 r2 [170]) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 3 r3 [orig:142 _30 ] [142])) "../Core/Src/system_stm32f4xx.c":265:19 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       16 [always]  (FALLTHRU) ../Core/Src/system_stm32f4xx.c:266:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (RTL, MODIFIED)
;;  pred:       14 [always]  (FALLTHRU) ../Core/Src/system_stm32f4xx.c:266:1
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 131 115 132 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 145 16 (const_int 0 [0]) "../Core/Src/system_stm32f4xx.c":266:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 145 132 0 NOTE_INSN_DELETED)
