
;; Function HAL_FLASHEx_Erase (HAL_FLASHEx_Erase, funcdef_no=134, decl_uid=7306, cgraph_uid=139, symbol_order=138)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 48:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 52:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 56:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 74:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 78:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 82:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 83:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 90:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 96:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 97:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 102:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 104
	 Choosing alt 0 in insn 104:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 106:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 117:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 7
EBB 8 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 126: point = 0, n_alt = -1
   Insn 125: point = 0, n_alt = -2
   Insn 121: point = 1, n_alt = -2
  BB 3
   Insn 128: point = 4, n_alt = -1
   Insn 14: point = 4, n_alt = 1
  BB 13
   Insn 118: point = 5, n_alt = 1
   Insn 117: point = 6, n_alt = 6
   Insn 116: point = 7, n_alt = 0
   Insn 115: point = 9, n_alt = 1
   Insn 114: point = 10, n_alt = 5
  BB 12
   Insn 111: point = 11, n_alt = -1
  BB 9
   Insn 134: point = 11, n_alt = -1
   Insn 90: point = 11, n_alt = 7
   Insn 89: point = 12, n_alt = 5
   Insn 88: point = 13, n_alt = 5
  BB 6
   Insn 130: point = 14, n_alt = -1
   Insn 57: point = 14, n_alt = 7
   Insn 56: point = 15, n_alt = 2
   Insn 55: point = 17, n_alt = 5
   Insn 54: point = 18, n_alt = 5
   Insn 53: point = 20, n_alt = 5
   Insn 52: point = 21, n_alt = 6
   Insn 51: point = 22, n_alt = 0
   Insn 50: point = 24, n_alt = -2
   Insn 49: point = 25, n_alt = -1
   Insn 48: point = 25, n_alt = 4
   Insn 47: point = 25, n_alt = -1
   Insn 46: point = 25, n_alt = -2
   Insn 45: point = 26, n_alt = -2
   Insn 44: point = 27, n_alt = 5
   Insn 43: point = 29, n_alt = 5
   Insn 42: point = 30, n_alt = 0
   Insn 41: point = 32, n_alt = 5
   Insn 40: point = 34, n_alt = 5
  BB 11
   Insn 108: point = 35, n_alt = -1
   Insn 107: point = 35, n_alt = 1
   Insn 106: point = 36, n_alt = 5
   Insn 104: point = 37, n_alt = 0
   Insn 103: point = 39, n_alt = 5
   Insn 102: point = 41, n_alt = 5
   Insn 101: point = 42, n_alt = 5
   Insn 100: point = 44, n_alt = 5
  BB 7
   Insn 132: point = 45, n_alt = -1
   Insn 64: point = 45, n_alt = 7
   Insn 63: point = 46, n_alt = 5
   Insn 62: point = 48, n_alt = 5
  BB 5
   Insn 38: point = 49, n_alt = -1
   Insn 37: point = 49, n_alt = 0
   Insn 36: point = 50, n_alt = 5
   Insn 35: point = 52, n_alt = 5
   Insn 34: point = 53, n_alt = 7
   Insn 33: point = 54, n_alt = 1
   Insn 32: point = 55, n_alt = 5
  BB 10
   Insn 97: point = 56, n_alt = 7
   Insn 96: point = 57, n_alt = 2
   Insn 95: point = 59, n_alt = 5
  BB 8
   Insn 86: point = 60, n_alt = -1
   Insn 85: point = 60, n_alt = 0
   Insn 84: point = 61, n_alt = 1
   Insn 83: point = 62, n_alt = 7
   Insn 82: point = 63, n_alt = 2
   Insn 81: point = 65, n_alt = 5
   Insn 80: point = 66, n_alt = 5
   Insn 79: point = 68, n_alt = 5
   Insn 78: point = 69, n_alt = 6
   Insn 77: point = 70, n_alt = 0
   Insn 76: point = 72, n_alt = -2
   Insn 75: point = 73, n_alt = -1
   Insn 74: point = 73, n_alt = 4
   Insn 73: point = 73, n_alt = -1
   Insn 72: point = 73, n_alt = 5
   Insn 71: point = 73, n_alt = -2
   Insn 70: point = 74, n_alt = 0
   Insn 69: point = 76, n_alt = 5
   Insn 68: point = 78, n_alt = 5
  BB 4
   Insn 30: point = 79, n_alt = -1
   Insn 29: point = 79, n_alt = 0
   Insn 28: point = 80, n_alt = 1
   Insn 27: point = 81, n_alt = 6
   Insn 26: point = 82, n_alt = 0
   Insn 25: point = 84, n_alt = -2
   Insn 24: point = 85, n_alt = -1
   Insn 23: point = 85, n_alt = 4
   Insn 22: point = 85, n_alt = 6
   Insn 21: point = 86, n_alt = 0
   Insn 20: point = 88, n_alt = 1
   Insn 19: point = 89, n_alt = 5
  BB 2
   Insn 12: point = 90, n_alt = -1
   Insn 11: point = 90, n_alt = 0
   Insn 10: point = 91, n_alt = 1
   Insn 9: point = 93, n_alt = 5
   Insn 8: point = 94, n_alt = 7
   Insn 7: point = 95, n_alt = 1
   Insn 3: point = 96, n_alt = 7
   Insn 2: point = 96, n_alt = 7
 r113: [90..91]
 r114: [49..50]
 r115: [31..32]
 r116: [25..30]
 r117: [26..27]
 r118: [19..20]
 r119: [16..18]
 r120: [14..17]
 r121: [14..15]
 r122: [75..76]
 r123: [73..74]
 r124: [67..68]
 r125: [64..66]
 r126: [62..65]
 r127: [62..63]
 r128: [38..42]
 r129: [38..39]
 r130: [35..37]
 r131: [2..5]
 r132: [0..1]
 r133: [94..95]
 r134: [92..93]
 r135: [85..89]
 r136: [87..88]
 r137: [85..86]
 r138: [83..84]
 r139: [81..82]
 r140: [79..80]
 r141: [53..55]
 r142: [53..54]
 r143: [51..52]
 r144: [33..34]
 r145: [28..29]
 r146: [23..24]
 r147: [21..22]
 r148: [47..48]
 r149: [45..46]
 r150: [77..78]
 r151: [71..72]
 r152: [69..70]
 r153: [60..61]
 r154: [11..13]
 r155: [11..12]
 r156: [56..57]
 r157: [58..59]
 r158: [43..44]
 r159: [40..41]
 r160: [35..36]
 r161: [6..10]
 r162: [8..9]
 r163: [6..7]
Compressing live ranges: from 96 to 84 - 87%
Ranges after the compression:
 r113: [78..79]
 r114: [40..41]
 r115: [24..25]
 r116: [20..23]
 r117: [20..21]
 r118: [14..15]
 r119: [12..13]
 r120: [10..13]
 r121: [10..11]
 r122: [64..65]
 r123: [62..63]
 r124: [56..57]
 r125: [54..55]
 r126: [52..55]
 r127: [52..53]
 r128: [30..33]
 r129: [30..31]
 r130: [28..29]
 r131: [2..3]
 r132: [0..1]
 r133: [82..83]
 r134: [80..81]
 r135: [74..77]
 r136: [76..77]
 r137: [74..75]
 r138: [72..73]
 r139: [70..71]
 r140: [68..69]
 r141: [44..45]
 r142: [44..45]
 r143: [42..43]
 r144: [26..27]
 r145: [22..23]
 r146: [18..19]
 r147: [16..17]
 r148: [38..39]
 r149: [36..37]
 r150: [66..67]
 r151: [60..61]
 r152: [58..59]
 r153: [50..51]
 r154: [8..9]
 r155: [8..9]
 r156: [46..47]
 r157: [48..49]
 r158: [34..35]
 r159: [32..33]
 r160: [28..29]
 r161: [4..7]
 r162: [6..7]
 r163: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 44
changing reg in insn 45
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 107
changing reg in insn 118
changing reg in insn 14
changing reg in insn 121
changing reg in insn 121
changing reg in insn 125
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 22
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 68
changing reg in insn 69
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 84
changing reg in insn 85
changing reg in insn 88
changing reg in insn 90
changing reg in insn 89
changing reg in insn 90
changing reg in insn 96
changing reg in insn 97
changing reg in insn 95
changing reg in insn 96
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 106
changing reg in insn 107
changing reg in insn 114
changing reg in insn 117
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
deleting insn with uid = 21.
deleting insn with uid = 26.
deleting insn with uid = 51.
deleting insn with uid = 77.
deleting insn with uid = 116.
deleting insn with uid = 121.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 111.


HAL_FLASHEx_Erase

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={13d,11u} r1={9d,3u} r2={16d,9u} r3={44d,36u} r7={1d,38u} r12={12d} r13={1d,20u} r14={7d} r15={6d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={11d,5u} r101={6d} r102={1d,1u} r104={6d} r105={6d} r106={6d} 
;;    total ref usage 692{569d,123u,0e} in 89{83 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 133 134
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])
        (reg:SI 0 r0 [ pEraseInit ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":161:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (reg/f:SI 7 r7) [9 SectorError+0 S4 A32])
        (reg:SI 1 r1 [ SectorError ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":161:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [133])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":163:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])
        (reg:SI 3 r3 [133])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":163:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [134])
                    (const_int 24 [0x18])) [0 pFlash.Lock+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 273 {arm_cond_branch}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 128 3 (set (reg:SI 3 r3 [orig:131 _23 ] [131])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 128 14 129 3 (set (pc)
        (label_ref 119)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 284 {*arm_jump}
     (nil)
 -> 119)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:166:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131

(barrier 129 128 17)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 135 136 137 138 139 140
(code_label 17 129 18 4 2 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 22 4 (set (reg:SI 2 r2 [136])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 20 23 4 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 24 [0x18])) [0 pFlash.Lock+0 S1 A32])
        (reg:QI 2 r2 [137])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":166:3 263 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 4 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":172:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 24 23 25 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":172:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 25 24 27 4 (set (reg:SI 3 r3 [138])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":172:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 25 28 4 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [139])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":172:12 263 {*arm_movqi_insn}
     (nil))
(insn 28 27 29 4 (set (reg:SI 3 r3 [140])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":174:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 29 28 30 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":174:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":174:6 273 {arm_cond_branch}
     (nil)
 -> 112)
;;  succ:       5 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 141 142 143
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 SectorError+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":177:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 5 (set (reg:SI 2 r2 [142])
        (const_int -1 [0xffffffffffffffff])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":177:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 5 (set (mem:SI (reg/f:SI 3 r3 [141]) [3 *SectorError_33(D)+0 S4 A32])
        (reg:SI 2 r2 [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":177:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 5 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":179:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 5 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem:SI (reg/f:SI 3 r3 [143]) [3 pEraseInit_35(D)->TypeErase+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":179:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":179:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":179:8 273 {arm_cond_branch}
     (nil)
 -> 60)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 115 116 117 118 119 120 121 144 145 146 147
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg/f:SI 3 r3 [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 6 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [144])
                (const_int 16 [0x10])) [3 pEraseInit_35(D)->VoltageRange+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 6 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [orig:115 _3 ] [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:7 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 6 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [145])
                (const_int 4 [0x4])) [3 pEraseInit_35(D)->Banks+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 6 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 6 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:7 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 47 46 48 6 (parallel [
            (call (mem:SI (symbol_ref:SI ("FLASH_MassErase") [flags 0x3]  <function_decl 00000000073fb100 FLASH_MassErase>) [0 FLASH_MassErase S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":182:7 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 48 47 49 6 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":185:16 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 49 48 50 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":185:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 50 49 52 6 (set (reg:SI 3 r3 [146])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":185:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 50 53 6 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":185:16 263 {*arm_movqi_insn}
     (nil))
(insn 53 52 54 6 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":188:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 6 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118])
                (const_int 16 [0x10])) [3 _6->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":188:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 6 (set (reg/f:SI 2 r2 [orig:120 _8 ] [120])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":188:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 6 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int -5 [0xfffffffffffffffb]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":188:17 90 {*arm_andsi3_insn}
     (nil))
(insn 57 56 130 6 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:120 _8 ] [120])
                (const_int 16 [0x10])) [3 _8->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:121 _9 ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":188:17 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 130 57 131 6 (set (pc)
        (label_ref 109)) 284 {*arm_jump}
     (nil)
 -> 109)
;;  succ:       12 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 131 130 60)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 148 149
(code_label 60 131 61 7 5 (nil) [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:SI 3 r3 [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 7 (set (reg:SI 3 r3 [149])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [148])
                (const_int 8 [0x8])) [3 pEraseInit_35(D)->Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 132 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])
        (reg:SI 3 r3 [149])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 132 64 133 7 (set (pc)
        (label_ref 98)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:7 284 {*arm_jump}
     (nil)
 -> 98)
;;  succ:       11 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:196:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 133 132 105)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 122 123 124 125 126 127 150 151 152 153
(code_label 105 133 67 8 9 (nil) [1 uses])
(note 67 105 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 8 (set (reg/f:SI 3 r3 [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":198:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 8 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [150])
                (const_int 16 [0x10])) [3 pEraseInit_35(D)->VoltageRange+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":198:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 8 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (zero_extend:SI (reg:QI 3 r3 [orig:122 _10 ] [122]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":198:9 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 71 70 72 8 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":198:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 8 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":198:9 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 73 72 74 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("FLASH_Erase_Sector") [flags 0x3]  <function_decl 000000000735b100 FLASH_Erase_Sector>) [0 FLASH_Erase_Sector S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":198:9 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
(insn 74 73 75 8 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":201:18 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 75 74 76 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":201:18 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 76 75 78 8 (set (reg:SI 3 r3 [151])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":201:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 76 79 8 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [152])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":201:18 263 {*arm_movqi_insn}
     (nil))
(insn 79 78 80 8 (set (reg/f:SI 3 r3 [orig:124 _12 ] [124])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":204:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 8 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:124 _12 ] [124])
                (const_int 16 [0x10])) [3 _12->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":204:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 81 80 82 8 (set (reg/f:SI 2 r2 [orig:126 _14 ] [126])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":204:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 82 81 83 8 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (and:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int -251 [0xffffffffffffff05]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":204:9 90 {*arm_andsi3_insn}
     (nil))
(insn 83 82 84 8 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:126 _14 ] [126])
                (const_int 16 [0x10])) [3 _14->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:127 _15 ] [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":204:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 8 (set (reg:SI 3 r3 [153])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":206:12 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 85 84 86 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [153])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":206:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 86 85 87 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":206:12 273 {arm_cond_branch}
     (nil)
 -> 93)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 154 155
(note 87 86 88 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 9 (set (reg/f:SI 3 r3 [154])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 SectorError+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":209:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 9 (set (reg:SI 2 r2 [155])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":209:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 134 9 (set (mem:SI (reg/f:SI 3 r3 [154]) [3 *SectorError_33(D)+0 S4 A32])
        (reg:SI 2 r2 [155])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":209:24 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 134 90 135 9 (set (pc)
        (label_ref 109)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":210:11 284 {*arm_jump}
     (nil)
 -> 109)
;;  succ:       12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:210:11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 135 134 93)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 156 157
(code_label 93 135 94 10 8 (nil) [1 uses])
(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 10 (set (reg:SI 3 r3 [157])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:99 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 10 (set (reg:SI 3 r3 [156])
        (plus:SI (reg:SI 3 r3 [157])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:99 7 {*arm_addsi3}
     (nil))
(insn 97 96 98 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])
        (reg:SI 3 r3 [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:99 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU,DFS_BACK)
;;              7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:196:7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 128 129 130 158 159 160
(code_label 98 97 99 11 7 (nil) [1 uses])
(note 99 98 100 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 11 (set (reg/f:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:59 749 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 11 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 12 [0xc])) [3 pEraseInit_35(D)->NbSectors+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:59 749 {*thumb2_movsi_vfp}
     (nil))
(insn 102 101 103 11 (set (reg/f:SI 3 r3 [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:83 749 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 104 11 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [159])
                (const_int 8 [0x8])) [3 pEraseInit_35(D)->Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:83 749 {*thumb2_movsi_vfp}
     (nil))
(insn 104 103 106 11 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (plus:SI (reg:SI 3 r3 [orig:129 _17 ] [129])
            (reg:SI 2 r2 [orig:128 _16 ] [128]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:71 7 {*arm_addsi3}
     (nil))
(insn 106 104 107 11 (set (reg:SI 2 r2 [160])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [3 index+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 107 106 108 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [160])
            (reg:SI 3 r3 [orig:130 _18 ] [130]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:46 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 108 107 109 11 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":196:46 273 {arm_cond_branch}
     (nil)
 -> 105)
;;  succ:       8
;;              12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              6 [always] 
;;              9 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:210:11
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 109 108 110 12 6 (nil) [2 uses])
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 111 110 112 12 (parallel [
            (call (mem:SI (symbol_ref:SI ("FLASH_FlushCaches") [flags 0x3]  <function_decl 000000000735b200 FLASH_FlushCaches>) [0 FLASH_FlushCaches S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":215:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       4
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131 161 162 163
(code_label 112 111 113 13 4 (nil) [1 uses])
(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 13 (set (reg/f:SI 3 r3 [161])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":219:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 115 114 117 13 (set (reg:SI 2 r2 [162])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":219:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 117 115 118 13 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [161])
                (const_int 24 [0x18])) [0 pFlash.Lock+0 S1 A32])
        (reg:QI 2 r2 [163])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":219:3 263 {*arm_movqi_insn}
     (nil))
(insn 118 117 119 13 (set (reg:SI 3 r3 [orig:131 _23 ] [131])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":221:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       14 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:221:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 1, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:221:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:166:3
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131
;; lr  def 	 0 [r0] 132
(code_label 119 118 120 14 3 (nil) [1 uses])
(note 120 119 125 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 125 120 126 14 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:132 <retval> ] [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":222:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 126 125 143 14 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":222:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 143 126 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_Erase_IT (HAL_FLASHEx_Erase_IT, funcdef_no=135, decl_uid=7308, cgraph_uid=140, symbol_order=139)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 30:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 50:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 54:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 58:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 64:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 83: point = 0, n_alt = -1
   Insn 82: point = 0, n_alt = -2
   Insn 78: point = 1, n_alt = -2
   Insn 75: point = 3, n_alt = 1
  BB 3
   Insn 85: point = 4, n_alt = -1
   Insn 42: point = 4, n_alt = -1
   Insn 41: point = 4, n_alt = -2
   Insn 40: point = 5, n_alt = -2
   Insn 39: point = 6, n_alt = 5
   Insn 38: point = 8, n_alt = 5
   Insn 37: point = 9, n_alt = 0
   Insn 36: point = 11, n_alt = 5
   Insn 35: point = 13, n_alt = 5
   Insn 34: point = 14, n_alt = 7
   Insn 33: point = 15, n_alt = 5
   Insn 32: point = 16, n_alt = 5
   Insn 31: point = 18, n_alt = 5
   Insn 30: point = 19, n_alt = 6
   Insn 29: point = 20, n_alt = 0
   Insn 28: point = 22, n_alt = 1
   Insn 27: point = 23, n_alt = 5
  BB 4
   Insn 72: point = 24, n_alt = -1
   Insn 71: point = 24, n_alt = -2
   Insn 70: point = 25, n_alt = -2
   Insn 69: point = 26, n_alt = 0
   Insn 68: point = 28, n_alt = 5
   Insn 67: point = 30, n_alt = 5
   Insn 66: point = 31, n_alt = 5
   Insn 65: point = 33, n_alt = 5
   Insn 64: point = 34, n_alt = 6
   Insn 63: point = 35, n_alt = 0
   Insn 62: point = 37, n_alt = 5
   Insn 61: point = 38, n_alt = 0
   Insn 60: point = 40, n_alt = 5
   Insn 59: point = 42, n_alt = 5
   Insn 58: point = 43, n_alt = 7
   Insn 57: point = 44, n_alt = 5
   Insn 56: point = 45, n_alt = 5
   Insn 55: point = 47, n_alt = 5
   Insn 54: point = 48, n_alt = 7
   Insn 53: point = 49, n_alt = 5
   Insn 52: point = 50, n_alt = 5
   Insn 51: point = 52, n_alt = 5
   Insn 50: point = 53, n_alt = 6
   Insn 49: point = 54, n_alt = 0
   Insn 48: point = 56, n_alt = 1
   Insn 47: point = 57, n_alt = 5
  BB 2
   Insn 25: point = 58, n_alt = -1
   Insn 24: point = 58, n_alt = 0
   Insn 23: point = 59, n_alt = 5
   Insn 22: point = 61, n_alt = 5
   Insn 21: point = 62, n_alt = 7
   Insn 20: point = 63, n_alt = 1
   Insn 19: point = 64, n_alt = 5
   Insn 18: point = 65, n_alt = 7
   Insn 17: point = 66, n_alt = 0
   Insn 16: point = 68, n_alt = 5
   Insn 15: point = 69, n_alt = 5
   Insn 14: point = 71, n_alt = 5
   Insn 13: point = 72, n_alt = 7
   Insn 12: point = 73, n_alt = 0
   Insn 11: point = 75, n_alt = 5
   Insn 10: point = 76, n_alt = 5
   Insn 9: point = 78, n_alt = 5
   Insn 8: point = 79, n_alt = 6
   Insn 7: point = 80, n_alt = 0
   Insn 6: point = 82, n_alt = 1
   Insn 2: point = 83, n_alt = 7
 r113: [77..78]
 r114: [74..76]
 r115: [72..75]
 r116: [72..73]
 r117: [70..71]
 r118: [67..69]
 r119: [65..68]
 r120: [65..66]
 r121: [62..64]
 r122: [58..59]
 r123: [14..16]
 r124: [10..11]
 r125: [4..9]
 r126: [5..6]
 r127: [48..50]
 r128: [43..45]
 r129: [39..40]
 r130: [36..38]
 r131: [24..31]
 r132: [27..28]
 r133: [25..26]
 r134: [2..3]
 r135: [0..1]
 r136: [81..82]
 r137: [79..80]
 r138: [62..63]
 r139: [60..61]
 r140: [19..23]
 r141: [21..22]
 r142: [19..20]
 r143: [17..18]
 r144: [14..15]
 r145: [12..13]
 r146: [7..8]
 r147: [53..57]
 r148: [55..56]
 r149: [53..54]
 r150: [51..52]
 r151: [48..49]
 r152: [46..47]
 r153: [43..44]
 r154: [41..42]
 r155: [34..37]
 r156: [34..35]
 r157: [32..33]
 r158: [29..30]
Compressing live ranges: from 83 to 70 - 84%
Ranges after the compression:
 r113: [64..65]
 r114: [62..63]
 r115: [60..63]
 r116: [60..61]
 r117: [58..59]
 r118: [56..57]
 r119: [54..57]
 r120: [54..55]
 r121: [52..53]
 r122: [48..49]
 r123: [12..13]
 r124: [8..9]
 r125: [4..7]
 r126: [4..5]
 r127: [40..41]
 r128: [36..37]
 r129: [32..33]
 r130: [30..31]
 r131: [20..25]
 r132: [22..23]
 r133: [20..21]
 r134: [2..3]
 r135: [0..1]
 r136: [68..69]
 r137: [66..67]
 r138: [52..53]
 r139: [50..51]
 r140: [16..19]
 r141: [18..19]
 r142: [16..17]
 r143: [14..15]
 r144: [12..13]
 r145: [10..11]
 r146: [6..7]
 r147: [44..47]
 r148: [46..47]
 r149: [44..45]
 r150: [42..43]
 r151: [40..41]
 r152: [38..39]
 r153: [36..37]
 r154: [34..35]
 r155: [28..31]
 r156: [28..29]
 r157: [26..27]
 r158: [24..25]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 39
changing reg in insn 40
changing reg in insn 52
changing reg in insn 54
changing reg in insn 56
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 66
changing reg in insn 71
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 78
changing reg in insn 78
changing reg in insn 82
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 30
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 47
changing reg in insn 50
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
deleting insn with uid = 7.
deleting insn with uid = 29.
deleting insn with uid = 49.
deleting insn with uid = 63.
deleting insn with uid = 78.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 72.


HAL_FLASHEx_Erase_IT

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={14d,11u} r3={33d,30u} r7={1d,17u} r12={4d} r13={1d,7u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 307{233d,74u,0e} in 63{61 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 117 118 119 120 121 122 136 137 138 139
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])
        (reg:SI 0 r0 [ pEraseInit ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":232:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 3 r3 [136])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":233:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [137])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":233:21 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":239:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 16 [0x10])) [3 _1->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":239:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":239:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ior:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 16777216 [0x1000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":239:3 106 {*iorsi3_insn}
     (nil))
(insn 13 12 14 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 16 [0x10])) [3 _3->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":239:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":242:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 16 [0x10])) [3 _5->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":242:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 2 r2 [orig:119 _7 ] [119])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":242:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (ior:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 33554432 [0x2000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":242:3 106 {*iorsi3_insn}
     (nil))
(insn 18 17 19 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:119 _7 ] [119])
                (const_int 16 [0x10])) [3 _7->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":242:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":245:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg:SI 2 r2 [138])
        (const_int 243 [0xf3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":245:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 12 [0xc])) [3 _9->SR+0 S4 A32])
        (reg:SI 2 r2 [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":245:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":248:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 2 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem:SI (reg/f:SI 3 r3 [139]) [3 pEraseInit_28(D)->TypeErase+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":248:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":248:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":248:6 273 {arm_cond_branch}
     (nil)
 -> 45)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 123 124 125 126 140 141 142 143 144 145 146
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":251:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 30 3 (set (reg:SI 2 r2 [141])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":251:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 28 31 3 (set (mem/v/c:QI (reg/f:SI 3 r3 [140]) [0 pFlash.ProcedureOnGoing+0 S1 A32])
        (reg:QI 2 r2 [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":251:29 263 {*arm_movqi_insn}
     (nil))
(insn 31 30 32 3 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":252:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 3 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 4 [0x4])) [3 pEraseInit_28(D)->Banks+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":252:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 3 (set (reg/f:SI 2 r2 [144])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":252:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 3 (set (mem/v/c:SI (plus:SI (reg/f:SI 2 r2 [144])
                (const_int 16 [0x10])) [3 pFlash.Bank+0 S4 A32])
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":252:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 3 (set (reg/f:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 3 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [145])
                (const_int 16 [0x10])) [3 pEraseInit_28(D)->VoltageRange+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 3 (set (reg:SI 2 r2 [orig:125 _13 ] [125])
        (zero_extend:SI (reg:QI 3 r3 [orig:124 _12 ] [124]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 38 37 39 3 (set (reg/f:SI 3 r3 [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 3 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [146])
                (const_int 4 [0x4])) [3 pEraseInit_28(D)->Banks+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:126 _14 ] [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 3 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [orig:125 _13 ] [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 42 41 85 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("FLASH_MassErase") [flags 0x3]  <function_decl 00000000073fb100 FLASH_MassErase>) [0 FLASH_MassErase S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":253:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(jump_insn 85 42 86 3 (set (pc)
        (label_ref 73)) 284 {*arm_jump}
     (nil)
 -> 73)
;;  succ:       5 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 86 85 45)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 127 128 129 130 131 132 133 147 148 149 150 151 152 153 154 155 156 157 158
(code_label 45 86 46 4 13 (nil) [1 uses])
(note 46 45 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":262:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 50 4 (set (reg:SI 2 r2 [148])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":262:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 48 51 4 (set (mem/v/c:QI (reg/f:SI 3 r3 [147]) [0 pFlash.ProcedureOnGoing+0 S1 A32])
        (reg:QI 2 r2 [149])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":262:29 263 {*arm_movqi_insn}
     (nil))
(insn 51 50 52 4 (set (reg/f:SI 3 r3 [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":263:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 4 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [150])
                (const_int 12 [0xc])) [3 pEraseInit_28(D)->NbSectors+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":263:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 4 (set (reg/f:SI 2 r2 [151])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":263:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 4 (set (mem/v/c:SI (plus:SI (reg/f:SI 2 r2 [151])
                (const_int 4 [0x4])) [3 pFlash.NbSectorsToErase+0 S4 A32])
        (reg:SI 3 r3 [orig:127 _15 ] [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":263:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 4 (set (reg/f:SI 3 r3 [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":264:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 4 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [152])
                (const_int 8 [0x8])) [3 pEraseInit_28(D)->Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":264:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 4 (set (reg/f:SI 2 r2 [153])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":264:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 4 (set (mem/v/c:SI (plus:SI (reg/f:SI 2 r2 [153])
                (const_int 12 [0xc])) [3 pFlash.Sector+0 S4 A32])
        (reg:SI 3 r3 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":264:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 4 (set (reg/f:SI 3 r3 [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":265:49 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 4 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [154])
                (const_int 16 [0x10])) [3 pEraseInit_28(D)->VoltageRange+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":265:49 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 4 (set (reg:SI 2 r2 [orig:130 _18 ] [130])
        (zero_extend:SI (reg:QI 3 r3 [orig:129 _17 ] [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":265:30 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 62 61 64 4 (set (reg/f:SI 3 r3 [155])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":265:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 62 65 4 (set (mem/v/c:QI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 8 [0x8])) [0 pFlash.VoltageForErase+0 S1 A32])
        (reg:QI 2 r2 [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":265:28 263 {*arm_movqi_insn}
     (nil))
(insn 65 64 66 4 (set (reg/f:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 4 (set (reg:SI 2 r2 [orig:131 _19 ] [131])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [157])
                (const_int 8 [0x8])) [3 pEraseInit_28(D)->Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 4 (set (reg/f:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [8 pEraseInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 4 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 16 [0x10])) [3 pEraseInit_28(D)->VoltageRange+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 4 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (zero_extend:SI (reg:QI 3 r3 [orig:132 _20 ] [132]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 70 69 71 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:133 _21 ] [133])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 4 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [orig:131 _19 ] [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 72 71 73 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("FLASH_Erase_Sector") [flags 0x3]  <function_decl 000000000735b100 FLASH_Erase_Sector>) [0 FLASH_Erase_Sector S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":268:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 134 135
(code_label 73 72 74 5 14 (nil) [1 uses])
(note 74 73 75 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 82 5 (set (reg:SI 3 r3 [orig:134 _37 ] [134])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":271:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 82 75 83 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:135 <retval> ] [135])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":272:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 92 5 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":272:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 92 83 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_OBProgram (HAL_FLASHEx_OBProgram, funcdef_no=136, decl_uid=7310, cgraph_uid=141, symbol_order=140)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 43:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 57:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 73:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 92:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 100:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 104:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 109:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 116:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 122:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 123:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 7
EBB 8 9
EBB 10 11
EBB 12 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 131: point = 0, n_alt = -1
   Insn 130: point = 0, n_alt = -2
   Insn 126: point = 1, n_alt = -2
  BB 3
   Insn 133: point = 4, n_alt = -1
   Insn 14: point = 4, n_alt = 1
  BB 14
   Insn 123: point = 5, n_alt = 1
   Insn 122: point = 6, n_alt = 6
   Insn 121: point = 7, n_alt = 0
   Insn 120: point = 9, n_alt = 1
   Insn 119: point = 10, n_alt = 5
  BB 13
   Insn 116: point = 11, n_alt = 6
   Insn 115: point = 12, n_alt = 0
   Insn 114: point = 14, n_alt = -2
   Insn 113: point = 15, n_alt = -1
   Insn 112: point = 15, n_alt = -2
   Insn 111: point = 16, n_alt = 0
   Insn 110: point = 18, n_alt = 5
   Insn 109: point = 20, n_alt = 5
  BB 12
   Insn 107: point = 21, n_alt = -1
   Insn 106: point = 21, n_alt = 0
   Insn 105: point = 22, n_alt = 0
   Insn 104: point = 24, n_alt = 5
   Insn 103: point = 26, n_alt = 5
  BB 11
   Insn 100: point = 27, n_alt = 6
   Insn 99: point = 28, n_alt = 0
   Insn 98: point = 30, n_alt = -2
   Insn 97: point = 31, n_alt = -1
   Insn 96: point = 31, n_alt = -2
   Insn 95: point = 32, n_alt = -2
   Insn 94: point = 33, n_alt = -2
   Insn 93: point = 34, n_alt = 0
   Insn 92: point = 36, n_alt = 2
   Insn 91: point = 38, n_alt = 1
   Insn 90: point = 40, n_alt = 5
   Insn 89: point = 41, n_alt = 0
   Insn 88: point = 43, n_alt = 0
   Insn 87: point = 45, n_alt = 1
   Insn 86: point = 47, n_alt = 5
   Insn 85: point = 48, n_alt = 0
   Insn 84: point = 50, n_alt = 0
   Insn 83: point = 52, n_alt = 1
   Insn 82: point = 54, n_alt = 5
  BB 10
   Insn 80: point = 55, n_alt = -1
   Insn 79: point = 55, n_alt = 0
   Insn 78: point = 56, n_alt = 0
   Insn 77: point = 58, n_alt = 5
   Insn 76: point = 60, n_alt = 5
  BB 9
   Insn 73: point = 61, n_alt = 6
   Insn 72: point = 62, n_alt = 0
   Insn 71: point = 64, n_alt = -2
   Insn 70: point = 65, n_alt = -1
   Insn 69: point = 65, n_alt = -2
   Insn 68: point = 66, n_alt = 0
   Insn 67: point = 68, n_alt = 5
   Insn 66: point = 70, n_alt = 5
  BB 8
   Insn 64: point = 71, n_alt = -1
   Insn 63: point = 71, n_alt = 0
   Insn 62: point = 72, n_alt = 0
   Insn 61: point = 74, n_alt = 5
   Insn 60: point = 76, n_alt = 5
  BB 6
   Insn 135: point = 77, n_alt = -1
   Insn 43: point = 77, n_alt = 6
   Insn 42: point = 78, n_alt = 0
   Insn 41: point = 80, n_alt = -2
   Insn 40: point = 81, n_alt = -1
   Insn 39: point = 81, n_alt = -2
   Insn 38: point = 82, n_alt = -2
   Insn 37: point = 83, n_alt = 5
   Insn 36: point = 85, n_alt = 5
   Insn 35: point = 86, n_alt = 5
   Insn 34: point = 88, n_alt = 5
  BB 7
   Insn 57: point = 89, n_alt = 6
   Insn 56: point = 90, n_alt = 0
   Insn 55: point = 92, n_alt = -2
   Insn 54: point = 93, n_alt = -1
   Insn 53: point = 93, n_alt = -2
   Insn 52: point = 94, n_alt = -2
   Insn 51: point = 95, n_alt = 5
   Insn 50: point = 97, n_alt = 5
   Insn 49: point = 98, n_alt = 5
   Insn 48: point = 100, n_alt = 5
  BB 5
   Insn 32: point = 101, n_alt = -1
   Insn 31: point = 101, n_alt = 0
   Insn 30: point = 102, n_alt = 5
   Insn 29: point = 104, n_alt = 5
  BB 4
   Insn 27: point = 105, n_alt = -1
   Insn 26: point = 105, n_alt = 0
   Insn 25: point = 106, n_alt = 0
   Insn 24: point = 108, n_alt = 5
   Insn 23: point = 110, n_alt = 5
   Insn 22: point = 111, n_alt = 6
   Insn 21: point = 112, n_alt = 0
   Insn 20: point = 114, n_alt = 1
   Insn 19: point = 115, n_alt = 5
  BB 2
   Insn 12: point = 116, n_alt = -1
   Insn 11: point = 116, n_alt = 0
   Insn 10: point = 117, n_alt = 1
   Insn 9: point = 119, n_alt = 5
   Insn 8: point = 120, n_alt = 6
   Insn 7: point = 121, n_alt = 0
   Insn 6: point = 123, n_alt = 1
   Insn 2: point = 124, n_alt = 7
 r113: [116..117]
 r114: [107..108]
 r115: [105..106]
 r116: [101..102]
 r117: [81..86]
 r118: [82..83]
 r119: [93..98]
 r120: [94..95]
 r121: [73..74]
 r122: [71..72]
 r123: [67..68]
 r124: [65..66]
 r125: [57..58]
 r126: [55..56]
 r127: [51..52]
 r128: [31..48]
 r129: [44..45]
 r130: [32..41]
 r131: [37..38]
 r132: [33..34]
 r133: [23..24]
 r134: [21..22]
 r135: [17..18]
 r136: [15..16]
 r137: [2..5]
 r138: [0..1]
 r139: [122..123]
 r140: [120..121]
 r141: [118..119]
 r142: [111..115]
 r143: [113..114]
 r144: [111..112]
 r145: [109..110]
 r146: [103..104]
 r147: [87..88]
 r148: [84..85]
 r149: [79..80]
 r150: [77..78]
 r151: [99..100]
 r152: [96..97]
 r153: [91..92]
 r154: [89..90]
 r155: [75..76]
 r156: [69..70]
 r157: [63..64]
 r158: [61..62]
 r159: [59..60]
 r160: [53..54]
 r161: [49..50]
 r162: [46..47]
 r163: [42..43]
 r164: [39..40]
 r165: [35..36]
 r166: [29..30]
 r167: [27..28]
 r168: [25..26]
 r169: [19..20]
 r170: [13..14]
 r171: [11..12]
 r172: [6..10]
 r173: [8..9]
 r174: [6..7]
Compressing live ranges: from 124 to 112 - 90%
Ranges after the compression:
 r113: [104..105]
 r114: [96..97]
 r115: [94..95]
 r116: [90..91]
 r117: [74..77]
 r118: [74..75]
 r119: [84..87]
 r120: [84..85]
 r121: [66..67]
 r122: [64..65]
 r123: [60..61]
 r124: [58..59]
 r125: [50..51]
 r126: [48..49]
 r127: [44..45]
 r128: [28..41]
 r129: [38..39]
 r130: [28..35]
 r131: [32..33]
 r132: [28..29]
 r133: [20..21]
 r134: [18..19]
 r135: [14..15]
 r136: [12..13]
 r137: [2..3]
 r138: [0..1]
 r139: [110..111]
 r140: [108..109]
 r141: [106..107]
 r142: [100..103]
 r143: [102..103]
 r144: [100..101]
 r145: [98..99]
 r146: [92..93]
 r147: [78..79]
 r148: [76..77]
 r149: [72..73]
 r150: [70..71]
 r151: [88..89]
 r152: [86..87]
 r153: [82..83]
 r154: [80..81]
 r155: [68..69]
 r156: [62..63]
 r157: [56..57]
 r158: [54..55]
 r159: [52..53]
 r160: [46..47]
 r161: [42..43]
 r162: [40..41]
 r163: [36..37]
 r164: [34..35]
 r165: [30..31]
 r166: [26..27]
 r167: [24..25]
 r168: [22..23]
 r169: [16..17]
 r170: [10..11]
 r171: [8..9]
 r172: [4..7]
 r173: [6..7]
 r174: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 39
changing reg in insn 37
changing reg in insn 38
changing reg in insn 49
changing reg in insn 53
changing reg in insn 51
changing reg in insn 52
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 96
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 95
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 123
changing reg in insn 14
changing reg in insn 126
changing reg in insn 126
changing reg in insn 130
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 22
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 66
changing reg in insn 67
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 76
changing reg in insn 77
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 109
changing reg in insn 110
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 119
changing reg in insn 122
changing reg in insn 120
changing reg in insn 121
changing reg in insn 122
deleting insn with uid = 7.
deleting insn with uid = 21.
deleting insn with uid = 42.
deleting insn with uid = 56.
deleting insn with uid = 72.
deleting insn with uid = 95.
deleting insn with uid = 96.
deleting insn with uid = 99.
deleting insn with uid = 115.
deleting insn with uid = 121.
deleting insn with uid = 126.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 113.


HAL_FLASHEx_OBProgram

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={12d,13u} r1={9d,3u} r2={11d,5u} r3={54d,47u} r7={1d,37u} r12={10d} r13={1d,20u} r14={6d} r15={5d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={11d,6u} r101={5d} r102={1d,1u} r104={5d} r105={5d} r106={5d} 
;;    total ref usage 629{497d,132u,0e} in 91{86 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 139 140 141
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])
        (reg:SI 0 r0 [ pOBInit ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":282:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 3 r3 [139])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":283:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":283:21 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 3 r3 [141])
                    (const_int 24 [0x18])) [0 pFlash.Lock+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 273 {arm_cond_branch}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 133 3 (set (reg:SI 3 r3 [orig:137 _29 ] [137])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 133 14 134 3 (set (pc)
        (label_ref 124)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 284 {*arm_jump}
     (nil)
 -> 124)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:286:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 137

(barrier 134 133 17)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 115 142 143 144 145
(code_label 17 134 18 4 19 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 22 4 (set (reg:SI 2 r2 [143])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 20 23 4 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [142])
                (const_int 24 [0x18])) [0 pFlash.Lock+0 S1 A32])
        (reg:QI 2 r2 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":286:3 263 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":292:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem:SI (reg/f:SI 3 r3 [145]) [3 pOBInit_38(D)->OptionType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":292:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":292:28 90 {*arm_andsi3_insn}
     (nil))
(insn 26 25 27 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":292:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":292:6 273 {arm_cond_branch}
     (nil)
 -> 58)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 116 146
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:SI 3 r3 [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":295:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 5 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [146])
                (const_int 4 [0x4])) [3 pOBInit_38(D)->WRPState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":295:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":295:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":295:8 273 {arm_cond_branch}
     (nil)
 -> 46)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 117 118 147 148 149 150
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 3 r3 [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 6 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 8 [0x8])) [3 pOBInit_38(D)->WRPSector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 3 r3 [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 6 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [148])
                (const_int 12 [0xc])) [3 pOBInit_38(D)->Banks+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 6 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 6 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 40 39 41 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_EnableWRP") [flags 0x3]  <function_decl 00000000073fb200 FLASH_OB_EnableWRP>) [0 FLASH_OB_EnableWRP S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 41 40 43 6 (set (reg:SI 3 r3 [149])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 41 135 6 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":298:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 135 43 136 6 (set (pc)
        (label_ref 58)) 284 {*arm_jump}
     (nil)
 -> 58)
;;  succ:       8 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 136 135 46)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 119 120 151 152 153 154
(code_label 46 136 47 7 22 (nil) [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg/f:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 7 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [151])
                (const_int 8 [0x8])) [3 pOBInit_38(D)->WRPSector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 7 (set (reg/f:SI 3 r3 [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 7 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [152])
                (const_int 12 [0xc])) [3 pOBInit_38(D)->Banks+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 7 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 7 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 54 53 55 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_DisableWRP") [flags 0x3]  <function_decl 00000000073fb300 FLASH_OB_DisableWRP>) [0 FLASH_OB_DisableWRP S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 55 54 57 7 (set (reg:SI 3 r3 [153])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 55 58 7 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [154])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":303:16 263 {*arm_movqi_insn}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       4
;;              7 (FALLTHRU)
;;              6 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 121 122 155
(code_label 58 57 59 8 21 (nil) [2 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:SI 3 r3 [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":308:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 8 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem:SI (reg/f:SI 3 r3 [155]) [3 pOBInit_38(D)->OptionType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":308:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 8 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (and:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":308:28 90 {*arm_andsi3_insn}
     (nil))
(insn 63 62 64 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":308:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":308:6 273 {arm_cond_branch}
     (nil)
 -> 74)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 123 124 156 157 158
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:SI 3 r3 [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 9 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [156])
                (const_int 16 [0x10])) [3 pOBInit_38(D)->RDPLevel+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 9 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (zero_extend:SI (reg:QI 3 r3 [orig:123 _11 ] [123]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:14 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 69 68 70 9 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:14 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 70 69 71 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_RDP_LevelConfig") [flags 0x3]  <function_decl 00000000073fb400 FLASH_OB_RDP_LevelConfig>) [0 FLASH_OB_RDP_LevelConfig S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 71 70 73 9 (set (reg:SI 3 r3 [157])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 71 74 9 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [158])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":310:14 263 {*arm_movqi_insn}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 125 126 159
(code_label 74 73 75 10 23 (nil) [1 uses])
(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (set (reg/f:SI 3 r3 [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":314:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 10 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem:SI (reg/f:SI 3 r3 [159]) [3 pOBInit_38(D)->OptionType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":314:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 10 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (and:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":314:28 90 {*arm_andsi3_insn}
     (nil))
(insn 79 78 80 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":314:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 80 79 81 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":314:6 273 {arm_cond_branch}
     (nil)
 -> 101)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 127 128 129 130 131 132 160 161 162 163 164 165 166 167
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg/f:SI 3 r3 [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 11 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [160])
                    (const_int 24 [0x18])) [0 pOBInit_38(D)->USERConfig+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:41 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 84 83 85 11 (set (reg:SI 3 r3 [161])
        (and:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (const_int 32 [0x20]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 90 {*arm_andsi3_insn}
     (nil))
(insn 85 84 86 11 (set (reg:SI 0 r0 [orig:128 _16 ] [128])
        (zero_extend:SI (reg:QI 3 r3 [161]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 86 85 87 11 (set (reg/f:SI 3 r3 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":317:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 11 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [162])
                    (const_int 24 [0x18])) [0 pOBInit_38(D)->USERConfig+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":317:41 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 88 87 89 11 (set (reg:SI 3 r3 [163])
        (and:SI (reg:SI 3 r3 [orig:129 _17 ] [129])
            (const_int 64 [0x40]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 90 {*arm_andsi3_insn}
     (nil))
(insn 89 88 90 11 (set (reg:SI 1 r1 [orig:130 _18 ] [130])
        (zero_extend:SI (reg:QI 3 r3 [163]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 90 89 91 11 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":318:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 11 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [164])
                    (const_int 24 [0x18])) [0 pOBInit_38(D)->USERConfig+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":318:41 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 92 91 93 11 (set (reg:SI 3 r3 [165])
        (and:SI (reg:SI 3 r3 [orig:131 _19 ] [131])
            (const_int -128 [0xffffffffffffff80]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 90 {*arm_andsi3_insn}
     (nil))
(insn 93 92 94 11 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (zero_extend:SI (reg:QI 3 r3 [165]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 94 93 97 11 (set (reg:SI 2 r2)
        (reg:SI 3 r3 [orig:132 _20 ] [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 97 94 98 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_UserConfig") [flags 0x3]  <function_decl 00000000073fb500 FLASH_OB_UserConfig>) [0 FLASH_OB_UserConfig S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:QI (use (reg:SI 1 r1))
                (expr_list:QI (use (reg:SI 2 r2))
                    (nil))))))
(insn 98 97 100 11 (set (reg:SI 3 r3 [166])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 100 98 101 11 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [167])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":316:14 263 {*arm_movqi_insn}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 133 134 168
(code_label 101 100 102 12 24 (nil) [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:SI 3 r3 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":322:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 104 103 105 12 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (mem:SI (reg/f:SI 3 r3 [168]) [3 pOBInit_38(D)->OptionType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":322:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 105 104 106 12 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (and:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":322:28 90 {*arm_andsi3_insn}
     (nil))
(insn 106 105 107 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":322:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 107 106 108 12 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":322:6 273 {arm_cond_branch}
     (nil)
 -> 117)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 135 136 169 170 171
(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 13 (set (reg/f:SI 3 r3 [169])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 110 109 111 13 (set (reg:SI 3 r3 [orig:135 _23 ] [135])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 20 [0x14])) [3 pOBInit_38(D)->BORLevel+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 111 110 112 13 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (zero_extend:SI (reg:QI 3 r3 [orig:135 _23 ] [135]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:14 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 112 111 113 13 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:136 _24 ] [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:14 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 113 112 114 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_BOR_LevelConfig") [flags 0x3]  <function_decl 00000000073fb600 FLASH_OB_BOR_LevelConfig>) [0 FLASH_OB_BOR_LevelConfig S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 114 113 116 13 (set (reg:SI 3 r3 [170])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 116 114 117 13 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [171])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":324:14 263 {*arm_movqi_insn}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137 172 173 174
(code_label 117 116 118 14 25 (nil) [1 uses])
(note 118 117 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 14 (set (reg/f:SI 3 r3 [172])
        (symbol_ref:SI ("pFlash") [flags 0x40]  <var_decl 000000000736f870 pFlash>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":328:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 120 119 122 14 (set (reg:SI 2 r2 [173])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":328:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 122 120 123 14 (set (mem/c:QI (plus:SI (reg/f:SI 3 r3 [172])
                (const_int 24 [0x18])) [0 pFlash.Lock+0 S1 A32])
        (reg:QI 2 r2 [174])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":328:3 263 {*arm_movqi_insn}
     (nil))
(insn 123 122 124 14 (set (reg:SI 3 r3 [orig:137 _29 ] [137])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":330:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       15 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:330:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 137

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:330:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:286:3
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 137
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 137
;; lr  def 	 0 [r0] 138
(code_label 124 123 125 15 20 (nil) [1 uses])
(note 125 124 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 130 125 131 15 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:138 <retval> ] [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":331:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 137 15 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":331:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 137 131 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_OBGetConfig (HAL_FLASHEx_OBGetConfig, funcdef_no=137, decl_uid=7312, cgraph_uid=142, symbol_order=141)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 26:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 36: point = 0, n_alt = -1
  BB 2
   Insn 32: point = 0, n_alt = 7
   Insn 31: point = 1, n_alt = 5
   Insn 30: point = 2, n_alt = -2
   Insn 29: point = 4, n_alt = -2
   Insn 28: point = 6, n_alt = -2
   Insn 27: point = 7, n_alt = -1
   Insn 26: point = 7, n_alt = 6
   Insn 25: point = 8, n_alt = 0
   Insn 24: point = 10, n_alt = 5
   Insn 23: point = 11, n_alt = -2
   Insn 22: point = 13, n_alt = -2
   Insn 21: point = 14, n_alt = -1
   Insn 20: point = 14, n_alt = 7
   Insn 19: point = 15, n_alt = 5
   Insn 18: point = 16, n_alt = -2
   Insn 17: point = 18, n_alt = -2
   Insn 16: point = 20, n_alt = -2
   Insn 15: point = 21, n_alt = -1
   Insn 14: point = 21, n_alt = 7
   Insn 13: point = 22, n_alt = 5
   Insn 12: point = 23, n_alt = -2
   Insn 11: point = 25, n_alt = -2
   Insn 10: point = 27, n_alt = -2
   Insn 9: point = 28, n_alt = -1
   Insn 8: point = 28, n_alt = 7
   Insn 7: point = 29, n_alt = 1
   Insn 6: point = 30, n_alt = 5
   Insn 2: point = 31, n_alt = 7
 r113: [24..25]
 r114: [21..23]
 r115: [17..18]
 r116: [14..16]
 r117: [9..11]
 r118: [3..4]
 r119: [0..2]
 r120: [28..30]
 r121: [28..29]
 r122: [26..27]
 r123: [21..22]
 r124: [19..20]
 r125: [14..15]
 r126: [12..13]
 r127: [7..10]
 r128: [7..8]
 r129: [5..6]
 r130: [0..1]
Compressing live ranges: from 31 to 26 - 83%
Ranges after the compression:
 r113: [20..21]
 r114: [18..19]
 r115: [14..15]
 r116: [12..13]
 r117: [8..9]
 r118: [2..3]
 r119: [0..1]
 r120: [24..25]
 r121: [24..25]
 r122: [22..23]
 r123: [18..19]
 r124: [16..17]
 r125: [12..13]
 r126: [10..11]
 r127: [6..9]
 r128: [6..7]
 r129: [4..5]
 r130: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 23
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 32
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
deleting insn with uid = 11.
deleting insn with uid = 17.
deleting insn with uid = 25.
deleting insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.


HAL_FLASHEx_OBGetConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={5d,5u} r1={5d} r2={10d,5u} r3={14d,9u} r7={1d,9u} r12={8d} r13={1d,7u} r14={5d} r15={4d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 398{362d,36u,0e} in 25{21 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])
        (reg:SI 0 r0 [ pOBInit ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":341:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":342:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2 [121])
        (const_int 15 [0xf])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":342:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 3 r3 [120]) [3 pOBInit_9(D)->OptionType+0 S4 A32])
        (reg:SI 2 r2 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":342:23 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_GetWRP") [flags 0x3]  <function_decl 00000000073fb800 FLASH_OB_GetWRP>) [0 FLASH_OB_GetWRP S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":345:34 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 10 9 12 2 (set (reg:SI 3 r3 [122])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":345:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 10 13 2 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (reg:SI 3 r3 [orig:113 _1 ] [113])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":345:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":345:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 8 [0x8])) [3 pOBInit_9(D)->WRPSector+0 S4 A32])
        (reg:SI 2 r2 [orig:114 _2 ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":345:22 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 15 14 16 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_GetRDP") [flags 0x3]  <function_decl 00000000073fb900 FLASH_OB_GetRDP>) [0 FLASH_OB_GetRDP S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":348:33 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 16 15 18 2 (set (reg:SI 3 r3 [124])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":348:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 16 19 2 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":348:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":348:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 16 [0x10])) [3 pOBInit_9(D)->RDPLevel+0 S4 A32])
        (reg:SI 2 r2 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":348:21 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 21 20 22 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_GetUser") [flags 0x3]  <function_decl 00000000073fb700 FLASH_OB_GetUser>) [0 FLASH_OB_GetUser S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":351:34 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 22 21 23 2 (set (reg:SI 3 r3 [126])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":351:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (reg:SI 3 r3 [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":351:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 26 2 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":351:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 24 27 2 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [127])
                (const_int 24 [0x18])) [0 pOBInit_9(D)->USERConfig+0 S1 A32])
        (reg:QI 2 r2 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":351:23 263 {*arm_movqi_insn}
     (nil))
(call_insn 27 26 28 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_GetBOR") [flags 0x3]  <function_decl 00000000073fba00 FLASH_OB_GetBOR>) [0 FLASH_OB_GetBOR S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":354:33 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 28 27 30 2 (set (reg:SI 3 r3 [129])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":354:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 28 31 2 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (reg:SI 3 r3 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":354:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 pOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":354:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 35 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [130])
                (const_int 20 [0x14])) [3 pOBInit_9(D)->BORLevel+0 S4 A32])
        (reg:SI 2 r2 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":354:21 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:355:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:355:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 35 32 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":355:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 37 36 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_AdvOBProgram (HAL_FLASHEx_AdvOBProgram, funcdef_no=138, decl_uid=7314, cgraph_uid=143, symbol_order=142)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 39:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 50: point = 0, n_alt = -1
   Insn 49: point = 0, n_alt = -2
   Insn 45: point = 1, n_alt = -2
   Insn 42: point = 3, n_alt = 1
  BB 4
   Insn 52: point = 4, n_alt = -1
   Insn 27: point = 4, n_alt = 6
   Insn 26: point = 5, n_alt = 0
   Insn 25: point = 7, n_alt = -2
   Insn 24: point = 8, n_alt = -1
   Insn 23: point = 8, n_alt = -2
   Insn 22: point = 9, n_alt = -2
   Insn 21: point = 11, n_alt = 1
   Insn 20: point = 13, n_alt = 5
  BB 5
   Insn 39: point = 14, n_alt = 6
   Insn 38: point = 15, n_alt = 0
   Insn 37: point = 17, n_alt = -2
   Insn 36: point = 18, n_alt = -1
   Insn 35: point = 18, n_alt = -2
   Insn 34: point = 19, n_alt = -2
   Insn 33: point = 21, n_alt = 1
   Insn 32: point = 23, n_alt = 5
  BB 3
   Insn 18: point = 24, n_alt = -1
   Insn 17: point = 24, n_alt = 0
   Insn 16: point = 25, n_alt = 5
   Insn 15: point = 27, n_alt = 5
  BB 2
   Insn 13: point = 28, n_alt = -1
   Insn 12: point = 28, n_alt = 0
   Insn 11: point = 29, n_alt = 0
   Insn 10: point = 31, n_alt = 5
   Insn 9: point = 33, n_alt = 5
   Insn 8: point = 34, n_alt = 6
   Insn 7: point = 35, n_alt = 0
   Insn 6: point = 37, n_alt = 1
   Insn 2: point = 38, n_alt = 7
 r113: [30..31]
 r114: [28..29]
 r115: [24..25]
 r116: [10..11]
 r117: [8..9]
 r118: [20..21]
 r119: [18..19]
 r120: [2..3]
 r121: [0..1]
 r122: [36..37]
 r123: [34..35]
 r124: [32..33]
 r125: [26..27]
 r126: [12..13]
 r127: [6..7]
 r128: [4..5]
 r129: [22..23]
 r130: [16..17]
 r131: [14..15]
Compressing live ranges: from 38 to 38 - 100%
Ranges after the compression:
 r113: [30..31]
 r114: [28..29]
 r115: [24..25]
 r116: [10..11]
 r117: [8..9]
 r118: [20..21]
 r119: [18..19]
 r120: [2..3]
 r121: [0..1]
 r122: [36..37]
 r123: [34..35]
 r124: [32..33]
 r125: [26..27]
 r126: [12..13]
 r127: [6..7]
 r128: [4..5]
 r129: [22..23]
 r130: [16..17]
 r131: [14..15]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 42
changing reg in insn 45
changing reg in insn 45
changing reg in insn 49
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
deleting insn with uid = 7.
deleting insn with uid = 22.
deleting insn with uid = 26.
deleting insn with uid = 34.
deleting insn with uid = 38.
deleting insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 36.


HAL_FLASHEx_AdvOBProgram

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={6d,7u} r1={3d} r2={3d} r3={16d,13u} r7={1d,15u} r12={4d} r13={1d,8u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={4d,2u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 250{204d,46u,0e} in 28{26 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 122 123 124
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])
        (reg:SI 0 r0 [ pAdvOBInit ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":370:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 3 r3 [122])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":371:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":371:21 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":377:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (reg/f:SI 3 r3 [124]) [3 pAdvOBInit_12(D)->OptionType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":377:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (and:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":377:33 90 {*arm_andsi3_insn}
     (nil))
(insn 12 11 13 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":377:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":377:6 273 {arm_cond_branch}
     (nil)
 -> 40)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 125
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":381:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 4 [0x4])) [3 pAdvOBInit_12(D)->PCROPState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":381:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":381:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":381:8 273 {arm_cond_branch}
     (nil)
 -> 30)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 116 117 126 127 128
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":387:47 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 23 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 3 r3 [126])
                    (const_int 8 [0x8])) [1 pAdvOBInit_12(D)->Sectors+0 S2 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":387:47 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 23 21 24 4 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":387:16 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 24 23 25 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_EnablePCROP") [flags 0x3]  <function_decl 00000000073fbb00 FLASH_OB_EnablePCROP>) [0 FLASH_OB_EnablePCROP S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":387:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 25 24 27 4 (set (reg:SI 3 r3 [127])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":387:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 25 52 4 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":387:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 52 27 53 4 (set (pc)
        (label_ref 40)) 284 {*arm_jump}
     (nil)
 -> 40)
;;  succ:       6 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 53 52 30)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 118 119 129 130 131
(code_label 30 53 31 5 31 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":399:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 35 5 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem:HI (plus:SI (reg/f:SI 3 r3 [129])
                    (const_int 8 [0x8])) [1 pAdvOBInit_12(D)->Sectors+0 S2 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":399:48 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 35 33 36 5 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":399:16 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 36 35 37 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_OB_DisablePCROP") [flags 0x3]  <function_decl 00000000073fbc00 FLASH_OB_DisablePCROP>) [0 FLASH_OB_DisablePCROP S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":399:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 37 36 39 5 (set (reg:SI 3 r3 [130])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":399:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 37 40 5 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":399:16 263 {*arm_movqi_insn}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              5 (FALLTHRU)
;;              4 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 120 121
(code_label 40 39 41 6 30 (nil) [2 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 49 6 (set (reg:SI 3 r3 [orig:120 _17 ] [120])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":415:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 49 42 50 6 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:121 <retval> ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":416:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 54 6 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":416:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 54 50 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_AdvOBGetConfig (HAL_FLASHEx_AdvOBGetConfig, funcdef_no=139, decl_uid=7316, cgraph_uid=144, symbol_order=143)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =rk  (1) rk {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) m  (1) r {*thumb2_movhi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 4
   Insn 10: point = 1, n_alt = 0
   Insn 9: point = 3, n_alt = 5
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 6, n_alt = 5
   Insn 6: point = 8, n_alt = 5
   Insn 2: point = 9, n_alt = 7
 r113: [7..8]
 r114: [2..4]
 r115: [5..6]
 r116: [0..3]
 r117: [0..1]
Compressing live ranges: from 9 to 8 - 88%
Ranges after the compression:
 r113: [6..7]
 r114: [2..3]
 r115: [4..5]
 r116: [0..3]
 r117: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_FLASHEx_AdvOBGetConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d} r2={2d,1u} r3={4d,3u} r7={1d,5u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 42{28d,14u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])
        (reg:SI 0 r0 [ pAdvOBInit ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":426:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":431:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:HI 3 r3 [115])
        (mem/v:HI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S2 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":431:26 739 {*thumb2_movhi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":431:26 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 9 8 11 2 (set (reg/f:SI 3 r3 [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 pAdvOBInit+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":431:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 9 14 2 (set (mem:HI (plus:SI (reg/f:SI 3 r3 [116])
                (const_int 8 [0x8])) [1 pAdvOBInit_4(D)->Sectors+0 S2 A32])
        (reg:HI 2 r2 [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":431:23 739 {*thumb2_movhi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:443:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:443:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":443:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 17 15 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_OB_SelectPCROP (HAL_FLASHEx_OB_SelectPCROP, funcdef_no=140, decl_uid=7318, cgraph_uid=145, symbol_order=144)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) Uu {*arm_movqi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 13:  (0) r  (1) r  (2) K {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 25: point = 0, n_alt = -1
   Insn 24: point = 0, n_alt = -2
   Insn 20: point = 1, n_alt = -2
   Insn 17: point = 3, n_alt = 1
   Insn 16: point = 4, n_alt = 6
   Insn 15: point = 5, n_alt = 0
   Insn 14: point = 7, n_alt = 0
   Insn 13: point = 9, n_alt = 2
   Insn 12: point = 11, n_alt = 5
   Insn 11: point = 12, n_alt = 5
   Insn 10: point = 13, n_alt = 6
   Insn 9: point = 14, n_alt = 0
   Insn 8: point = 16, n_alt = 0
   Insn 7: point = 18, n_alt = 0
   Insn 6: point = 20, n_alt = 5
   Insn 5: point = 22, n_alt = 5
 r113: [21..22]
 r114: [17..18]
 r115: [4..12]
 r116: [6..7]
 r117: [2..3]
 r118: [0..1]
 r119: [19..20]
 r120: [15..16]
 r121: [13..14]
 r122: [10..11]
 r123: [8..9]
 r124: [4..5]
Compressing live ranges: from 23 to 22 - 95%
Ranges after the compression:
 r113: [20..21]
 r114: [16..17]
 r115: [4..11]
 r116: [6..7]
 r117: [2..3]
 r118: [0..1]
 r119: [18..19]
 r120: [14..15]
 r121: [12..13]
 r122: [10..11]
 r123: [8..9]
 r124: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 16
changing reg in insn 14
changing reg in insn 17
changing reg in insn 20
changing reg in insn 20
changing reg in insn 24
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
deleting insn with uid = 9.
deleting insn with uid = 15.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_FLASHEx_OB_SelectPCROP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={9d,8u} r7={1d,4u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 52{34d,18u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118 119 120 121 122 123 124
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888279 [0x40023c17])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":462:64 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:QI 3 r3 [119])
        (mem/v:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":462:64 263 {*arm_movqi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [119]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":462:64 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 8 7 10 2 (set (reg:SI 3 r3 [120])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 127 [0x7f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":462:13 90 {*arm_andsi3_insn}
     (nil))
(insn 10 8 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 optiontmp+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":462:13 263 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073888279 [0x40023c17])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":465:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:QI 3 r3 [122])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 optiontmp+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":465:42 263 {*arm_movqi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [123])
        (ior:SI (reg:SI 3 r3 [122])
            (const_int -128 [0xffffffffffffff80]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":465:42 106 {*iorsi3_insn}
     (nil))
(insn 14 13 16 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [123]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":465:42 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 14 17 2 (set (mem/v:QI (reg/f:SI 2 r2 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":465:40 263 {*arm_movqi_insn}
     (nil))
(insn 17 16 24 2 (set (reg:SI 3 r3 [orig:117 _8 ] [117])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":467:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 17 25 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:118 <retval> ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":468:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 29 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":468:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 29 25 0 NOTE_INSN_DELETED)

;; Function HAL_FLASHEx_OB_DeSelectPCROP (HAL_FLASHEx_OB_DeSelectPCROP, funcdef_no=141, decl_uid=7320, cgraph_uid=146, symbol_order=145)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) Uu {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -2
   Insn 17: point = 1, n_alt = -2
   Insn 14: point = 3, n_alt = 1
   Insn 13: point = 4, n_alt = 6
   Insn 12: point = 5, n_alt = 5
   Insn 11: point = 6, n_alt = 5
   Insn 10: point = 7, n_alt = 6
   Insn 9: point = 8, n_alt = 0
   Insn 8: point = 10, n_alt = 0
   Insn 7: point = 12, n_alt = 0
   Insn 6: point = 14, n_alt = 5
   Insn 5: point = 16, n_alt = 5
 r113: [15..16]
 r114: [11..12]
 r115: [4..6]
 r116: [2..3]
 r117: [0..1]
 r118: [13..14]
 r119: [9..10]
 r120: [7..8]
 r121: [4..5]
Compressing live ranges: from 17 to 16 - 94%
Ranges after the compression:
 r113: [14..15]
 r114: [10..11]
 r115: [4..5]
 r116: [2..3]
 r117: [0..1]
 r118: [12..13]
 r119: [8..9]
 r120: [6..7]
 r121: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 17
changing reg in insn 21
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
deleting insn with uid = 9.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_FLASHEx_OB_DeSelectPCROP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={7d,6u} r7={1d,4u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 48{32d,16u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118 119 120 121
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888279 [0x40023c17])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":487:64 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:QI 3 r3 [118])
        (mem/v:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":487:64 263 {*arm_movqi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [118]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":487:64 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 8 7 10 2 (set (reg:SI 3 r3 [119])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 127 [0x7f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":487:13 90 {*arm_andsi3_insn}
     (nil))
(insn 10 8 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 optiontmp+0 S1 A8])
        (reg:QI 3 r3 [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":487:13 263 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073888279 [0x40023c17])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":490:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:QI 3 r3 [121])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 optiontmp+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":490:40 263 {*arm_movqi_insn}
     (nil))
(insn 13 12 14 2 (set (mem/v:QI (reg/f:SI 2 r2 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":490:40 263 {*arm_movqi_insn}
     (nil))
(insn 14 13 21 2 (set (reg:SI 3 r3 [orig:116 _7 ] [116])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":492:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 14 22 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":493:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 26 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":493:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 26 22 0 NOTE_INSN_DELETED)

;; Function FLASH_MassErase (FLASH_MassErase, funcdef_no=142, decl_uid=7899, cgraph_uid=147, symbol_order=146)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 12:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 23
	 Choosing alt 1 in insn 23:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 26:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 30: point = 0, n_alt = -1
  BB 2
   Insn 26: point = 0, n_alt = 7
   Insn 25: point = 1, n_alt = 0
   Insn 24: point = 3, n_alt = 5
   Insn 23: point = 4, n_alt = 1
   Insn 22: point = 6, n_alt = 1
   Insn 21: point = 8, n_alt = 1
   Insn 20: point = 9, n_alt = 5
   Insn 19: point = 11, n_alt = 5
   Insn 18: point = 12, n_alt = 7
   Insn 17: point = 13, n_alt = 0
   Insn 16: point = 15, n_alt = 5
   Insn 15: point = 16, n_alt = 5
   Insn 14: point = 18, n_alt = 5
   Insn 13: point = 19, n_alt = 7
   Insn 12: point = 20, n_alt = 2
   Insn 11: point = 22, n_alt = 5
   Insn 10: point = 23, n_alt = 5
   Insn 9: point = 25, n_alt = 5
   Insn 4: point = 26, n_alt = 6
   Insn 3: point = 27, n_alt = 0
   Insn 5: point = 29, n_alt = 7
   Insn 2: point = 29, n_alt = -2
 r113: [24..25]
 r114: [21..23]
 r115: [19..22]
 r116: [19..20]
 r117: [17..18]
 r118: [14..16]
 r119: [12..15]
 r120: [12..13]
 r121: [10..11]
 r122: [5..9]
 r123: [7..8]
 r124: [5..6]
 r125: [2..4]
 r126: [0..3]
 r127: [0..1]
 r128: [28..29]
 r129: [26..27]
Compressing live ranges: from 30 to 26 - 86%
Ranges after the compression:
 r113: [20..21]
 r114: [18..19]
 r115: [16..19]
 r116: [16..17]
 r117: [14..15]
 r118: [12..13]
 r119: [10..13]
 r120: [10..11]
 r121: [8..9]
 r122: [4..7]
 r123: [6..7]
 r124: [4..5]
 r125: [2..3]
 r126: [0..3]
 r127: [0..1]
 r128: [24..25]
 r129: [22..23]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_MassErase

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={5d,4u} r3={13d,12u} r7={1d,6u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 68{40d,28u,0e} in 22{22 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 5 2 (set (reg:SI 3 r3 [128])
        (reg:SI 0 r0 [ VoltageRange ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":949:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 2 4 2 (set (mem/c:SI (reg/f:SI 7 r7) [3 Banks+0 S4 A32])
        (reg:SI 1 r1 [ Banks ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":949:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 5 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 VoltageRange+0 S1 A8])
        (reg:QI 3 r3 [129])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":949:1 263 {*arm_movqi_insn}
     (nil))
(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":955:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 16 [0x10])) [3 _1->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":955:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":955:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int -769 [0xfffffffffffffcff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":955:3 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 14 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 16 [0x10])) [3 _3->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":955:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":956:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 16 [0x10])) [3 _5->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":956:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 2 r2 [orig:119 _7 ] [119])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":956:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (ior:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":956:13 106 {*iorsi3_insn}
     (nil))
(insn 18 17 19 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:119 _7 ] [119])
                (const_int 16 [0x10])) [3 _7->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":956:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg:SI 2 r2 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 16 [0x10])) [3 _9->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 VoltageRange+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:33 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 22 21 23 2 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (ashift:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:56 147 {*arm_shiftsi3}
     (nil))
(insn 23 22 24 2 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (ior:SI (reg:SI 3 r3 [orig:124 _12 ] [124])
            (reg:SI 2 r2 [orig:122 _10 ] [122]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:13 106 {*iorsi3_insn}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 2 r2 [orig:126 _14 ] [126])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 2 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (ior:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:13 106 {*iorsi3_insn}
     (nil))
(insn 26 25 29 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:126 _14 ] [126])
                (const_int 16 [0x10])) [3 _14->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:127 _15 ] [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":957:13 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:958:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:958:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 29 26 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 37 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":958:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 37 30 0 NOTE_INSN_DELETED)

;; Function FLASH_Erase_Sector (FLASH_Erase_Sector, funcdef_no=143, decl_uid=7323, cgraph_uid=148, symbol_order=147)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 5:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 16:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 26:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 36:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 48:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 49:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 54
	 Choosing alt 1 in insn 54:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 55:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 59:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 60:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 65
	 Choosing alt 1 in insn 65:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 68:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 73:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 83: point = 0, n_alt = -1
  BB 9
   Insn 73: point = 0, n_alt = 7
   Insn 72: point = 1, n_alt = 0
   Insn 71: point = 3, n_alt = 5
   Insn 70: point = 4, n_alt = 5
   Insn 69: point = 6, n_alt = 5
   Insn 68: point = 7, n_alt = 7
   Insn 67: point = 8, n_alt = 0
   Insn 66: point = 10, n_alt = 5
   Insn 65: point = 11, n_alt = 1
   Insn 64: point = 13, n_alt = 1
   Insn 63: point = 15, n_alt = 5
   Insn 62: point = 16, n_alt = 5
   Insn 61: point = 18, n_alt = 5
   Insn 60: point = 19, n_alt = 7
   Insn 59: point = 20, n_alt = 2
   Insn 58: point = 22, n_alt = 5
   Insn 57: point = 23, n_alt = 5
   Insn 56: point = 25, n_alt = 5
   Insn 55: point = 26, n_alt = 7
   Insn 54: point = 27, n_alt = 1
   Insn 53: point = 29, n_alt = 5
   Insn 52: point = 30, n_alt = 5
   Insn 51: point = 31, n_alt = 5
   Insn 50: point = 33, n_alt = 5
   Insn 49: point = 34, n_alt = 7
   Insn 48: point = 35, n_alt = 2
   Insn 47: point = 37, n_alt = 5
   Insn 46: point = 38, n_alt = 5
   Insn 45: point = 40, n_alt = 5
  BB 7
   Insn 80: point = 41, n_alt = -1
   Insn 36: point = 41, n_alt = 7
   Insn 35: point = 42, n_alt = 1
  BB 5
   Insn 78: point = 43, n_alt = -1
   Insn 26: point = 43, n_alt = 7
   Insn 25: point = 44, n_alt = 1
  BB 3
   Insn 76: point = 45, n_alt = -1
   Insn 16: point = 45, n_alt = 7
   Insn 15: point = 46, n_alt = 1
  BB 8
   Insn 42: point = 47, n_alt = 7
   Insn 41: point = 48, n_alt = 1
  BB 6
   Insn 33: point = 49, n_alt = -1
   Insn 32: point = 49, n_alt = 0
   Insn 31: point = 50, n_alt = 1
  BB 4
   Insn 23: point = 51, n_alt = -1
   Insn 22: point = 51, n_alt = 0
   Insn 21: point = 52, n_alt = 1
  BB 2
   Insn 13: point = 53, n_alt = -1
   Insn 12: point = 53, n_alt = 0
   Insn 11: point = 54, n_alt = 1
   Insn 10: point = 55, n_alt = 7
   Insn 9: point = 56, n_alt = 1
   Insn 5: point = 57, n_alt = 6
   Insn 4: point = 58, n_alt = 0
   Insn 3: point = 60, n_alt = -2
   Insn 2: point = 61, n_alt = 7
 r113: [39..40]
 r114: [36..38]
 r115: [34..37]
 r116: [34..35]
 r117: [32..33]
 r118: [28..31]
 r119: [26..30]
 r120: [26..27]
 r121: [24..25]
 r122: [21..23]
 r123: [19..22]
 r124: [19..20]
 r125: [17..18]
 r126: [12..16]
 r127: [12..13]
 r128: [9..11]
 r129: [7..10]
 r130: [7..8]
 r131: [5..6]
 r132: [2..4]
 r133: [0..3]
 r134: [0..1]
 r135: [59..60]
 r136: [57..58]
 r137: [55..56]
 r138: [53..54]
 r139: [45..46]
 r140: [51..52]
 r141: [43..44]
 r142: [49..50]
 r143: [41..42]
 r144: [47..48]
 r145: [28..29]
 r146: [14..15]
Compressing live ranges: from 61 to 54 - 88%
Ranges after the compression:
 r113: [32..33]
 r114: [30..31]
 r115: [28..31]
 r116: [28..29]
 r117: [26..27]
 r118: [24..25]
 r119: [22..25]
 r120: [22..23]
 r121: [20..21]
 r122: [18..19]
 r123: [16..19]
 r124: [16..17]
 r125: [14..15]
 r126: [10..13]
 r127: [10..11]
 r128: [8..9]
 r129: [6..9]
 r130: [6..7]
 r131: [4..5]
 r132: [2..3]
 r133: [0..3]
 r134: [0..1]
 r135: [52..53]
 r136: [50..51]
 r137: [48..49]
 r138: [46..47]
 r139: [38..39]
 r140: [44..45]
 r141: [36..37]
 r142: [42..43]
 r143: [34..35]
 r144: [40..41]
 r145: [24..25]
 r146: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 49
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 59
changing reg in insn 58
changing reg in insn 60
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 68
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 72
changing reg in insn 71
changing reg in insn 73
changing reg in insn 72
changing reg in insn 73
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 31
changing reg in insn 32
changing reg in insn 35
changing reg in insn 36
changing reg in insn 41
changing reg in insn 42
changing reg in insn 53
changing reg in insn 63
changing reg in insn 64
deleting insn with uid = 4.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_Erase_Sector

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={2d,2u} r2={7d,6u} r3={27d,26u} r7={1d,22u} r13={1d,10u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={3d,3u} r102={1d,1u} 
;;    total ref usage 131{60d,71u,0e} in 55{55 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 135 136 137 138
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 Sector+0 S4 A32])
        (reg:SI 0 r0 [ Sector ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":978:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [135])
        (reg:SI 1 r1 [ VoltageRange ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":978:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 3 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 3 [0x3])) [0 VoltageRange+0 S1 A8])
        (reg:QI 3 r3 [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":978:1 263 {*arm_movqi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 3 r3 [137])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":979:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 tmp_psize+0 S4 A32])
        (reg:SI 3 r3 [137])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":979:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [138])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 3 [0x3])) [0 VoltageRange+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":985:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":985:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":985:6 273 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 139
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 3 r3 [139])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":987:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 76 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 tmp_psize+0 S4 A32])
        (reg:SI 3 r3 [139])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":987:15 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 76 16 77 3 (set (pc)
        (label_ref 43)) 284 {*arm_jump}
     (nil)
 -> 43)
;;  succ:       9 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 77 76 19)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 140
(code_label 19 77 20 4 48 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 3 r3 [140])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 3 [0x3])) [0 VoltageRange+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":989:11 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 22 21 23 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":989:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":989:11 273 {arm_cond_branch}
     (nil)
 -> 29)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 141
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:SI 3 r3 [141])
        (const_int 256 [0x100])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":991:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 78 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 tmp_psize+0 S4 A32])
        (reg:SI 3 r3 [141])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":991:15 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 78 26 79 5 (set (pc)
        (label_ref 43)) 284 {*arm_jump}
     (nil)
 -> 43)
;;  succ:       9 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 79 78 29)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 142
(code_label 29 79 30 6 50 (nil) [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 3 r3 [142])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 3 [0x3])) [0 VoltageRange+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":993:11 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 32 31 33 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [142])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":993:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":993:11 273 {arm_cond_branch}
     (nil)
 -> 39)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 143
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:SI 3 r3 [143])
        (const_int 512 [0x200])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":995:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 80 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 tmp_psize+0 S4 A32])
        (reg:SI 3 r3 [143])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":995:15 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 80 36 81 7 (set (pc)
        (label_ref 43)) 284 {*arm_jump}
     (nil)
 -> 43)
;;  succ:       9 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 81 80 39)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 144
(code_label 39 81 40 8 51 (nil) [1 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 8 (set (reg:SI 3 r3 [144])
        (const_int 768 [0x300])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":999:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 tmp_psize+0 S4 A32])
        (reg:SI 3 r3 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":999:15 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              3 [always] 
;;              5 [always] 
;;              7 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 145 146
(code_label 43 42 44 9 49 (nil) [3 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1003:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 9 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 16 [0x10])) [3 _1->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1003:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 9 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1003:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 9 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int -769 [0xfffffffffffffcff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1003:3 90 {*arm_andsi3_insn}
     (nil))
(insn 49 48 50 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 16 [0x10])) [3 _3->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1003:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1004:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 9 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 16 [0x10])) [3 _5->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1004:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 9 (set (reg/f:SI 1 r1 [orig:119 _7 ] [119])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1004:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 9 (set (reg:SI 3 r3 [145])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [3 tmp_psize+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1004:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 9 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (ior:SI (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [orig:118 _6 ] [118]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1004:13 106 {*iorsi3_insn}
     (nil))
(insn 55 54 56 9 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:119 _7 ] [119])
                (const_int 16 [0x10])) [3 _7->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1004:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 9 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1005:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 9 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 16 [0x10])) [3 _9->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1005:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 9 (set (reg/f:SI 2 r2 [orig:123 _11 ] [123])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1005:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 9 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (and:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int -249 [0xffffffffffffff07]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1005:3 90 {*arm_andsi3_insn}
     (nil))
(insn 60 59 61 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:123 _11 ] [123])
                (const_int 16 [0x10])) [3 _11->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1005:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 9 (set (reg/f:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 9 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:125 _13 ] [125])
                (const_int 16 [0x10])) [3 _13->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 9 (set (reg:SI 3 r3 [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:39 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 9 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (ashift:SI (reg:SI 3 r3 [146])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:39 147 {*arm_shiftsi3}
     (nil))
(insn 65 64 66 9 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (ior:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (reg:SI 2 r2 [orig:126 _14 ] [126]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:13 106 {*iorsi3_insn}
     (nil))
(insn 66 65 67 9 (set (reg/f:SI 2 r2 [orig:129 _17 ] [129])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 9 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (ior:SI (reg:SI 3 r3 [orig:128 _16 ] [128])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:13 106 {*iorsi3_insn}
     (nil))
(insn 68 67 69 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:129 _17 ] [129])
                (const_int 16 [0x10])) [3 _17->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:130 _18 ] [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1006:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 9 (set (reg/f:SI 3 r3 [orig:131 _19 ] [131])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1007:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 9 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:131 _19 ] [131])
                (const_int 16 [0x10])) [3 _19->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1007:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 9 (set (reg/f:SI 2 r2 [orig:133 _21 ] [133])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1007:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 9 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (ior:SI (reg:SI 3 r3 [orig:132 _20 ] [132])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1007:13 106 {*iorsi3_insn}
     (nil))
(insn 73 72 82 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:133 _21 ] [133])
                (const_int 16 [0x10])) [3 _21->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:134 _22 ] [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1007:13 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       10 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:1008:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       9 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:1008:1
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 82 73 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 94 10 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1008:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 94 83 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_EnableWRP (FLASH_OB_EnableWRP, funcdef_no=144, decl_uid=7902, cgraph_uid=149, symbol_order=148)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 9:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =l  (1) l {*arm_one_cmplsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 27
	 Choosing alt 1 in insn 27:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =rk  (1) rk {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = -2
   Insn 36: point = 1, n_alt = -2
   Insn 33: point = 3, n_alt = 1
  BB 3
   Insn 30: point = 4, n_alt = 4
   Insn 29: point = 5, n_alt = 0
   Insn 28: point = 7, n_alt = 0
   Insn 27: point = 9, n_alt = 1
   Insn 26: point = 11, n_alt = 5
   Insn 25: point = 12, n_alt = 0
   Insn 24: point = 14, n_alt = 0
   Insn 23: point = 16, n_alt = 0
   Insn 22: point = 18, n_alt = 5
   Insn 21: point = 19, n_alt = 0
   Insn 20: point = 21, n_alt = 5
   Insn 19: point = 23, n_alt = 5
  BB 2
   Insn 17: point = 24, n_alt = -1
   Insn 16: point = 24, n_alt = 0
   Insn 15: point = 25, n_alt = 1
   Insn 14: point = 26, n_alt = 6
   Insn 13: point = 27, n_alt = 0
   Insn 12: point = 29, n_alt = -2
   Insn 11: point = 30, n_alt = -1
   Insn 10: point = 30, n_alt = 4
   Insn 9: point = 30, n_alt = 6
   Insn 8: point = 31, n_alt = 0
   Insn 7: point = 33, n_alt = 1
   Insn 3: point = 34, n_alt = 7
   Insn 2: point = 34, n_alt = 7
 r113: [22..23]
 r114: [10..19]
 r115: [15..16]
 r116: [10..12]
 r117: [4..11]
 r118: [6..7]
 r119: [2..3]
 r120: [0..1]
 r121: [32..33]
 r122: [30..31]
 r123: [28..29]
 r124: [26..27]
 r125: [24..25]
 r126: [20..21]
 r127: [17..18]
 r128: [13..14]
 r129: [8..9]
 r130: [4..5]
Compressing live ranges: from 34 to 32 - 94%
Ranges after the compression:
 r113: [20..21]
 r114: [10..17]
 r115: [14..15]
 r116: [10..11]
 r117: [4..11]
 r118: [6..7]
 r119: [2..3]
 r120: [0..1]
 r121: [30..31]
 r122: [28..29]
 r123: [26..27]
 r124: [24..25]
 r125: [22..23]
 r126: [18..19]
 r127: [16..17]
 r128: [12..13]
 r129: [8..9]
 r130: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 28
changing reg in insn 33
changing reg in insn 36
changing reg in insn 36
changing reg in insn 40
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
deleting insn with uid = 8.
deleting insn with uid = 13.
deleting insn with uid = 29.
deleting insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.


FLASH_OB_EnableWRP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={14d,12u} r7={1d,11u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 160{122d,38u,0e} in 25{24 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 121 122 123 124 125
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 WRPSector+0 S4 A32])
        (reg:SI 0 r0 [ WRPSector ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1028:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (reg/f:SI 7 r7) [3 Banks+0 S4 A32])
        (reg:SI 1 r1 [ Banks ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1028:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 9 2 (set (reg:SI 3 r3 [121])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1029:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 7 10 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1029:21 263 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1036:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 11 10 12 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1036:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 12 11 14 2 (set (reg:SI 3 r3 [123])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1036:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 12 15 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1036:12 263 {*arm_movqi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [125])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1038:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 15 17 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [125])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1038:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1038:6 273 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 126 127 128 129 130
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:HI 3 r3 [126])
        (mem/v:HI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S2 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:5 739 {*thumb2_movhi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [126]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:5 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 WRPSector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:HI 3 r3 [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [128])
        (not:SI (reg:SI 3 r3 [orig:115 _3 ] [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 169 {*arm_one_cmplsi2}
     (nil))
(insn 25 24 26 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:HI 3 r3 [128]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 1 r1 [orig:117 _5 ] [117])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 3 (set (reg:SI 3 r3 [129])
        (and:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (reg:SI 2 r2 [orig:114 _2 ] [114]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 90 {*arm_andsi3_insn}
     (nil))
(insn 28 27 30 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (reg:HI 3 r3 [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 30 28 31 3 (set (mem/v:HI (reg/f:SI 1 r1 [orig:117 _5 ] [117]) [1 *_5+0 S2 A16])
        (reg:HI 3 r3 [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1040:43 739 {*thumb2_movhi_vfp}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 119 120
(code_label 31 30 32 4 55 (nil) [1 uses])
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 40 4 (set (reg:SI 3 r3 [orig:119 _14 ] [119])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1043:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 40 33 41 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:120 <retval> ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1044:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 46 4 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1044:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 46 41 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_DisableWRP (FLASH_OB_DisableWRP, funcdef_no=145, decl_uid=7905, cgraph_uid=150, symbol_order=149)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 9:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 25
	 Choosing alt 1 in insn 25:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =rk  (1) rk {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 39: point = 0, n_alt = -1
   Insn 38: point = 0, n_alt = -2
   Insn 34: point = 1, n_alt = -2
   Insn 31: point = 3, n_alt = 1
  BB 3
   Insn 28: point = 4, n_alt = 4
   Insn 27: point = 5, n_alt = 0
   Insn 26: point = 7, n_alt = 0
   Insn 25: point = 9, n_alt = 1
   Insn 24: point = 11, n_alt = 5
   Insn 23: point = 12, n_alt = 0
   Insn 22: point = 14, n_alt = 5
   Insn 21: point = 15, n_alt = 0
   Insn 20: point = 17, n_alt = 5
   Insn 19: point = 19, n_alt = 5
  BB 2
   Insn 17: point = 20, n_alt = -1
   Insn 16: point = 20, n_alt = 0
   Insn 15: point = 21, n_alt = 1
   Insn 14: point = 22, n_alt = 6
   Insn 13: point = 23, n_alt = 0
   Insn 12: point = 25, n_alt = -2
   Insn 11: point = 26, n_alt = -1
   Insn 10: point = 26, n_alt = 4
   Insn 9: point = 26, n_alt = 6
   Insn 8: point = 27, n_alt = 0
   Insn 7: point = 29, n_alt = 1
   Insn 3: point = 30, n_alt = 7
   Insn 2: point = 30, n_alt = 7
 r113: [18..19]
 r114: [10..15]
 r115: [10..12]
 r116: [4..11]
 r117: [6..7]
 r118: [2..3]
 r119: [0..1]
 r120: [28..29]
 r121: [26..27]
 r122: [24..25]
 r123: [22..23]
 r124: [20..21]
 r125: [16..17]
 r126: [13..14]
 r127: [8..9]
 r128: [4..5]
Compressing live ranges: from 30 to 28 - 93%
Ranges after the compression:
 r113: [16..17]
 r114: [10..13]
 r115: [10..11]
 r116: [4..11]
 r117: [6..7]
 r118: [2..3]
 r119: [0..1]
 r120: [26..27]
 r121: [24..25]
 r122: [22..23]
 r123: [20..21]
 r124: [18..19]
 r125: [14..15]
 r126: [12..13]
 r127: [8..9]
 r128: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 26
changing reg in insn 31
changing reg in insn 34
changing reg in insn 34
changing reg in insn 38
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
deleting insn with uid = 8.
deleting insn with uid = 13.
deleting insn with uid = 27.
deleting insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.


FLASH_OB_DisableWRP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={12d,10u} r7={1d,11u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 156{120d,36u,0e} in 23{22 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 120 121 122 123 124
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 WRPSector+0 S4 A32])
        (reg:SI 0 r0 [ WRPSector ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1064:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (reg/f:SI 7 r7) [3 Banks+0 S4 A32])
        (reg:SI 1 r1 [ Banks ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1064:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 9 2 (set (reg:SI 3 r3 [120])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1065:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 7 10 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1065:21 263 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1072:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 11 10 12 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1072:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 12 11 14 2 (set (reg:SI 3 r3 [122])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1072:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 12 15 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1072:12 263 {*arm_movqi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [124])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1074:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 15 17 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1074:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1074:6 273 {arm_cond_branch}
     (nil)
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 125 126 127 128
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:HI 3 r3 [125])
        (mem/v:HI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S2 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:5 739 {*thumb2_movhi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [125]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:5 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 WRPSector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:HI 3 r3 [126]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:46 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 24 23 25 3 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 3 (set (reg:SI 3 r3 [127])
        (ior:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (reg:SI 2 r2 [orig:114 _2 ] [114]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:43 106 {*iorsi3_insn}
     (nil))
(insn 26 25 28 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (zero_extend:SI (reg:HI 3 r3 [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 28 26 29 3 (set (mem/v:HI (reg/f:SI 1 r1 [orig:116 _4 ] [116]) [1 *_4+0 S2 A16])
        (reg:HI 3 r3 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1076:43 739 {*thumb2_movhi_vfp}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 118 119
(code_label 29 28 30 4 60 (nil) [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 38 4 (set (reg:SI 3 r3 [orig:118 _13 ] [118])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1079:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 38 31 39 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1080:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 44 4 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1080:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 44 39 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_EnablePCROP (FLASH_OB_EnablePCROP, funcdef_no=146, decl_uid=7923, cgraph_uid=151, symbol_order=150)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 24
	 Choosing alt 1 in insn 24:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =rk  (1) rk {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 27:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 38: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = -2
   Insn 33: point = 1, n_alt = -2
   Insn 30: point = 3, n_alt = 1
  BB 3
   Insn 27: point = 4, n_alt = 4
   Insn 26: point = 5, n_alt = 0
   Insn 25: point = 7, n_alt = 0
   Insn 24: point = 9, n_alt = 1
   Insn 23: point = 11, n_alt = 5
   Insn 22: point = 12, n_alt = 0
   Insn 21: point = 14, n_alt = 5
   Insn 20: point = 15, n_alt = 0
   Insn 19: point = 17, n_alt = 5
   Insn 18: point = 19, n_alt = 5
  BB 2
   Insn 16: point = 20, n_alt = -1
   Insn 15: point = 20, n_alt = 0
   Insn 14: point = 21, n_alt = 1
   Insn 13: point = 22, n_alt = 6
   Insn 12: point = 23, n_alt = 0
   Insn 11: point = 25, n_alt = -2
   Insn 10: point = 26, n_alt = -1
   Insn 9: point = 26, n_alt = 4
   Insn 8: point = 26, n_alt = 6
   Insn 7: point = 27, n_alt = 0
   Insn 6: point = 29, n_alt = 1
   Insn 2: point = 30, n_alt = 7
 r113: [18..19]
 r114: [10..15]
 r115: [10..12]
 r116: [4..11]
 r117: [6..7]
 r118: [2..3]
 r119: [0..1]
 r120: [28..29]
 r121: [26..27]
 r122: [24..25]
 r123: [22..23]
 r124: [20..21]
 r125: [16..17]
 r126: [13..14]
 r127: [8..9]
 r128: [4..5]
Compressing live ranges: from 30 to 28 - 93%
Ranges after the compression:
 r113: [16..17]
 r114: [10..13]
 r115: [10..11]
 r116: [4..11]
 r117: [6..7]
 r118: [2..3]
 r119: [0..1]
 r120: [26..27]
 r121: [24..25]
 r122: [22..23]
 r123: [20..21]
 r124: [18..19]
 r125: [14..15]
 r126: [12..13]
 r127: [8..9]
 r128: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 25
changing reg in insn 30
changing reg in insn 33
changing reg in insn 33
changing reg in insn 37
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
deleting insn with uid = 7.
deleting insn with uid = 12.
deleting insn with uid = 26.
deleting insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


FLASH_OB_EnablePCROP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={3d,1u} r3={12d,10u} r7={1d,10u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 154{120d,34u,0e} in 22{21 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 120 121 122 123 124
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 Sector+0 S4 A32])
        (reg:SI 0 r0 [ Sector ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1097:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 3 r3 [120])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1098:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1098:21 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1104:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1104:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 13 2 (set (reg:SI 3 r3 [122])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1104:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 11 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1104:12 263 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [124])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1106:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 15 14 16 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1106:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1106:6 273 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 125 126 127 128
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 3 (set (reg:HI 3 r3 [125])
        (mem/v:HI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S2 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:5 739 {*thumb2_movhi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [125]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:5 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:HI 3 r3 [126]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:46 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [127])
        (ior:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (reg:SI 2 r2 [orig:114 _2 ] [114]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:43 106 {*iorsi3_insn}
     (nil))
(insn 25 24 27 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (zero_extend:SI (reg:HI 3 r3 [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 27 25 28 3 (set (mem/v:HI (reg/f:SI 1 r1 [orig:116 _4 ] [116]) [1 *_4+0 S2 A16])
        (reg:HI 3 r3 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1108:43 739 {*thumb2_movhi_vfp}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 118 119
(code_label 28 27 29 4 65 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 37 4 (set (reg:SI 3 r3 [orig:118 _13 ] [118])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1111:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 37 30 38 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1112:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 43 4 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1112:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 43 38 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_DisablePCROP (FLASH_OB_DisablePCROP, funcdef_no=147, decl_uid=7925, cgraph_uid=152, symbol_order=151)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =l  (1) l {*arm_one_cmplsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 26
	 Choosing alt 1 in insn 26:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =rk  (1) rk {*thumb2_movhi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) m  (1) r {*thumb2_movhi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 40: point = 0, n_alt = -1
   Insn 39: point = 0, n_alt = -2
   Insn 35: point = 1, n_alt = -2
   Insn 32: point = 3, n_alt = 1
  BB 3
   Insn 29: point = 4, n_alt = 4
   Insn 28: point = 5, n_alt = 0
   Insn 27: point = 7, n_alt = 0
   Insn 26: point = 9, n_alt = 1
   Insn 25: point = 11, n_alt = 5
   Insn 24: point = 12, n_alt = 0
   Insn 23: point = 14, n_alt = 0
   Insn 22: point = 16, n_alt = 0
   Insn 21: point = 18, n_alt = 5
   Insn 20: point = 19, n_alt = 0
   Insn 19: point = 21, n_alt = 5
   Insn 18: point = 23, n_alt = 5
  BB 2
   Insn 16: point = 24, n_alt = -1
   Insn 15: point = 24, n_alt = 0
   Insn 14: point = 25, n_alt = 1
   Insn 13: point = 26, n_alt = 6
   Insn 12: point = 27, n_alt = 0
   Insn 11: point = 29, n_alt = -2
   Insn 10: point = 30, n_alt = -1
   Insn 9: point = 30, n_alt = 4
   Insn 8: point = 30, n_alt = 6
   Insn 7: point = 31, n_alt = 0
   Insn 6: point = 33, n_alt = 1
   Insn 2: point = 34, n_alt = 7
 r113: [22..23]
 r114: [10..19]
 r115: [15..16]
 r116: [10..12]
 r117: [4..11]
 r118: [6..7]
 r119: [2..3]
 r120: [0..1]
 r121: [32..33]
 r122: [30..31]
 r123: [28..29]
 r124: [26..27]
 r125: [24..25]
 r126: [20..21]
 r127: [17..18]
 r128: [13..14]
 r129: [8..9]
 r130: [4..5]
Compressing live ranges: from 34 to 32 - 94%
Ranges after the compression:
 r113: [20..21]
 r114: [10..17]
 r115: [14..15]
 r116: [10..11]
 r117: [4..11]
 r118: [6..7]
 r119: [2..3]
 r120: [0..1]
 r121: [30..31]
 r122: [28..29]
 r123: [26..27]
 r124: [24..25]
 r125: [22..23]
 r126: [18..19]
 r127: [16..17]
 r128: [12..13]
 r129: [8..9]
 r130: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 27
changing reg in insn 32
changing reg in insn 35
changing reg in insn 35
changing reg in insn 39
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
deleting insn with uid = 7.
deleting insn with uid = 12.
deleting insn with uid = 28.
deleting insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


FLASH_OB_DisablePCROP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={3d,1u} r3={14d,12u} r7={1d,10u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 158{122d,36u,0e} in 24{23 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 121 122 123 124 125
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 Sector+0 S4 A32])
        (reg:SI 0 r0 [ Sector ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1125:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 3 r3 [121])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1126:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1126:21 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1132:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1132:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 13 2 (set (reg:SI 3 r3 [123])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1132:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 11 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1132:12 263 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [125])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1134:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 15 14 16 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [125])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1134:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1134:6 273 {arm_cond_branch}
     (nil)
 -> 30)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 126 127 128 129 130
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 3 (set (reg:HI 3 r3 [126])
        (mem/v:HI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S2 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:5 739 {*thumb2_movhi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [126]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:5 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [3 Sector+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:HI 3 r3 [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 23 22 24 3 (set (reg:SI 3 r3 [128])
        (not:SI (reg:SI 3 r3 [orig:115 _3 ] [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 169 {*arm_one_cmplsi2}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:HI 3 r3 [128]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 25 24 26 3 (set (reg/f:SI 1 r1 [orig:117 _5 ] [117])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 3 (set (reg:SI 3 r3 [129])
        (and:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (reg:SI 2 r2 [orig:114 _2 ] [114]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 90 {*arm_andsi3_insn}
     (nil))
(insn 27 26 29 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (reg:HI 3 r3 [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 29 27 30 3 (set (mem/v:HI (reg/f:SI 1 r1 [orig:117 _5 ] [117]) [1 *_5+0 S2 A16])
        (reg:HI 3 r3 [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1136:43 739 {*thumb2_movhi_vfp}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 119 120
(code_label 30 29 31 4 70 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 39 4 (set (reg:SI 3 r3 [orig:119 _14 ] [119])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1139:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 39 32 40 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:120 <retval> ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1141:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 45 4 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1141:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 45 40 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_RDP_LevelConfig (FLASH_OB_RDP_LevelConfig, funcdef_no=148, decl_uid=7907, cgraph_uid=153, symbol_order=152)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) Uu {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 33: point = 0, n_alt = -1
   Insn 32: point = 0, n_alt = -2
   Insn 28: point = 1, n_alt = -2
   Insn 25: point = 3, n_alt = 1
  BB 3
   Insn 22: point = 4, n_alt = 6
   Insn 21: point = 5, n_alt = 5
   Insn 20: point = 6, n_alt = 5
  BB 2
   Insn 18: point = 7, n_alt = -1
   Insn 17: point = 7, n_alt = 0
   Insn 16: point = 8, n_alt = 1
   Insn 15: point = 9, n_alt = 6
   Insn 14: point = 10, n_alt = 0
   Insn 13: point = 12, n_alt = -2
   Insn 12: point = 13, n_alt = -1
   Insn 11: point = 13, n_alt = 4
   Insn 10: point = 13, n_alt = 6
   Insn 9: point = 14, n_alt = 0
   Insn 8: point = 16, n_alt = 1
   Insn 4: point = 17, n_alt = 6
   Insn 3: point = 18, n_alt = 0
   Insn 2: point = 20, n_alt = -2
 r113: [4..6]
 r114: [2..3]
 r115: [0..1]
 r116: [19..20]
 r117: [17..18]
 r118: [15..16]
 r119: [13..14]
 r120: [11..12]
 r121: [9..10]
 r122: [7..8]
 r123: [4..5]
Compressing live ranges: from 21 to 20 - 95%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
 r116: [18..19]
 r117: [16..17]
 r118: [14..15]
 r119: [12..13]
 r120: [10..11]
 r121: [8..9]
 r122: [6..7]
 r123: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 20
changing reg in insn 22
changing reg in insn 25
changing reg in insn 28
changing reg in insn 28
changing reg in insn 32
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
deleting insn with uid = 3.
deleting insn with uid = 9.
deleting insn with uid = 14.
deleting insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.


FLASH_OB_RDP_LevelConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={2d} r2={3d,1u} r3={8d,6u} r7={1d,10u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 144{115d,29u,0e} in 17{16 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 116 117 118 119 120 121 122
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [116])
        (reg:SI 0 r0 [ Level ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1158:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 Level+0 S1 A8])
        (reg:QI 3 r3 [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1158:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 10 2 (set (reg:SI 3 r3 [118])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1159:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 8 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1159:21 263 {*arm_movqi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1165:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 12 11 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1165:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 13 12 15 2 (set (reg:SI 3 r3 [120])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1165:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 13 16 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1165:12 263 {*arm_movqi_insn}
     (nil))
(insn 16 15 17 2 (set (reg:SI 3 r3 [122])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1167:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 17 16 18 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [122])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1167:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1167:6 273 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 123
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int 1073888277 [0x40023c15])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1169:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg:QI 3 r3 [123])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 Level+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1169:42 263 {*arm_movqi_insn}
     (nil))
(insn 22 21 23 3 (set (mem/v:QI (reg/f:SI 2 r2 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])
        (reg:QI 3 r3 [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1169:42 263 {*arm_movqi_insn}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 114 115
(code_label 23 22 24 4 75 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 32 4 (set (reg:SI 3 r3 [orig:114 _9 ] [114])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1172:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 32 25 33 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:115 <retval> ] [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1173:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 37 4 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1173:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 37 33 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_UserConfig (FLASH_OB_UserConfig, funcdef_no=149, decl_uid=7911, cgraph_uid=154, symbol_order=153)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 7:  (0) Uu  (1) l {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) j {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 21:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 31:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) Uu {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) Uu {*arm_movqi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 34
	 Choosing alt 1 in insn 34:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) Uu {*arm_movqi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 37
	 Choosing alt 1 in insn 37:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) Uu {*arm_movqi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 41
	 Choosing alt 1 in insn 41:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 44:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 55: point = 0, n_alt = -1
   Insn 54: point = 0, n_alt = -2
   Insn 50: point = 1, n_alt = -2
   Insn 47: point = 3, n_alt = 1
  BB 3
   Insn 44: point = 4, n_alt = 6
   Insn 43: point = 5, n_alt = 0
   Insn 42: point = 7, n_alt = 0
   Insn 41: point = 9, n_alt = 1
   Insn 40: point = 11, n_alt = 5
   Insn 39: point = 12, n_alt = 5
   Insn 38: point = 13, n_alt = 0
   Insn 37: point = 15, n_alt = 1
   Insn 36: point = 17, n_alt = 5
   Insn 35: point = 18, n_alt = 0
   Insn 34: point = 20, n_alt = 1
   Insn 33: point = 22, n_alt = 5
   Insn 32: point = 23, n_alt = 5
   Insn 31: point = 24, n_alt = 6
   Insn 30: point = 25, n_alt = 0
   Insn 29: point = 27, n_alt = 0
   Insn 28: point = 29, n_alt = 0
   Insn 27: point = 31, n_alt = 5
   Insn 26: point = 33, n_alt = 5
  BB 2
   Insn 24: point = 34, n_alt = -1
   Insn 23: point = 34, n_alt = 0
   Insn 22: point = 35, n_alt = 1
   Insn 21: point = 36, n_alt = 6
   Insn 20: point = 37, n_alt = 0
   Insn 19: point = 39, n_alt = -2
   Insn 18: point = 40, n_alt = -1
   Insn 17: point = 40, n_alt = 4
   Insn 16: point = 40, n_alt = 6
   Insn 15: point = 41, n_alt = 0
   Insn 14: point = 43, n_alt = 1
   Insn 10: point = 44, n_alt = 6
   Insn 9: point = 45, n_alt = 0
   Insn 7: point = 47, n_alt = 6
   Insn 6: point = 48, n_alt = 0
   Insn 4: point = 50, n_alt = 6
   Insn 3: point = 51, n_alt = 0
   Insn 8: point = 53, n_alt = -2
   Insn 5: point = 54, n_alt = -2
   Insn 2: point = 55, n_alt = -2
 r113: [32..33]
 r114: [28..29]
 r115: [16..18]
 r116: [10..13]
 r117: [4..12]
 r118: [6..7]
 r119: [2..3]
 r120: [0..1]
 r121: [52..55]
 r122: [50..51]
 r123: [49..54]
 r124: [47..48]
 r125: [46..53]
 r126: [44..45]
 r127: [42..43]
 r128: [40..41]
 r129: [38..39]
 r130: [36..37]
 r131: [34..35]
 r132: [30..31]
 r133: [26..27]
 r134: [24..25]
 r135: [21..23]
 r136: [21..22]
 r137: [19..20]
 r138: [16..17]
 r139: [14..15]
 r140: [10..11]
 r141: [8..9]
 r142: [4..5]
Compressing live ranges: from 56 to 48 - 85%
Ranges after the compression:
 r113: [28..29]
 r114: [24..25]
 r115: [14..15]
 r116: [10..11]
 r117: [4..11]
 r118: [6..7]
 r119: [2..3]
 r120: [0..1]
 r121: [46..47]
 r122: [44..45]
 r123: [44..47]
 r124: [42..43]
 r125: [42..47]
 r126: [40..41]
 r127: [38..39]
 r128: [36..37]
 r129: [34..35]
 r130: [32..33]
 r131: [30..31]
 r132: [26..27]
 r133: [22..23]
 r134: [20..21]
 r135: [18..19]
 r136: [18..19]
 r137: [16..17]
 r138: [14..15]
 r139: [12..13]
 r140: [10..11]
 r141: [8..9]
 r142: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 38
changing reg in insn 39
changing reg in insn 44
changing reg in insn 42
changing reg in insn 47
changing reg in insn 50
changing reg in insn 50
changing reg in insn 54
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
deleting insn with uid = 5.
deleting insn with uid = 8.
deleting insn with uid = 3.
deleting insn with uid = 15.
deleting insn with uid = 20.
deleting insn with uid = 30.
deleting insn with uid = 43.
deleting insn with uid = 50.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.


FLASH_OB_UserConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={5d,4u} r3={20d,18u} r7={1d,16u} r12={2d} r13={1d,5u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 182{130d,52u,0e} in 35{34 regular + 1 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 121 122 123 124 125 126 127 128 129 130 131
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 4 2 (set (reg:SI 3 r3 [121])
        (reg:SI 0 r0 [ Iwdg ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1192:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 Iwdg+0 S1 A8])
        (reg:QI 3 r3 [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1192:1 263 {*arm_movqi_insn}
     (nil))
(insn 6 4 7 2 (set (reg:QI 3 r3 [124])
        (reg:QI 1 r1 [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1192:1 263 {*arm_movqi_insn}
     (nil))
(insn 7 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 Stop+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1192:1 263 {*arm_movqi_insn}
     (nil))
(insn 9 7 10 2 (set (reg:QI 3 r3 [126])
        (reg:QI 2 r2 [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1192:1 263 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 5 [0x5])) [0 Stdby+0 S1 A8])
        (reg:QI 3 r3 [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1192:1 263 {*arm_movqi_insn}
     (nil))
(note 11 10 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 11 16 2 (set (reg:SI 3 r3 [127])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1194:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 14 17 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1194:21 263 {*arm_movqi_insn}
     (nil))
(insn 17 16 18 2 (set (reg:SI 0 r0)
        (const_int 50000 [0xc350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1202:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 18 17 19 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("FLASH_WaitForLastOperation") [flags 0x41]  <function_decl 0000000007360200 FLASH_WaitForLastOperation>) [0 FLASH_WaitForLastOperation S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1202:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 19 18 21 2 (set (reg:SI 3 r3 [129])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1202:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 19 22 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1202:12 263 {*arm_movqi_insn}
     (nil))
(insn 22 21 23 2 (set (reg:SI 3 r3 [131])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1204:6 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 23 22 24 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [131])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1204:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1204:6 273 {arm_cond_branch}
     (nil)
 -> 45)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 132 133 134 135 136 137 138 139 140 141 142
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1207:66 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 3 (set (reg:QI 3 r3 [132])
        (mem/v:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1207:66 263 {*arm_movqi_insn}
     (nil))
(insn 28 27 29 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [132]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1207:66 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 29 28 31 3 (set (reg:SI 3 r3 [133])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 31 [0x1f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1207:15 90 {*arm_andsi3_insn}
     (nil))
(insn 31 29 32 3 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 14 [0xe])) [0 optiontmp+0 S1 A16])
        (reg:QI 3 r3 [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1207:15 263 {*arm_movqi_insn}
     (nil))
(insn 32 31 33 3 (set (reg:QI 2 r2 [135])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [0 Stop+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:69 263 {*arm_movqi_insn}
     (nil))
(insn 33 32 34 3 (set (reg:QI 3 r3 [136])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 14 [0xe])) [0 optiontmp+0 S1 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:69 263 {*arm_movqi_insn}
     (nil))
(insn 34 33 35 3 (set (reg:SI 3 r3 [137])
        (ior:SI (reg:SI 3 r3 [136])
            (reg:SI 2 r2 [135]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:69 106 {*iorsi3_insn}
     (nil))
(insn 35 34 36 3 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [137]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:69 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 36 35 37 3 (set (reg:QI 3 r3 [138])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 5 [0x5])) [0 Stdby+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:51 263 {*arm_movqi_insn}
     (nil))
(insn 37 36 38 3 (set (reg:SI 3 r3 [139])
        (ior:SI (reg:SI 3 r3 [138])
            (reg:SI 2 r2 [orig:115 _3 ] [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:51 106 {*iorsi3_insn}
     (nil))
(insn 38 37 39 3 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [139]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:51 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 39 38 40 3 (set (reg/f:SI 1 r1 [orig:117 _5 ] [117])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 3 (set (reg:QI 3 r3 [140])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 Iwdg+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:42 263 {*arm_movqi_insn}
     (nil))
(insn 41 40 42 3 (set (reg:SI 3 r3 [141])
        (ior:SI (reg:SI 3 r3 [140])
            (reg:SI 2 r2 [orig:116 _4 ] [116]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:42 106 {*iorsi3_insn}
     (nil))
(insn 42 41 44 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (reg:QI 3 r3 [141]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:42 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 44 42 45 3 (set (mem/v:QI (reg/f:SI 1 r1 [orig:117 _5 ] [117]) [0 *_5+0 S1 A8])
        (reg:QI 3 r3 [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1210:42 263 {*arm_movqi_insn}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 119 120
(code_label 45 44 46 4 80 (nil) [1 uses])
(note 46 45 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 54 4 (set (reg:SI 3 r3 [orig:119 _17 ] [119])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1213:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 54 47 55 4 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:120 <retval> ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1214:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 60 4 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1214:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 60 55 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_BOR_LevelConfig (FLASH_OB_BOR_LevelConfig, funcdef_no=150, decl_uid=7913, cgraph_uid=155, symbol_order=154)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 12:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) Uu {*arm_movqi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 21
	 Choosing alt 1 in insn 21:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 24:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 33: point = 0, n_alt = -1
   Insn 32: point = 0, n_alt = -2
   Insn 28: point = 1, n_alt = -2
   Insn 25: point = 3, n_alt = 1
   Insn 24: point = 4, n_alt = 6
   Insn 23: point = 5, n_alt = 0
   Insn 22: point = 7, n_alt = 0
   Insn 21: point = 9, n_alt = 1
   Insn 20: point = 11, n_alt = 5
   Insn 19: point = 12, n_alt = 5
   Insn 18: point = 13, n_alt = 0
   Insn 17: point = 15, n_alt = 5
   Insn 16: point = 17, n_alt = 5
   Insn 15: point = 18, n_alt = 6
   Insn 14: point = 19, n_alt = 0
   Insn 13: point = 21, n_alt = 0
   Insn 12: point = 23, n_alt = 2
   Insn 11: point = 25, n_alt = 5
   Insn 10: point = 26, n_alt = 0
   Insn 9: point = 28, n_alt = 5
   Insn 8: point = 30, n_alt = 5
   Insn 4: point = 31, n_alt = 6
   Insn 3: point = 32, n_alt = 0
   Insn 2: point = 34, n_alt = -2
 r113: [29..30]
 r114: [24..26]
 r115: [18..25]
 r116: [20..21]
 r117: [16..17]
 r118: [10..13]
 r119: [4..12]
 r120: [6..7]
 r121: [2..3]
 r122: [0..1]
 r123: [33..34]
 r124: [31..32]
 r125: [27..28]
 r126: [22..23]
 r127: [18..19]
 r128: [14..15]
 r129: [10..11]
 r130: [8..9]
 r131: [4..5]
Compressing live ranges: from 35 to 32 - 91%
Ranges after the compression:
 r113: [26..27]
 r114: [22..23]
 r115: [16..23]
 r116: [18..19]
 r117: [14..15]
 r118: [10..11]
 r119: [4..11]
 r120: [6..7]
 r121: [2..3]
 r122: [0..1]
 r123: [30..31]
 r124: [28..29]
 r125: [24..25]
 r126: [20..21]
 r127: [16..17]
 r128: [12..13]
 r129: [10..11]
 r130: [8..9]
 r131: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 15
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 22
changing reg in insn 25
changing reg in insn 28
changing reg in insn 28
changing reg in insn 32
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
deleting insn with uid = 3.
deleting insn with uid = 14.
deleting insn with uid = 23.
deleting insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_OB_BOR_LevelConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={3d,2u} r3={13d,12u} r7={1d,4u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 65{40d,25u,0e} in 20{20 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [123])
        (reg:SI 0 r0 [ Level ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1227:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 Level+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1227:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:QI 3 r3 [125])
        (mem/v:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:3 263 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [125]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [126])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int -13 [0xfffffffffffffff3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:40 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 15 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [126]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:40 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 15 13 16 2 (set (mem/v:QI (reg/f:SI 2 r2 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])
        (reg:QI 3 r3 [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1232:40 263 {*arm_movqi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:QI 3 r3 [128])
        (mem/v:QI (reg/f:SI 3 r3 [orig:117 _5 ] [117]) [0 *_5+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:3 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (zero_extend:SI (reg:QI 3 r3 [128]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 1 r1 [orig:119 _7 ] [119])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg:QI 3 r3 [129])
        (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 Level+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:40 263 {*arm_movqi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [130])
        (ior:SI (reg:SI 3 r3 [129])
            (reg:SI 2 r2 [orig:118 _6 ] [118]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:40 106 {*iorsi3_insn}
     (nil))
(insn 22 21 24 2 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (zero_extend:SI (reg:QI 3 r3 [130]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:40 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 24 22 25 2 (set (mem/v:QI (reg/f:SI 1 r1 [orig:119 _7 ] [119]) [0 *_7+0 S1 A8])
        (reg:QI 3 r3 [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1233:40 263 {*arm_movqi_insn}
     (nil))
(insn 25 24 32 2 (set (reg:SI 3 r3 [orig:121 _13 ] [121])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1235:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 25 33 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:122 <retval> ] [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1237:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 39 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1237:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 39 33 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_GetUser (FLASH_OB_GetUser, funcdef_no=151, decl_uid=7915, cgraph_uid=156, symbol_order=155)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 8:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = -2
   Insn 12: point = 1, n_alt = -2
   Insn 9: point = 3, n_alt = 0
   Insn 8: point = 5, n_alt = 2
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 5
   Insn 5: point = 11, n_alt = 5
 r113: [10..11]
 r114: [8..9]
 r115: [6..7]
 r116: [2..3]
 r117: [0..1]
 r118: [4..5]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r113: [10..11]
 r114: [8..9]
 r115: [6..7]
 r116: [2..3]
 r117: [0..1]
 r118: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 8
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_OB_GetUser

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={6d,5u} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 42{30d,12u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1247:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 20 [0x14])) [3 _1->OPTCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1247:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [orig:114 _2 ] [114]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1247:11 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [118])
        (and:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int -32 [0xffffffffffffffe0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1247:11 90 {*arm_andsi3_insn}
     (nil))
(insn 9 8 16 2 (set (reg:SI 3 r3 [orig:116 _5 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [118]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1247:11 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 9 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1248:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 20 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1248:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 20 17 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_GetWRP (FLASH_OB_GetWRP, funcdef_no=152, decl_uid=7917, cgraph_uid=157, symbol_order=156)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=4,overall=22,losers=2,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) r  (1) m {*thumb2_movhi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 5, n_alt = 5
   Insn 5: point = 7, n_alt = 5
 r113: [6..7]
 r114: [2..3]
 r115: [0..1]
 r116: [4..5]
Compressing live ranges: from 8 to 8 - 100%
Ranges after the compression:
 r113: [6..7]
 r114: [2..3]
 r115: [0..1]
 r116: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_OB_GetWRP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={4d,3u} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 38{28d,10u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888278 [0x40023c16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1257:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:HI 3 r3 [116])
        (mem/v:HI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S2 A16])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1257:11 739 {*thumb2_movhi_vfp}
     (nil))
(insn 7 6 14 2 (set (reg:SI 3 r3 [orig:114 _3 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [116]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1257:11 1028 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 14 7 15 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:115 <retval> ] [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1258:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 18 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1258:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 18 15 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_GetRDP (FLASH_OB_GetRDP, funcdef_no=153, decl_uid=7919, cgraph_uid=158, symbol_order=157)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 7:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 29:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 36:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 47: point = 0, n_alt = -1
   Insn 46: point = 0, n_alt = -2
   Insn 42: point = 1, n_alt = -2
   Insn 39: point = 3, n_alt = 1
  BB 5
   Insn 51: point = 4, n_alt = -1
   Insn 29: point = 4, n_alt = 6
   Insn 28: point = 5, n_alt = 0
   Insn 27: point = 7, n_alt = 1
  BB 3
   Insn 49: point = 8, n_alt = -1
   Insn 16: point = 8, n_alt = 6
   Insn 15: point = 9, n_alt = 0
   Insn 14: point = 11, n_alt = 1
  BB 6
   Insn 36: point = 12, n_alt = 6
   Insn 35: point = 13, n_alt = 0
   Insn 34: point = 15, n_alt = 1
  BB 4
   Insn 25: point = 16, n_alt = -1
   Insn 24: point = 16, n_alt = 0
   Insn 23: point = 17, n_alt = 0
   Insn 22: point = 19, n_alt = 5
   Insn 21: point = 21, n_alt = 5
  BB 2
   Insn 12: point = 22, n_alt = -1
   Insn 11: point = 22, n_alt = 0
   Insn 10: point = 23, n_alt = 0
   Insn 9: point = 25, n_alt = 5
   Insn 8: point = 27, n_alt = 5
   Insn 7: point = 28, n_alt = 6
   Insn 6: point = 29, n_alt = 0
   Insn 5: point = 31, n_alt = 1
 r113: [26..27]
 r114: [22..23]
 r115: [20..21]
 r116: [16..17]
 r117: [2..3]
 r118: [0..1]
 r119: [30..31]
 r120: [28..29]
 r121: [24..25]
 r122: [10..11]
 r123: [8..9]
 r124: [18..19]
 r125: [6..7]
 r126: [4..5]
 r127: [14..15]
 r128: [12..13]
Compressing live ranges: from 32 to 32 - 100%
Ranges after the compression:
 r113: [26..27]
 r114: [22..23]
 r115: [20..21]
 r116: [16..17]
 r117: [2..3]
 r118: [0..1]
 r119: [30..31]
 r120: [28..29]
 r121: [24..25]
 r122: [10..11]
 r123: [8..9]
 r124: [18..19]
 r125: [6..7]
 r126: [4..5]
 r127: [14..15]
 r128: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 39
changing reg in insn 42
changing reg in insn 42
changing reg in insn 46
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
deleting insn with uid = 6.
deleting insn with uid = 15.
deleting insn with uid = 28.
deleting insn with uid = 35.
deleting insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_OB_GetRDP

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={12d,11u} r7={1d,12u} r13={1d,7u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={2d,2u} r102={1d,1u} 
;;    total ref usage 73{38d,35u,0e} in 23{23 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 119 120 121
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg:SI 3 r3 [119])
        (const_int 170 [0xaa])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1270:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 5 8 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 readstatus+0 S1 A8])
        (reg:QI 3 r3 [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1270:11 263 {*arm_movqi_insn}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888277 [0x40023c15])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1272:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:QI 3 r3 [121])
        (mem/v:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1272:7 263 {*arm_movqi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [121]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1272:7 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 204 [0xcc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1272:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1272:6 273 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 122 123
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (set (reg:SI 3 r3 [122])
        (const_int 204 [0xcc])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1274:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 14 49 3 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 readstatus+0 S1 A8])
        (reg:QI 3 r3 [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1274:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 49 16 50 3 (set (pc)
        (label_ref 37)) 284 {*arm_jump}
     (nil)
 -> 37)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 50 49 19)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 116 124
(code_label 19 50 20 4 97 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (const_int 1073888277 [0x40023c15])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1276:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 4 (set (reg:QI 3 r3 [124])
        (mem/v:QI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [0 *_3+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1276:12 263 {*arm_movqi_insn}
     (nil))
(insn 23 22 24 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [124]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1276:12 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 24 23 25 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 170 [0xaa]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1276:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1276:11 273 {arm_cond_branch}
     (nil)
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 29 5 (set (reg:SI 3 r3 [125])
        (const_int 170 [0xaa])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1278:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 27 51 5 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 readstatus+0 S1 A8])
        (reg:QI 3 r3 [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1278:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 51 29 52 5 (set (pc)
        (label_ref 37)) 284 {*arm_jump}
     (nil)
 -> 37)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 52 51 32)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 127 128
(code_label 32 52 33 6 99 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 36 6 (set (reg:SI 3 r3 [127])
        (const_int 85 [0x55])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1282:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 34 37 6 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 readstatus+0 S1 A8])
        (reg:QI 3 r3 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1282:16 263 {*arm_movqi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [always] 
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 117 118
(code_label 37 36 38 7 98 (nil) [2 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 46 7 (set (reg:SI 3 r3 [orig:117 _11 ] [117])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 readstatus+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1285:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 46 39 47 7 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:118 <retval> ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1286:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 55 7 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1286:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 55 47 0 NOTE_INSN_DELETED)

;; Function FLASH_OB_GetBOR (FLASH_OB_GetBOR, funcdef_no=154, decl_uid=7921, cgraph_uid=159, symbol_order=158)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = -2
   Insn 12: point = 1, n_alt = -2
   Insn 9: point = 3, n_alt = 0
   Insn 8: point = 5, n_alt = 0
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 5
   Insn 5: point = 11, n_alt = 5
 r113: [10..11]
 r114: [6..7]
 r115: [2..3]
 r116: [0..1]
 r117: [8..9]
 r118: [4..5]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r113: [10..11]
 r114: [6..7]
 r115: [2..3]
 r116: [0..1]
 r117: [8..9]
 r118: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_OB_GetBOR

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={6d,5u} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 42{30d,12u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117 118
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888276 [0x40023c14])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1299:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:QI 3 r3 [117])
        (mem/v:QI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [0 *_1+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1299:10 263 {*arm_movqi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [117]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1299:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [118])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1299:10 90 {*arm_andsi3_insn}
     (nil))
(insn 9 8 16 2 (set (reg:SI 3 r3 [orig:115 _4 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [118]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1299:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 9 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:116 <retval> ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1300:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 20 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1300:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 20 17 0 NOTE_INSN_DELETED)

;; Function FLASH_FlushCaches (FLASH_FlushCaches, funcdef_no=155, decl_uid=7325, cgraph_uid=160, symbol_order=159)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 7:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 14:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 30:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 42:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 43:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 48:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 52:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 58:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 7
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
  BB 7
   Insn 67: point = 0, n_alt = -1
  BB 5
   Insn 58: point = 0, n_alt = 7
   Insn 57: point = 1, n_alt = 0
   Insn 56: point = 3, n_alt = 5
   Insn 55: point = 4, n_alt = 5
   Insn 54: point = 6, n_alt = 5
   Insn 53: point = 7, n_alt = 7
   Insn 52: point = 8, n_alt = 2
   Insn 51: point = 10, n_alt = 5
   Insn 50: point = 11, n_alt = 5
   Insn 49: point = 13, n_alt = 5
   Insn 48: point = 14, n_alt = 7
   Insn 47: point = 15, n_alt = 0
   Insn 46: point = 17, n_alt = 5
   Insn 45: point = 18, n_alt = 5
   Insn 44: point = 20, n_alt = 5
   Insn 43: point = 21, n_alt = 7
   Insn 42: point = 22, n_alt = 2
   Insn 41: point = 24, n_alt = 5
   Insn 40: point = 25, n_alt = 5
   Insn 39: point = 27, n_alt = 5
  BB 4
   Insn 37: point = 28, n_alt = -1
   Insn 36: point = 28, n_alt = 0
   Insn 35: point = 29, n_alt = 0
   Insn 34: point = 31, n_alt = 5
   Insn 33: point = 33, n_alt = 5
  BB 3
   Insn 30: point = 34, n_alt = 7
   Insn 29: point = 35, n_alt = 0
   Insn 28: point = 37, n_alt = 5
   Insn 27: point = 38, n_alt = 5
   Insn 26: point = 40, n_alt = 5
   Insn 25: point = 41, n_alt = 7
   Insn 24: point = 42, n_alt = 2
   Insn 23: point = 44, n_alt = 5
   Insn 22: point = 45, n_alt = 5
   Insn 21: point = 47, n_alt = 5
   Insn 20: point = 48, n_alt = 7
   Insn 19: point = 49, n_alt = 0
   Insn 18: point = 51, n_alt = 5
   Insn 17: point = 52, n_alt = 5
   Insn 16: point = 54, n_alt = 5
   Insn 15: point = 55, n_alt = 7
   Insn 14: point = 56, n_alt = 2
   Insn 13: point = 58, n_alt = 5
   Insn 12: point = 59, n_alt = 5
   Insn 11: point = 61, n_alt = 5
  BB 2
   Insn 9: point = 62, n_alt = -1
   Insn 8: point = 62, n_alt = 0
   Insn 7: point = 63, n_alt = 0
   Insn 6: point = 65, n_alt = 5
   Insn 5: point = 67, n_alt = 5
 r113: [66..67]
 r114: [64..65]
 r115: [62..63]
 r116: [60..61]
 r117: [57..59]
 r118: [55..58]
 r119: [55..56]
 r120: [53..54]
 r121: [50..52]
 r122: [48..51]
 r123: [48..49]
 r124: [46..47]
 r125: [43..45]
 r126: [41..44]
 r127: [41..42]
 r128: [39..40]
 r129: [36..38]
 r130: [34..37]
 r131: [34..35]
 r132: [32..33]
 r133: [30..31]
 r134: [28..29]
 r135: [26..27]
 r136: [23..25]
 r137: [21..24]
 r138: [21..22]
 r139: [19..20]
 r140: [16..18]
 r141: [14..17]
 r142: [14..15]
 r143: [12..13]
 r144: [9..11]
 r145: [7..10]
 r146: [7..8]
 r147: [5..6]
 r148: [2..4]
 r149: [0..3]
 r150: [0..1]
Compressing live ranges: from 68 to 60 - 88%
Ranges after the compression:
 r113: [58..59]
 r114: [56..57]
 r115: [54..55]
 r116: [52..53]
 r117: [50..51]
 r118: [48..51]
 r119: [48..49]
 r120: [46..47]
 r121: [44..45]
 r122: [42..45]
 r123: [42..43]
 r124: [40..41]
 r125: [38..39]
 r126: [36..39]
 r127: [36..37]
 r128: [34..35]
 r129: [32..33]
 r130: [30..33]
 r131: [30..31]
 r132: [28..29]
 r133: [26..27]
 r134: [24..25]
 r135: [22..23]
 r136: [20..21]
 r137: [18..21]
 r138: [18..19]
 r139: [16..17]
 r140: [14..15]
 r141: [12..15]
 r142: [12..13]
 r143: [10..11]
 r144: [8..9]
 r145: [6..9]
 r146: [6..7]
 r147: [4..5]
 r148: [2..3]
 r149: [0..3]
 r150: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 29
changing reg in insn 28
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 47
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 52
changing reg in insn 51
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
starting the processing of deferred insns
ending the processing of deferred insns


FLASH_FlushCaches

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d} r1={1d} r2={9d,8u} r3={31d,30u} r7={1d,7u} r13={1d,7u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={2d,2u} r102={1d,1u} 
;;    total ref usage 119{64d,55u,0e} in 51{51 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1309:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [3 _1->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1309:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 512 [0x200]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1309:7 90 {*arm_andsi3_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1309:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1309:6 273 {arm_cond_branch}
     (nil)
 -> 31)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1312:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem/v:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [3 _4->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1312:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 2 r2 [orig:118 _6 ] [118])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1312:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int -513 [0xfffffffffffffdff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1312:5 90 {*arm_andsi3_insn}
     (nil))
(insn 15 14 16 3 (set (mem/v:SI (reg/f:SI 2 r2 [orig:118 _6 ] [118]) [3 _6->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1312:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem/v:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120]) [3 _8->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 3 (set (reg/f:SI 2 r2 [orig:122 _10 ] [122])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (ior:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 2048 [0x800]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 106 {*iorsi3_insn}
     (nil))
(insn 20 19 21 3 (set (mem/v:SI (reg/f:SI 2 r2 [orig:122 _10 ] [122]) [3 _10->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg/f:SI 3 r3 [orig:124 _12 ] [124])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem/v:SI (reg/f:SI 3 r3 [orig:124 _12 ] [124]) [3 _12->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg/f:SI 2 r2 [orig:126 _14 ] [126])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (and:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int -2049 [0xfffffffffffff7ff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 90 {*arm_andsi3_insn}
     (nil))
(insn 25 24 26 3 (set (mem/v:SI (reg/f:SI 2 r2 [orig:126 _14 ] [126]) [3 _14->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:127 _15 ] [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 3 r3 [orig:128 _16 ] [128])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1316:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 3 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem/v:SI (reg/f:SI 3 r3 [orig:128 _16 ] [128]) [3 _16->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1316:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 3 (set (reg/f:SI 2 r2 [orig:130 _18 ] [130])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1316:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 3 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (ior:SI (reg:SI 3 r3 [orig:129 _17 ] [129])
            (const_int 512 [0x200]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1316:5 106 {*iorsi3_insn}
     (nil))
(insn 30 29 31 3 (set (mem/v:SI (reg/f:SI 2 r2 [orig:130 _18 ] [130]) [3 _18->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:131 _19 ] [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1316:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 132 133 134
(code_label 31 30 32 4 108 (nil) [1 uses])
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg/f:SI 3 r3 [orig:132 _20 ] [132])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1320:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 4 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (mem/v:SI (reg/f:SI 3 r3 [orig:132 _20 ] [132]) [3 _20->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1320:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 4 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (and:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (const_int 1024 [0x400]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1320:7 90 {*arm_andsi3_insn}
     (nil))
(insn 36 35 37 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1320:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 66)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1320:6 273 {arm_cond_branch}
     (nil)
 -> 66)
;;  succ:       5 (FALLTHRU)
;;              7 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:1329:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:SI 3 r3 [orig:135 _23 ] [135])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1323:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 5 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 _23 ] [135]) [3 _23->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1323:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 5 (set (reg/f:SI 2 r2 [orig:137 _25 ] [137])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1323:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (and:SI (reg:SI 3 r3 [orig:136 _24 ] [136])
            (const_int -1025 [0xfffffffffffffbff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1323:5 90 {*arm_andsi3_insn}
     (nil))
(insn 43 42 44 5 (set (mem/v:SI (reg/f:SI 2 r2 [orig:137 _25 ] [137]) [3 _25->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:138 _26 ] [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1323:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 5 (set (reg/f:SI 3 r3 [orig:139 _27 ] [139])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 5 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 _27 ] [139]) [3 _27->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 5 (set (reg/f:SI 2 r2 [orig:141 _29 ] [141])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 5 (set (reg:SI 3 r3 [orig:142 _30 ] [142])
        (ior:SI (reg:SI 3 r3 [orig:140 _28 ] [140])
            (const_int 4096 [0x1000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 106 {*iorsi3_insn}
     (nil))
(insn 48 47 49 5 (set (mem/v:SI (reg/f:SI 2 r2 [orig:141 _29 ] [141]) [3 _29->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:142 _30 ] [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 5 (set (reg/f:SI 3 r3 [orig:143 _31 ] [143])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 5 (set (reg:SI 3 r3 [orig:144 _32 ] [144])
        (mem/v:SI (reg/f:SI 3 r3 [orig:143 _31 ] [143]) [3 _31->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 5 (set (reg/f:SI 2 r2 [orig:145 _33 ] [145])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 5 (set (reg:SI 3 r3 [orig:146 _34 ] [146])
        (and:SI (reg:SI 3 r3 [orig:144 _32 ] [144])
            (const_int -4097 [0xffffffffffffefff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 90 {*arm_andsi3_insn}
     (nil))
(insn 53 52 54 5 (set (mem/v:SI (reg/f:SI 2 r2 [orig:145 _33 ] [145]) [3 _33->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:146 _34 ] [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1325:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 5 (set (reg/f:SI 3 r3 [orig:147 _35 ] [147])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1327:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 5 (set (reg:SI 3 r3 [orig:148 _36 ] [148])
        (mem/v:SI (reg/f:SI 3 r3 [orig:147 _35 ] [147]) [3 _35->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1327:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 5 (set (reg/f:SI 2 r2 [orig:149 _37 ] [149])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1327:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 5 (set (reg:SI 3 r3 [orig:150 _38 ] [150])
        (ior:SI (reg:SI 3 r3 [orig:148 _36 ] [148])
            (const_int 1024 [0x400]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1327:5 106 {*iorsi3_insn}
     (nil))
(insn 58 57 66 5 (set (mem/v:SI (reg/f:SI 2 r2 [orig:149 _37 ] [149]) [3 _37->ACR+0 S4 A32])
        (reg:SI 3 r3 [orig:150 _38 ] [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1327:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       7 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:1329:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 5, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:1329:1
;;              5 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c:1329:1
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 66 58 65 7 110 (nil) [1 uses])
(note 65 66 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 65 61 7 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c":1329:1 313 {nop}
     (nil))
;;  succ:       6 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 61 67 62 6 107 (nil) [0 uses])
(note 62 61 86 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 86 62 0 NOTE_INSN_DELETED)
