
;; Function __NVIC_SetPriorityGrouping (__NVIC_SetPriorityGrouping, funcdef_no=106, decl_uid=6438, cgraph_uid=107, symbol_order=106)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 7:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 13:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 14
	 Choosing alt 1 in insn 14:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 19
	 Choosing alt 1 in insn 19:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 22:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 29: point = 0, n_alt = -1
  BB 2
   Insn 25: point = 0, n_alt = 7
   Insn 24: point = 1, n_alt = 5
   Insn 23: point = 2, n_alt = 5
   Insn 22: point = 3, n_alt = 7
   Insn 21: point = 4, n_alt = 0
   Insn 20: point = 5, n_alt = 0
   Insn 19: point = 7, n_alt = 1
   Insn 18: point = 9, n_alt = 5
   Insn 17: point = 10, n_alt = 1
   Insn 16: point = 12, n_alt = 5
   Insn 15: point = 13, n_alt = 7
   Insn 14: point = 14, n_alt = 1
   Insn 13: point = 16, n_alt = 4
   Insn 12: point = 17, n_alt = 5
   Insn 11: point = 18, n_alt = 7
   Insn 10: point = 19, n_alt = 5
   Insn 9: point = 21, n_alt = 5
   Insn 8: point = 22, n_alt = 7
   Insn 7: point = 23, n_alt = 0
   Insn 6: point = 25, n_alt = 5
   Insn 2: point = 26, n_alt = 7
 r113: [20..21]
 r114: [8..10]
 r115: [6..7]
 r116: [0..2]
 r117: [22..23]
 r118: [24..25]
 r119: [18..19]
 r120: [13..16]
 r121: [15..17]
 r122: [11..12]
 r123: [8..9]
 r124: [3..5]
 r125: [0..1]
Compressing live ranges: from 26 to 20 - 76%
Ranges after the compression:
 r113: [14..15]
 r114: [6..7]
 r115: [4..5]
 r116: [0..1]
 r117: [16..17]
 r118: [18..19]
 r119: [12..13]
 r120: [10..11]
 r121: [10..11]
 r122: [8..9]
 r123: [6..7]
 r124: [2..3]
 r125: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 25
changing reg in insn 7
changing reg in insn 8
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 12
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 20
changing reg in insn 22
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_SetPriorityGrouping

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d} r2={4d,3u,1e} r3={13d,12u} r7={1d,13u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 73{39d,33u,1e} in 22{22 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 122 123 124 125
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 PriorityGroup+0 S4 A32])
        (reg:SI 0 r0 [ PriorityGroup ])) "../Drivers/CMSIS/Include/core_cm4.h":1654:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 PriorityGroup+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1656:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [117])
        (and:SI (reg:SI 3 r3 [118])
            (const_int 7 [0x7]))) "../Drivers/CMSIS/Include/core_cm4.h":1656:12 90 {*arm_andsi3_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 PriorityGroupTmp+0 S4 A32])
        (reg:SI 3 r3 [117])) "../Drivers/CMSIS/Include/core_cm4.h":1656:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1658:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 12 [0xc])) [1 _1->AIRCR+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1658:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 reg_value+0 S4 A64])
        (reg:SI 3 r3 [119])) "../Drivers/CMSIS/Include/core_cm4.h":1658:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2 [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 reg_value+0 S4 A64])) "../Drivers/CMSIS/Include/core_cm4.h":1659:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [120])
        (const_int 63743 [0xf8ff])) "../Drivers/CMSIS/Include/core_cm4.h":1659:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [120])
        (and:SI (reg:SI 3 r3 [120])
            (reg:SI 2 r2 [121]))) "../Drivers/CMSIS/Include/core_cm4.h":1659:13 90 {*arm_andsi3_insn}
     (expr_list:REG_EQUAL (and:SI (reg:SI 2 r2 [121])
            (const_int 63743 [0xf8ff]))
        (nil)))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 reg_value+0 S4 A64])
        (reg:SI 3 r3 [120])) "../Drivers/CMSIS/Include/core_cm4.h":1659:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 3 r3 [122])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1662:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (ashift:SI (reg:SI 3 r3 [122])
            (const_int 8 [0x8]))) "../Drivers/CMSIS/Include/core_cm4.h":1662:35 147 {*arm_shiftsi3}
     (nil))
(insn 18 17 19 2 (set (reg:SI 3 r3 [123])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 reg_value+0 S4 A64])) "../Drivers/CMSIS/Include/core_cm4.h":1661:62 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (ior:SI (reg:SI 3 r3 [123])
            (reg:SI 2 r2 [orig:114 _2 ] [114]))) "../Drivers/CMSIS/Include/core_cm4.h":1661:62 106 {*iorsi3_insn}
     (nil))
(insn 20 19 21 2 (set (reg:SI 3 r3 [124])
        (ior:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 100139008 [0x5f80000]))) "../Drivers/CMSIS/Include/core_cm4.h":1660:14 106 {*iorsi3_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [124])
        (ior:SI (reg:SI 3 r3 [124])
            (const_int 131072 [0x20000]))) "../Drivers/CMSIS/Include/core_cm4.h":1660:14 106 {*iorsi3_insn}
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 reg_value+0 S4 A64])
        (reg:SI 3 r3 [124])) "../Drivers/CMSIS/Include/core_cm4.h":1660:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 2 r2 [orig:116 _4 ] [116])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1663:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 2 (set (reg:SI 3 r3 [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 reg_value+0 S4 A64])) "../Drivers/CMSIS/Include/core_cm4.h":1663:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 28 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:116 _4 ] [116])
                (const_int 12 [0xc])) [1 _4->AIRCR+0 S4 A32])
        (reg:SI 3 r3 [125])) "../Drivers/CMSIS/Include/core_cm4.h":1663:14 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1664:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1664:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 28 25 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 33 3 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1664:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 33 29 0 NOTE_INSN_DELETED)

;; Function __NVIC_GetPriorityGrouping (__NVIC_GetPriorityGrouping, funcdef_no=107, decl_uid=6443, cgraph_uid=108, symbol_order=107)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 7: point = 5, n_alt = 1
   Insn 6: point = 7, n_alt = 5
   Insn 5: point = 9, n_alt = 5
 r113: [8..9]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
 r117: [0..1]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r113: [8..9]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
 r117: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_GetPriorityGrouping

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={5d,4u} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 40{29d,11u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116 117
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1674:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 12 [0xc])) [1 _1->AIRCR+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1674:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (lshiftrt:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 8 [0x8]))) "../Drivers/CMSIS/Include/core_cm4.h":1674:11 147 {*arm_shiftsi3}
     (nil))
(insn 8 7 15 2 (set (reg:SI 3 r3 [orig:116 _5 ] [116])
        (and:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 7 [0x7]))) "../Drivers/CMSIS/Include/core_cm4.h":1674:11 90 {*arm_andsi3_insn}
     (nil))
(insn 15 8 16 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "../Drivers/CMSIS/Include/core_cm4.h":1675:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 19 2 (use (reg/i:SI 0 r0)) "../Drivers/CMSIS/Include/core_cm4.h":1675:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 19 16 0 NOTE_INSN_DELETED)

;; Function __NVIC_EnableIRQ (__NVIC_EnableIRQ, funcdef_no=108, decl_uid=6446, cgraph_uid=109, symbol_order=108)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 35: point = 0, n_alt = -1
  BB 3
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 7
   Insn 24: point = 1, n_alt = 3
   Insn 23: point = 3, n_alt = 1
   Insn 22: point = 4, n_alt = 1
   Insn 21: point = 6, n_alt = 1
   Insn 20: point = 7, n_alt = 5
   Insn 19: point = 8, n_alt = 0
   Insn 18: point = 10, n_alt = -2
   Insn 17: point = 12, n_alt = 1
   Insn 16: point = 13, n_alt = -1
  BB 2
   Insn 14: point = 13, n_alt = -1
   Insn 13: point = 13, n_alt = 0
   Insn 12: point = 14, n_alt = 1
   Insn 4: point = 15, n_alt = 6
   Insn 3: point = 16, n_alt = 0
   Insn 2: point = 18, n_alt = -2
 r113: [11..12]
 r114: [9..10]
 r115: [2..8]
 r116: [0..7]
 r117: [5..6]
 r118: [0..4]
 r119: [0..1]
 r120: [17..18]
 r121: [15..16]
 r124: [13..14]
 r125: [2..3]
Compressing live ranges: from 19 to 16 - 84%
Ranges after the compression:
 r113: [8..9]
 r114: [6..7]
 r115: [2..5]
 r116: [0..5]
 r117: [4..5]
 r118: [0..3]
 r119: [0..1]
 r120: [14..15]
 r121: [12..13]
 r124: [10..11]
 r125: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 24
changing reg in insn 20
changing reg in insn 25
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 23
changing reg in insn 24
deleting insn with uid = 3.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_EnableIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={6d,5u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 60{34d,26u,0e} in 16{16 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 121 124
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [120])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1685:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/CMSIS/Include/core_cm4.h":1685:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [124])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1686:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1686:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 34)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1686:6 273 {arm_cond_branch}
     (nil)
 -> 34)
;;  succ:       3 (FALLTHRU)
;;              5 ../Drivers/CMSIS/Include/core_cm4.h:1692:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 125
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (parallel [
            (asm_operands/v ("") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/core_cm4.h:1688)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/core_cm4.h":1688:5 -1
     (nil))
(insn 17 16 19 3 (set (reg:SI 3 r3 [orig:113 IRQn.2_1 ] [113])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1689:81 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 19 17 20 3 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 31 [0x1f]))) "../Drivers/CMSIS/Include/core_cm4.h":1689:81 90 {*arm_andsi3_insn}
     (nil))
(insn 20 19 21 3 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1689:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1689:18 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (lshiftrt:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 5 [0x5]))) "../Drivers/CMSIS/Include/core_cm4.h":1689:34 147 {*arm_shiftsi3}
     (nil))
(insn 23 22 24 3 (set (reg:SI 0 r0 [125])
        (const_int 1 [0x1])) "../Drivers/CMSIS/Include/core_cm4.h":1689:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 3 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 0 r0 [125])
            (reg:SI 2 r2 [orig:115 _3 ] [115]))) "../Drivers/CMSIS/Include/core_cm4.h":1689:45 147 {*arm_shiftsi3}
     (nil))
(insn 25 24 26 3 (set (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:116 _4 ] [116])) [1 _4->ISER[_6]+0 S4 A32])
        (reg:SI 2 r2 [orig:119 _7 ] [119])) "../Drivers/CMSIS/Include/core_cm4.h":1689:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 34 3 (parallel [
            (asm_operands/v ("") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/core_cm4.h:1690)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/core_cm4.h":1690:5 -1
     (nil))
;;  succ:       5 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1692:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 ../Drivers/CMSIS/Include/core_cm4.h:1692:1
;;              3 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1692:1
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 34 26 33 5 10 (nil) [1 uses])
(note 33 34 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 29 5 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1692:1 313 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 29 35 30 4 8 (nil) [0 uses])
(note 30 29 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 37 30 0 NOTE_INSN_DELETED)

;; Function __NVIC_DisableIRQ (__NVIC_DisableIRQ, funcdef_no=110, decl_uid=6452, cgraph_uid=111, symbol_order=110)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 40: point = 0, n_alt = -1
  BB 3
   Insn 35: point = 0, n_alt = -1
   Insn 28: point = 0, n_alt = -1
   Insn 34: point = 0, n_alt = -1
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 7
   Insn 24: point = 1, n_alt = 2
   Insn 23: point = 3, n_alt = 3
   Insn 22: point = 5, n_alt = 1
   Insn 21: point = 6, n_alt = 1
   Insn 20: point = 8, n_alt = 1
   Insn 19: point = 9, n_alt = 5
   Insn 18: point = 10, n_alt = 0
   Insn 17: point = 12, n_alt = -2
   Insn 16: point = 14, n_alt = 1
  BB 2
   Insn 14: point = 15, n_alt = -1
   Insn 13: point = 15, n_alt = 0
   Insn 12: point = 16, n_alt = 1
   Insn 4: point = 17, n_alt = 6
   Insn 3: point = 18, n_alt = 0
   Insn 2: point = 20, n_alt = -2
 r113: [13..14]
 r114: [11..12]
 r115: [4..10]
 r116: [0..9]
 r117: [7..8]
 r118: [2..6]
 r119: [0..3]
 r120: [19..20]
 r121: [17..18]
 r124: [15..16]
 r125: [4..5]
 r126: [0..1]
Compressing live ranges: from 21 to 18 - 85%
Ranges after the compression:
 r113: [10..11]
 r114: [8..9]
 r115: [4..7]
 r116: [0..7]
 r117: [6..7]
 r118: [2..5]
 r119: [0..3]
 r120: [16..17]
 r121: [14..15]
 r124: [12..13]
 r125: [4..5]
 r126: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 23
changing reg in insn 19
changing reg in insn 25
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 24
changing reg in insn 23
changing reg in insn 25
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 3.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_DisableIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={7d,6u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 62{35d,27u,0e} in 19{19 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 121 124
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [120])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1723:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/CMSIS/Include/core_cm4.h":1723:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [124])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1724:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1724:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 39)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1724:6 273 {arm_cond_branch}
     (nil)
 -> 39)
;;  succ:       3 (FALLTHRU)
;;              5 ../Drivers/CMSIS/Include/core_cm4.h:1730:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 125 126
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 18 3 (set (reg:SI 3 r3 [orig:113 IRQn.3_1 ] [113])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1726:81 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 18 16 19 3 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 31 [0x1f]))) "../Drivers/CMSIS/Include/core_cm4.h":1726:81 90 {*arm_andsi3_insn}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1726:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1726:18 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (lshiftrt:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 5 [0x5]))) "../Drivers/CMSIS/Include/core_cm4.h":1726:34 147 {*arm_shiftsi3}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 r0 [125])
        (const_int 1 [0x1])) "../Drivers/CMSIS/Include/core_cm4.h":1726:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 0 r0 [125])
            (reg:SI 2 r2 [orig:115 _3 ] [115]))) "../Drivers/CMSIS/Include/core_cm4.h":1726:45 147 {*arm_shiftsi3}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [126])
        (plus:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 32 [0x20]))) "../Drivers/CMSIS/Include/core_cm4.h":1726:43 7 {*arm_addsi3}
     (nil))
(insn 25 24 26 3 (set (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [126])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:116 _4 ] [116])) [1 _4->ICER[_6]+0 S4 A32])
        (reg:SI 2 r2 [orig:119 _7 ] [119])) "../Drivers/CMSIS/Include/core_cm4.h":1726:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 34 3 (parallel [
            (asm_operands/v ("dsb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:271)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":271:3 -1
     (nil))
(insn 34 26 28 3 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":272:1 313 {nop}
     (nil))
(insn 28 34 35 3 (parallel [
            (asm_operands/v ("isb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:260)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":260:3 -1
     (nil))
(insn 35 28 39 3 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":261:1 313 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1730:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 ../Drivers/CMSIS/Include/core_cm4.h:1730:1
;;              3 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1730:1
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 39 35 38 5 15 (nil) [1 uses])
(note 38 39 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 32 5 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1730:1 313 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 32 40 33 4 13 (nil) [0 uses])
(note 33 32 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 42 33 0 NOTE_INSN_DELETED)

;; Function __NVIC_GetPendingIRQ (__NVIC_GetPendingIRQ, funcdef_no=111, decl_uid=6455, cgraph_uid=112, symbol_order=111)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 19:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) r {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 38: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = -2
   Insn 33: point = 1, n_alt = -2
  BB 3
   Insn 40: point = 4, n_alt = -1
   Insn 25: point = 4, n_alt = 0
   Insn 24: point = 6, n_alt = 3
   Insn 23: point = 8, n_alt = 0
   Insn 22: point = 10, n_alt = -2
   Insn 21: point = 12, n_alt = 1
   Insn 20: point = 13, n_alt = 5
   Insn 19: point = 15, n_alt = 2
   Insn 18: point = 17, n_alt = 1
   Insn 17: point = 19, n_alt = 1
   Insn 16: point = 20, n_alt = 5
  BB 4
   Insn 30: point = 21, n_alt = 1
  BB 2
   Insn 14: point = 22, n_alt = -1
   Insn 13: point = 22, n_alt = 0
   Insn 12: point = 23, n_alt = 1
   Insn 4: point = 24, n_alt = 6
   Insn 3: point = 25, n_alt = 0
   Insn 2: point = 27, n_alt = -2
 r113: [14..20]
 r114: [18..19]
 r115: [16..17]
 r116: [7..13]
 r117: [11..12]
 r118: [9..10]
 r119: [7..8]
 r120: [5..6]
 r121: [21..21] [2..4]
 r122: [0..1]
 r123: [26..27]
 r124: [24..25]
 r127: [22..23]
 r128: [14..15]
Compressing live ranges: from 28 to 25 - 89%
Ranges after the compression:
 r113: [12..17]
 r114: [16..17]
 r115: [14..15]
 r116: [6..11]
 r117: [10..11]
 r118: [8..9]
 r119: [6..7]
 r120: [4..5]
 r121: [18..18] [2..3]
 r122: [0..1]
 r123: [23..24]
 r124: [21..22]
 r127: [19..20]
 r128: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 20
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 25
changing reg in insn 33
changing reg in insn 33
changing reg in insn 37
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
deleting insn with uid = 3.
deleting insn with uid = 22.
deleting insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_GetPendingIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={3d,2u} r3={11d,9u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 68{38d,30u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 123 124 127
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [123])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1742:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/CMSIS/Include/core_cm4.h":1742:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [127])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1743:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [127])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1743:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1743:6 273 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 128
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1745:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:38 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 18 17 19 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (lshiftrt:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 5 [0x5]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:54 147 {*arm_shiftsi3}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [128])
        (plus:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 64 [0x40]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:35 7 {*arm_addsi3}
     (nil))
(insn 20 19 21 3 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [128])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [orig:113 _1 ] [113])) [1 _1->ISPR[_3]+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1745:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 23 3 (set (reg:SI 3 r3 [orig:117 IRQn.7_5 ] [117])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:91 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 23 21 24 3 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 31 [0x1f]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:91 90 {*arm_andsi3_insn}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (lshiftrt:SI (reg:SI 2 r2 [orig:116 _4 ] [116])
            (reg:SI 3 r3 [orig:119 _7 ] [119]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:103 147 {*arm_shiftsi3}
     (nil))
(insn 25 24 40 3 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 1 [0x1]))) "../Drivers/CMSIS/Include/core_cm4.h":1745:12 90 {*arm_andsi3_insn}
     (nil))
(jump_insn 40 25 41 3 (set (pc)
        (label_ref 31)) "../Drivers/CMSIS/Include/core_cm4.h":1745:12 284 {*arm_jump}
     (nil)
 -> 31)
;;  succ:       5 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1745:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121

(barrier 41 40 28)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121
(code_label 28 41 29 4 19 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 0 [0])) "../Drivers/CMSIS/Include/core_cm4.h":1749:11 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1749:11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1749:11
;;              3 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1745:12
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121
;; lr  def 	 0 [r0] 122
(code_label 31 30 32 5 20 (nil) [1 uses])
(note 32 31 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 32 38 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:122 <retval> ] [122])) "../Drivers/CMSIS/Include/core_cm4.h":1751:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 43 5 (use (reg/i:SI 0 r0)) "../Drivers/CMSIS/Include/core_cm4.h":1751:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 43 38 0 NOTE_INSN_DELETED)

;; Function __NVIC_SetPendingIRQ (__NVIC_SetPendingIRQ, funcdef_no=112, decl_uid=6458, cgraph_uid=113, symbol_order=112)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 34: point = 0, n_alt = -1
  BB 3
   Insn 25: point = 0, n_alt = 7
   Insn 24: point = 1, n_alt = 2
   Insn 23: point = 3, n_alt = 3
   Insn 22: point = 5, n_alt = 1
   Insn 21: point = 6, n_alt = 1
   Insn 20: point = 8, n_alt = 1
   Insn 19: point = 9, n_alt = 5
   Insn 18: point = 10, n_alt = 0
   Insn 17: point = 12, n_alt = -2
   Insn 16: point = 14, n_alt = 1
  BB 2
   Insn 14: point = 15, n_alt = -1
   Insn 13: point = 15, n_alt = 0
   Insn 12: point = 16, n_alt = 1
   Insn 4: point = 17, n_alt = 6
   Insn 3: point = 18, n_alt = 0
   Insn 2: point = 20, n_alt = -2
 r113: [13..14]
 r114: [11..12]
 r115: [4..10]
 r116: [0..9]
 r117: [7..8]
 r118: [2..6]
 r119: [0..3]
 r120: [19..20]
 r121: [17..18]
 r124: [15..16]
 r125: [4..5]
 r126: [0..1]
Compressing live ranges: from 21 to 18 - 85%
Ranges after the compression:
 r113: [10..11]
 r114: [8..9]
 r115: [4..7]
 r116: [0..7]
 r117: [6..7]
 r118: [2..5]
 r119: [0..3]
 r120: [16..17]
 r121: [14..15]
 r124: [12..13]
 r125: [4..5]
 r126: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 23
changing reg in insn 19
changing reg in insn 25
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 24
changing reg in insn 23
changing reg in insn 25
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 3.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_SetPendingIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={7d,6u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 62{35d,27u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 121 124
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [120])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1761:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/CMSIS/Include/core_cm4.h":1761:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [124])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1762:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1762:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 33)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1762:6 273 {arm_cond_branch}
     (nil)
 -> 33)
;;  succ:       3 (FALLTHRU)
;;              5 ../Drivers/CMSIS/Include/core_cm4.h:1766:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 125 126
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 18 3 (set (reg:SI 3 r3 [orig:113 IRQn.6_1 ] [113])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1764:81 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 18 16 19 3 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 31 [0x1f]))) "../Drivers/CMSIS/Include/core_cm4.h":1764:81 90 {*arm_andsi3_insn}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1764:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1764:18 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (lshiftrt:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 5 [0x5]))) "../Drivers/CMSIS/Include/core_cm4.h":1764:34 147 {*arm_shiftsi3}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 r0 [125])
        (const_int 1 [0x1])) "../Drivers/CMSIS/Include/core_cm4.h":1764:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 0 r0 [125])
            (reg:SI 2 r2 [orig:115 _3 ] [115]))) "../Drivers/CMSIS/Include/core_cm4.h":1764:45 147 {*arm_shiftsi3}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [126])
        (plus:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 64 [0x40]))) "../Drivers/CMSIS/Include/core_cm4.h":1764:43 7 {*arm_addsi3}
     (nil))
(insn 25 24 33 3 (set (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [126])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:116 _4 ] [116])) [1 _4->ISPR[_6]+0 S4 A32])
        (reg:SI 2 r2 [orig:119 _7 ] [119])) "../Drivers/CMSIS/Include/core_cm4.h":1764:43 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1766:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 ../Drivers/CMSIS/Include/core_cm4.h:1766:1
;;              3 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1766:1
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 33 25 32 5 25 (nil) [1 uses])
(note 32 33 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 28 5 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1766:1 313 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 28 34 29 4 23 (nil) [0 uses])
(note 29 28 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 36 29 0 NOTE_INSN_DELETED)

;; Function __NVIC_ClearPendingIRQ (__NVIC_ClearPendingIRQ, funcdef_no=113, decl_uid=6461, cgraph_uid=114, symbol_order=113)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 34: point = 0, n_alt = -1
  BB 3
   Insn 25: point = 0, n_alt = 7
   Insn 24: point = 1, n_alt = 2
   Insn 23: point = 3, n_alt = 3
   Insn 22: point = 5, n_alt = 1
   Insn 21: point = 6, n_alt = 1
   Insn 20: point = 8, n_alt = 1
   Insn 19: point = 9, n_alt = 5
   Insn 18: point = 10, n_alt = 0
   Insn 17: point = 12, n_alt = -2
   Insn 16: point = 14, n_alt = 1
  BB 2
   Insn 14: point = 15, n_alt = -1
   Insn 13: point = 15, n_alt = 0
   Insn 12: point = 16, n_alt = 1
   Insn 4: point = 17, n_alt = 6
   Insn 3: point = 18, n_alt = 0
   Insn 2: point = 20, n_alt = -2
 r113: [13..14]
 r114: [11..12]
 r115: [4..10]
 r116: [0..9]
 r117: [7..8]
 r118: [2..6]
 r119: [0..3]
 r120: [19..20]
 r121: [17..18]
 r124: [15..16]
 r125: [4..5]
 r126: [0..1]
Compressing live ranges: from 21 to 18 - 85%
Ranges after the compression:
 r113: [10..11]
 r114: [8..9]
 r115: [4..7]
 r116: [0..7]
 r117: [6..7]
 r118: [2..5]
 r119: [0..3]
 r120: [16..17]
 r121: [14..15]
 r124: [12..13]
 r125: [4..5]
 r126: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 23
changing reg in insn 19
changing reg in insn 25
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 24
changing reg in insn 23
changing reg in insn 25
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 3.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_ClearPendingIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={3d,2u} r3={7d,6u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 62{35d,27u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 121 124
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [120])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1776:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/CMSIS/Include/core_cm4.h":1776:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [124])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1777:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [124])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1777:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 33)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1777:6 273 {arm_cond_branch}
     (nil)
 -> 33)
;;  succ:       3 (FALLTHRU)
;;              5 ../Drivers/CMSIS/Include/core_cm4.h:1781:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 125 126
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 18 3 (set (reg:SI 3 r3 [orig:113 IRQn.8_1 ] [113])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1779:81 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 18 16 19 3 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 31 [0x1f]))) "../Drivers/CMSIS/Include/core_cm4.h":1779:81 90 {*arm_andsi3_insn}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1779:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1779:18 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (lshiftrt:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 5 [0x5]))) "../Drivers/CMSIS/Include/core_cm4.h":1779:34 147 {*arm_shiftsi3}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 r0 [125])
        (const_int 1 [0x1])) "../Drivers/CMSIS/Include/core_cm4.h":1779:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 0 r0 [125])
            (reg:SI 2 r2 [orig:115 _3 ] [115]))) "../Drivers/CMSIS/Include/core_cm4.h":1779:45 147 {*arm_shiftsi3}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [126])
        (plus:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 96 [0x60]))) "../Drivers/CMSIS/Include/core_cm4.h":1779:43 7 {*arm_addsi3}
     (nil))
(insn 25 24 33 3 (set (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [126])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:116 _4 ] [116])) [1 _4->ICPR[_6]+0 S4 A32])
        (reg:SI 2 r2 [orig:119 _7 ] [119])) "../Drivers/CMSIS/Include/core_cm4.h":1779:43 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1781:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 ../Drivers/CMSIS/Include/core_cm4.h:1781:1
;;              3 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1781:1
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 33 25 32 5 30 (nil) [1 uses])
(note 32 33 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 28 5 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1781:1 313 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 28 34 29 4 28 (nil) [0 uses])
(note 29 28 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 36 29 0 NOTE_INSN_DELETED)

;; Function __NVIC_GetActive (__NVIC_GetActive, funcdef_no=114, decl_uid=6464, cgraph_uid=115, symbol_order=114)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 19:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) r {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 38: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = -2
   Insn 33: point = 1, n_alt = -2
  BB 3
   Insn 40: point = 4, n_alt = -1
   Insn 25: point = 4, n_alt = 0
   Insn 24: point = 6, n_alt = 3
   Insn 23: point = 8, n_alt = 0
   Insn 22: point = 10, n_alt = -2
   Insn 21: point = 12, n_alt = 1
   Insn 20: point = 13, n_alt = 5
   Insn 19: point = 15, n_alt = 2
   Insn 18: point = 17, n_alt = 1
   Insn 17: point = 19, n_alt = 1
   Insn 16: point = 20, n_alt = 5
  BB 4
   Insn 30: point = 21, n_alt = 1
  BB 2
   Insn 14: point = 22, n_alt = -1
   Insn 13: point = 22, n_alt = 0
   Insn 12: point = 23, n_alt = 1
   Insn 4: point = 24, n_alt = 6
   Insn 3: point = 25, n_alt = 0
   Insn 2: point = 27, n_alt = -2
 r113: [14..20]
 r114: [18..19]
 r115: [16..17]
 r116: [7..13]
 r117: [11..12]
 r118: [9..10]
 r119: [7..8]
 r120: [5..6]
 r121: [21..21] [2..4]
 r122: [0..1]
 r123: [26..27]
 r124: [24..25]
 r127: [22..23]
 r128: [14..15]
Compressing live ranges: from 28 to 25 - 89%
Ranges after the compression:
 r113: [12..17]
 r114: [16..17]
 r115: [14..15]
 r116: [6..11]
 r117: [10..11]
 r118: [8..9]
 r119: [6..7]
 r120: [4..5]
 r121: [18..18] [2..3]
 r122: [0..1]
 r123: [23..24]
 r124: [21..22]
 r127: [19..20]
 r128: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 20
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 25
changing reg in insn 33
changing reg in insn 33
changing reg in insn 37
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
deleting insn with uid = 3.
deleting insn with uid = 22.
deleting insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_GetActive

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={3d,2u} r3={11d,9u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 68{38d,30u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 123 124 127
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [123])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1793:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [124])) "../Drivers/CMSIS/Include/core_cm4.h":1793:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [127])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1794:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [127])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1794:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1794:6 273 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 128
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1796:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:38 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 18 17 19 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (lshiftrt:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 5 [0x5]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:54 147 {*arm_shiftsi3}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [128])
        (plus:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 128 [0x80]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:35 7 {*arm_addsi3}
     (nil))
(insn 20 19 21 3 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [128])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [orig:113 _1 ] [113])) [1 _1->IABR[_3]+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1796:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 23 3 (set (reg:SI 3 r3 [orig:117 IRQn.9_5 ] [117])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:91 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 23 21 24 3 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 31 [0x1f]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:91 90 {*arm_andsi3_insn}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (lshiftrt:SI (reg:SI 2 r2 [orig:116 _4 ] [116])
            (reg:SI 3 r3 [orig:119 _7 ] [119]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:103 147 {*arm_shiftsi3}
     (nil))
(insn 25 24 40 3 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 1 [0x1]))) "../Drivers/CMSIS/Include/core_cm4.h":1796:12 90 {*arm_andsi3_insn}
     (nil))
(jump_insn 40 25 41 3 (set (pc)
        (label_ref 31)) "../Drivers/CMSIS/Include/core_cm4.h":1796:12 284 {*arm_jump}
     (nil)
 -> 31)
;;  succ:       5 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1796:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121

(barrier 41 40 28)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121
(code_label 28 41 29 4 34 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 0 [0])) "../Drivers/CMSIS/Include/core_cm4.h":1800:11 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1800:11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1800:11
;;              3 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1796:12
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 121
;; lr  def 	 0 [r0] 122
(code_label 31 30 32 5 35 (nil) [1 uses])
(note 32 31 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 32 38 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:122 <retval> ] [122])) "../Drivers/CMSIS/Include/core_cm4.h":1802:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 43 5 (use (reg/i:SI 0 r0)) "../Drivers/CMSIS/Include/core_cm4.h":1802:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 43 38 0 NOTE_INSN_DELETED)

;; Function __NVIC_SetPriority (__NVIC_SetPriority, funcdef_no=115, decl_uid=6468, cgraph_uid=116, symbol_order=115)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) m {*thumb2_extendqisi_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 23
	 Choosing alt 0 in insn 23:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 36:  (0) r  (1) rk  (2) L {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 39
	 Choosing alt 0 in insn 39:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 41:  (0) Uu  (1) l {*arm_movqi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 49: point = 0, n_alt = -1
  BB 3
   Insn 46: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 8
   Insn 24: point = 1, n_alt = 0
   Insn 23: point = 3, n_alt = 0
   Insn 22: point = 5, n_alt = 0
   Insn 21: point = 7, n_alt = 1
   Insn 20: point = 9, n_alt = 1
   Insn 19: point = 10, n_alt = 5
   Insn 18: point = 11, n_alt = 0
   Insn 17: point = 13, n_alt = 5
  BB 4
   Insn 41: point = 14, n_alt = 6
   Insn 40: point = 15, n_alt = 0
   Insn 39: point = 17, n_alt = 0
   Insn 38: point = 19, n_alt = 0
   Insn 37: point = 21, n_alt = 1
   Insn 36: point = 23, n_alt = 10
   Insn 35: point = 25, n_alt = 0
   Insn 34: point = 27, n_alt = -2
   Insn 33: point = 29, n_alt = 1
   Insn 32: point = 30, n_alt = 5
   Insn 31: point = 31, n_alt = 0
   Insn 30: point = 33, n_alt = 5
  BB 2
   Insn 15: point = 34, n_alt = -1
   Insn 14: point = 34, n_alt = 0
   Insn 13: point = 35, n_alt = 1
   Insn 4: point = 36, n_alt = 6
   Insn 3: point = 37, n_alt = 0
   Insn 5: point = 39, n_alt = 7
   Insn 2: point = 39, n_alt = -2
 r113: [8..11]
 r114: [4..10]
 r115: [4..9]
 r116: [2..5]
 r117: [22..31]
 r118: [18..30]
 r119: [28..29]
 r120: [26..27]
 r121: [24..25]
 r122: [18..23]
 r123: [16..19]
 r124: [38..39]
 r125: [36..37]
 r128: [34..35]
 r129: [12..13]
 r130: [6..7]
 r131: [0..3]
 r132: [0..1]
 r133: [32..33]
 r134: [20..21]
 r135: [14..17]
 r136: [14..15]
Compressing live ranges: from 40 to 36 - 90%
Ranges after the compression:
 r113: [8..9]
 r114: [4..9]
 r115: [4..9]
 r116: [2..5]
 r117: [20..27]
 r118: [16..27]
 r119: [26..27]
 r120: [24..25]
 r121: [22..23]
 r122: [16..21]
 r123: [14..17]
 r124: [34..35]
 r125: [32..33]
 r128: [30..31]
 r129: [10..11]
 r130: [6..7]
 r131: [0..3]
 r132: [0..1]
 r133: [28..29]
 r134: [18..19]
 r135: [12..15]
 r136: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 18
changing reg in insn 21
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 31
changing reg in insn 37
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 38
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 21
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 37
changing reg in insn 39
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
deleting insn with uid = 3.
deleting insn with uid = 24.
deleting insn with uid = 34.
deleting insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_SetPriority

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={3d,3u} r2={7d,6u} r3={11d,10u} r7={1d,13u} r13={1d,6u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 84{43d,41u,0e} in 26{26 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 124 125 128
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 5 2 (set (reg:SI 3 r3 [124])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1815:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 2 4 2 (set (mem/c:SI (reg/f:SI 7 r7) [1 priority+0 S4 A32])
        (reg:SI 1 r1 [ priority ])) "../Drivers/CMSIS/Include/core_cm4.h":1815:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 5 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [125])) "../Drivers/CMSIS/Include/core_cm4.h":1815:1 263 {*arm_movqi_insn}
     (nil))
(note 6 4 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 6 14 2 (set (reg:SI 3 r3 [128])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1816:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [128])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1816:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1816:6 273 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 129 130 131 132
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:SI 3 r3 [129])
        (mem/c:SI (reg/f:SI 7 r7) [1 priority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1818:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 3 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (zero_extend:SI (reg:QI 3 r3 [129]))) "../Drivers/CMSIS/Include/core_cm4.h":1818:48 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 1 r1 [orig:114 _2 ] [114])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1818:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1818:15 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 21 20 22 3 (set (reg:SI 2 r2 [130])
        (ashift:SI (reg:SI 2 r2 [orig:113 _1 ] [113])
            (const_int 4 [0x4]))) "../Drivers/CMSIS/Include/core_cm4.h":1818:48 147 {*arm_shiftsi3}
     (nil))
(insn 22 21 23 3 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 2 r2 [130]))) "../Drivers/CMSIS/Include/core_cm4.h":1818:48 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 23 22 25 3 (set (reg/f:SI 3 r3 [131])
        (plus:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (reg/f:SI 1 r1 [orig:114 _2 ] [114]))) "../Drivers/CMSIS/Include/core_cm4.h":1818:46 7 {*arm_addsi3}
     (nil))
(insn 25 23 46 3 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 768 [0x300])) [0 _2->IP[_3]+0 S1 A8])
        (reg:QI 2 r2 [132])) "../Drivers/CMSIS/Include/core_cm4.h":1818:46 263 {*arm_movqi_insn}
     (nil))
(jump_insn 46 25 47 3 (set (pc)
        (label_ref:SI 50)) "../Drivers/CMSIS/Include/core_cm4.h":1824:1 284 {*arm_jump}
     (nil)
 -> 50)
;;  succ:       6 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1824:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 47 46 28)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 117 118 119 120 121 122 123 133 134 135 136
(code_label 28 47 29 4 39 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 3 r3 [133])
        (mem/c:SI (reg/f:SI 7 r7) [1 priority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1822:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 4 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (zero_extend:SI (reg:QI 3 r3 [133]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:48 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 32 31 33 4 (set (reg/f:SI 1 r1 [orig:118 _6 ] [118])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1822:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 35 4 (set (reg:SI 3 r3 [orig:119 IRQn.1_7 ] [119])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:32 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 35 33 36 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 15 [0xf]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:32 90 {*arm_andsi3_insn}
     (nil))
(insn 36 35 37 4 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (plus:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int -4 [0xfffffffffffffffc]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:40 7 {*arm_addsi3}
     (nil))
(insn 37 36 38 4 (set (reg:SI 2 r2 [134])
        (ashift:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (const_int 4 [0x4]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:48 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 4 (set (reg:SI 2 r2 [orig:123 _11 ] [123])
        (zero_extend:SI (reg:QI 2 r2 [134]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:48 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 39 38 41 4 (set (reg/f:SI 3 r3 [135])
        (plus:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (reg/f:SI 1 r1 [orig:118 _6 ] [118]))) "../Drivers/CMSIS/Include/core_cm4.h":1822:46 7 {*arm_addsi3}
     (nil))
(insn 41 39 50 4 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 24 [0x18])) [0 _6->SHP[_10]+0 S1 A8])
        (reg:QI 2 r2 [136])) "../Drivers/CMSIS/Include/core_cm4.h":1822:46 263 {*arm_movqi_insn}
     (nil))
;;  succ:       6 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1824:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1824:1
;;              3 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1824:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 50 41 48 6 41 (nil) [1 uses])
(note 48 50 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 44 6 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1824:1 313 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 44 49 45 5 38 (nil) [0 uses])
(note 45 44 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 53 45 0 NOTE_INSN_DELETED)

;; Function __NVIC_GetPriority (__NVIC_GetPriority, funcdef_no=116, decl_uid=6471, cgraph_uid=117, symbol_order=116)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) m {*thumb2_extendqisi_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 18
	 Choosing alt 0 in insn 18:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 33:  (0) r  (1) rk  (2) L {*arm_addsi3}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 34
	 Choosing alt 0 in insn 34:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) Uu {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 48: point = 0, n_alt = -1
   Insn 47: point = 0, n_alt = -2
   Insn 43: point = 1, n_alt = -2
  BB 3
   Insn 50: point = 4, n_alt = -1
   Insn 24: point = 4, n_alt = -2
   Insn 23: point = 6, n_alt = 0
   Insn 22: point = 8, n_alt = 1
   Insn 21: point = 10, n_alt = 0
   Insn 20: point = 12, n_alt = 7
   Insn 18: point = 14, n_alt = 0
   Insn 17: point = 16, n_alt = 1
   Insn 16: point = 17, n_alt = 5
  BB 4
   Insn 40: point = 18, n_alt = -2
   Insn 39: point = 20, n_alt = 0
   Insn 38: point = 22, n_alt = 1
   Insn 37: point = 24, n_alt = 0
   Insn 36: point = 26, n_alt = 5
   Insn 34: point = 28, n_alt = 0
   Insn 33: point = 30, n_alt = 10
   Insn 32: point = 32, n_alt = 0
   Insn 31: point = 34, n_alt = -2
   Insn 30: point = 36, n_alt = 1
   Insn 29: point = 37, n_alt = 5
  BB 2
   Insn 14: point = 38, n_alt = -1
   Insn 13: point = 38, n_alt = 0
   Insn 12: point = 39, n_alt = 1
   Insn 4: point = 40, n_alt = 6
   Insn 3: point = 41, n_alt = 0
   Insn 2: point = 43, n_alt = -2
 r113: [15..17]
 r114: [15..16]
 r115: [9..10]
 r116: [5..6]
 r117: [29..37]
 r118: [35..36]
 r119: [33..34]
 r120: [31..32]
 r121: [29..30]
 r122: [23..24]
 r123: [19..20]
 r124: [18..18] [2..4]
 r125: [0..1]
 r126: [42..43]
 r127: [40..41]
 r130: [38..39]
 r131: [13..14]
 r133: [11..12]
 r134: [7..8]
 r135: [27..28]
 r137: [25..26]
 r138: [21..22]
Compressing live ranges: from 44 to 41 - 93%
Ranges after the compression:
 r113: [14..15]
 r114: [14..15]
 r115: [8..9]
 r116: [4..5]
 r117: [27..34]
 r118: [33..34]
 r119: [31..32]
 r120: [29..30]
 r121: [27..28]
 r122: [21..22]
 r123: [17..18]
 r124: [16..16] [2..3]
 r125: [0..1]
 r126: [39..40]
 r127: [37..38]
 r130: [35..36]
 r131: [12..13]
 r133: [10..11]
 r134: [6..7]
 r135: [25..26]
 r137: [23..24]
 r138: [19..20]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 24
changing reg in insn 43
changing reg in insn 43
changing reg in insn 47
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 34
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
deleting insn with uid = 3.
deleting insn with uid = 24.
deleting insn with uid = 31.
deleting insn with uid = 40.
deleting insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_GetPriority

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={3d,2u} r3={17d,15u} r7={1d,9u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 80{44d,36u,0e} in 24{24 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 126 127 130
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [126])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/CMSIS/Include/core_cm4.h":1837:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [127])) "../Drivers/CMSIS/Include/core_cm4.h":1837:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:SI 3 r3 [130])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1839:6 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [130])
            (const_int 0 [0]))) "../Drivers/CMSIS/Include/core_cm4.h":1839:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1839:6 273 {arm_cond_branch}
     (nil)
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 124 131 133 134
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int -536813312 [0xffffffffe000e100])) "../Drivers/CMSIS/Include/core_cm4.h":1841:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1841:33 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 18 17 20 3 (set (reg/f:SI 3 r3 [131])
        (plus:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (reg/f:SI 2 r2 [orig:113 _1 ] [113]))) "../Drivers/CMSIS/Include/core_cm4.h":1841:31 7 {*arm_addsi3}
     (nil))
(insn 20 18 21 3 (set (reg:QI 3 r3 [133])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 768 [0x300])) [0 _1->IP[_2]+0 S1 A8])) "../Drivers/CMSIS/Include/core_cm4.h":1841:31 263 {*arm_movqi_insn}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [133]))) "../Drivers/CMSIS/Include/core_cm4.h":1841:31 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 22 21 23 3 (set (reg:SI 3 r3 [134])
        (lshiftrt:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 4 [0x4]))) "../Drivers/CMSIS/Include/core_cm4.h":1841:64 147 {*arm_shiftsi3}
     (nil))
(insn 23 22 50 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (zero_extend:SI (reg:QI 3 r3 [134]))) "../Drivers/CMSIS/Include/core_cm4.h":1841:64 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 50 23 51 3 (set (pc)
        (label_ref 41)) "../Drivers/CMSIS/Include/core_cm4.h":1841:64 284 {*arm_jump}
     (nil)
 -> 41)
;;  succ:       5 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1841:64
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 124

(barrier 51 50 27)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 117 118 119 120 121 122 123 124 135 137 138
(code_label 27 51 28 4 45 (nil) [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg/f:SI 2 r2 [orig:117 _5 ] [117])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1845:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 32 4 (set (reg:SI 3 r3 [orig:118 IRQn.4_6 ] [118])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:50 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 32 30 33 4 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 15 [0xf]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:50 90 {*arm_andsi3_insn}
     (nil))
(insn 33 32 34 4 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (plus:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int -4 [0xfffffffffffffffc]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:58 7 {*arm_addsi3}
     (nil))
(insn 34 33 36 4 (set (reg/f:SI 3 r3 [135])
        (plus:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (reg/f:SI 2 r2 [orig:117 _5 ] [117]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:31 7 {*arm_addsi3}
     (nil))
(insn 36 34 37 4 (set (reg:QI 3 r3 [137])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 24 [0x18])) [0 _5->SHP[_9]+0 S1 A8])) "../Drivers/CMSIS/Include/core_cm4.h":1845:31 263 {*arm_movqi_insn}
     (nil))
(insn 37 36 38 4 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (zero_extend:SI (reg:QI 3 r3 [137]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:31 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 38 37 39 4 (set (reg:SI 3 r3 [138])
        (lshiftrt:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 4 [0x4]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:64 147 {*arm_shiftsi3}
     (nil))
(insn 39 38 41 4 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (zero_extend:SI (reg:QI 3 r3 [138]))) "../Drivers/CMSIS/Include/core_cm4.h":1845:64 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       5 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1845:64
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 124

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1845:64
;;              3 [always]  ../Drivers/CMSIS/Include/core_cm4.h:1841:64
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 124
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 124
;; lr  def 	 0 [r0] 125
(code_label 41 39 42 5 46 (nil) [1 uses])
(note 42 41 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 42 48 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:125 <retval> ] [125])) "../Drivers/CMSIS/Include/core_cm4.h":1847:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 54 5 (use (reg/i:SI 0 r0)) "../Drivers/CMSIS/Include/core_cm4.h":1847:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 54 48 0 NOTE_INSN_DELETED)

;; Function NVIC_EncodePriority (NVIC_EncodePriority, funcdef_no=117, decl_uid=6476, cgraph_uid=118, symbol_order=117)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can't eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 13:  (0) l  (1) 0  (2) Py {*thumb2_uminsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 16:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 23:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 31:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) r  (2) r {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =l  (1) l {*arm_one_cmplsi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) r {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =l  (1) l {*arm_one_cmplsi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 45
	 Choosing alt 1 in insn 45:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 46
	 Choosing alt 1 in insn 46:  (0) l  (1) 0  (2) l {*iorsi3_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 54: point = 0, n_alt = -1
   Insn 53: point = 0, n_alt = -2
   Insn 49: point = 1, n_alt = -2
   Insn 46: point = 3, n_alt = 1
   Insn 45: point = 5, n_alt = 1
   Insn 44: point = 7, n_alt = 5
   Insn 43: point = 8, n_alt = 0
   Insn 42: point = 10, n_alt = 3
   Insn 41: point = 12, n_alt = 5
   Insn 40: point = 13, n_alt = 1
   Insn 39: point = 14, n_alt = 0
   Insn 38: point = 16, n_alt = 5
   Insn 37: point = 17, n_alt = 1
   Insn 36: point = 19, n_alt = 5
   Insn 35: point = 20, n_alt = 0
   Insn 34: point = 22, n_alt = 3
   Insn 33: point = 24, n_alt = 5
   Insn 32: point = 25, n_alt = 1
   Insn 31: point = 26, n_alt = 7
  BB 3
   Insn 56: point = 28, n_alt = -1
   Insn 23: point = 28, n_alt = 10
   Insn 22: point = 30, n_alt = 5
  BB 4
   Insn 28: point = 31, n_alt = 1
  BB 2
   Insn 20: point = 32, n_alt = -1
   Insn 19: point = 32, n_alt = 0
   Insn 16: point = 33, n_alt = 2
   Insn 15: point = 35, n_alt = 5
   Insn 14: point = 36, n_alt = 7
   Insn 13: point = 37, n_alt = 1
   Insn 12: point = 39, n_alt = 4
   Insn 11: point = 41, n_alt = 5
   Insn 10: point = 42, n_alt = 7
   Insn 9: point = 43, n_alt = 0
   Insn 8: point = 45, n_alt = 5
   Insn 4: point = 46, n_alt = 7
   Insn 3: point = 46, n_alt = 7
   Insn 2: point = 46, n_alt = 7
 r113: [38..39]
 r114: [32..33]
 r115: [21..22]
 r116: [18..20]
 r117: [15..17]
 r118: [4..14]
 r119: [9..10]
 r120: [6..8]
 r121: [4..5]
 r122: [31..31] [26..28]
 r123: [2..3]
 r124: [0..1]
 r125: [42..43]
 r126: [44..45]
 r127: [40..41]
 r128: [36..37]
 r129: [34..35]
 r130: [29..30]
 r131: [23..25]
 r132: [23..24]
 r133: [18..19]
 r134: [15..16]
 r135: [11..13]
 r136: [11..12]
 r137: [6..7]
Compressing live ranges: from 46 to 39 - 84%
Ranges after the compression:
 r113: [31..32]
 r114: [25..26]
 r115: [16..17]
 r116: [14..15]
 r117: [12..13]
 r118: [4..11]
 r119: [8..9]
 r120: [6..7]
 r121: [4..5]
 r122: [24..24] [20..21]
 r123: [2..3]
 r124: [0..1]
 r125: [35..36]
 r126: [37..38]
 r127: [33..34]
 r128: [29..30]
 r129: [27..28]
 r130: [22..23]
 r131: [18..19]
 r132: [18..19]
 r133: [14..15]
 r134: [12..13]
 r135: [10..11]
 r136: [10..11]
 r137: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=40)
Can't eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=32)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 19
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 37
changing reg in insn 37
changing reg in insn 39
changing reg in insn 39
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 45
changing reg in insn 28
changing reg in insn 23
changing reg in insn 31
changing reg in insn 46
changing reg in insn 49
changing reg in insn 49
changing reg in insn 53
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
deleting insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns


NVIC_EncodePriority

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={3d,3u} r2={5d,5u} r3={20d,18u} r7={1d,20u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={2d,1u} r102={1d,1u} 
;;    total ref usage 108{52d,56u,0e} in 36{36 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 125 126 127 128 129
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 PriorityGroup+0 S4 A32])
        (reg:SI 0 r0 [ PriorityGroup ])) "../Drivers/CMSIS/Include/core_cm4.h":1862:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PreemptPriority+0 S4 A32])
        (reg:SI 1 r1 [ PreemptPriority ])) "../Drivers/CMSIS/Include/core_cm4.h":1862:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 SubPriority+0 S4 A32])
        (reg:SI 2 r2 [ SubPriority ])) "../Drivers/CMSIS/Include/core_cm4.h":1862:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 PriorityGroup+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1863:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [125])
        (and:SI (reg:SI 3 r3 [126])
            (const_int 7 [0x7]))) "../Drivers/CMSIS/Include/core_cm4.h":1863:12 90 {*arm_andsi3_insn}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])
        (reg:SI 3 r3 [125])) "../Drivers/CMSIS/Include/core_cm4.h":1863:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1867:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (minus:SI (const_int 7 [0x7])
            (reg:SI 3 r3 [127]))) "../Drivers/CMSIS/Include/core_cm4.h":1867:31 45 {*arm_subsi3_insn}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 3 r3 [128])
                (umin:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 100 cc))
        ]) "../Drivers/CMSIS/Include/core_cm4.h":1867:23 993 {*thumb2_uminsi3}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 PreemptPriorityBits+0 S4 A64])
        (reg:SI 3 r3 [128])) "../Drivers/CMSIS/Include/core_cm4.h":1867:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1868:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 19 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (plus:SI (reg:SI 3 r3 [129])
            (const_int 4 [0x4]))) "../Drivers/CMSIS/Include/core_cm4.h":1868:44 7 {*arm_addsi3}
     (nil))
(insn 19 16 20 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 6 [0x6]))) "../Drivers/CMSIS/Include/core_cm4.h":1868:109 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1868:109 273 {arm_cond_branch}
     (nil)
 -> 26)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 122 130
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:SI 3 r3 [130])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1868:109 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 56 3 (set (reg:SI 3 r3 [orig:122 iftmp.0_10 ] [122])
        (plus:SI (reg:SI 3 r3 [130])
            (const_int -3 [0xfffffffffffffffd]))) "../Drivers/CMSIS/Include/core_cm4.h":1868:109 7 {*arm_addsi3}
     (nil))
(jump_insn 56 23 57 3 (set (pc)
        (label_ref 29)) 284 {*arm_jump}
     (nil)
 -> 29)
;;  succ:       5 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122

(barrier 57 56 26)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 122
(code_label 26 57 27 4 50 (nil) [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:SI 3 r3 [orig:122 iftmp.0_10 ] [122])
        (const_int 0 [0])) "../Drivers/CMSIS/Include/core_cm4.h":1868:109 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122
;; lr  def 	 0 [r0] 115 116 117 118 119 120 121 123 124 131 132 133 134 135 136 137
(code_label 29 28 30 5 51 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 SubPriorityBits+0 S4 A32])
        (reg:SI 3 r3 [orig:122 iftmp.0_10 ] [122])) "../Drivers/CMSIS/Include/core_cm4.h":1868:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 5 (set (reg:SI 2 r2 [131])
        (const_int -1 [0xffffffffffffffff])) "../Drivers/CMSIS/Include/core_cm4.h":1871:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 5 (set (reg:SI 3 r3 [132])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 PreemptPriorityBits+0 S4 A64])) "../Drivers/CMSIS/Include/core_cm4.h":1871:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 5 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (ashift:SI (reg:SI 2 r2 [131])
            (reg:SI 3 r3 [132]))) "../Drivers/CMSIS/Include/core_cm4.h":1871:30 147 {*arm_shiftsi3}
     (nil))
(insn 35 34 36 5 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (not:SI (reg:SI 3 r3 [orig:115 _3 ] [115]))) "../Drivers/CMSIS/Include/core_cm4.h":1871:30 169 {*arm_one_cmplsi2}
     (nil))
(insn 36 35 37 5 (set (reg:SI 3 r3 [133])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PreemptPriority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1871:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 5 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (and:SI (reg:SI 2 r2 [orig:116 _4 ] [116])
            (reg:SI 3 r3 [133]))) "../Drivers/CMSIS/Include/core_cm4.h":1871:30 90 {*arm_andsi3_insn}
     (nil))
(insn 38 37 39 5 (set (reg:SI 3 r3 [134])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 SubPriorityBits+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1871:82 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 5 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (ashift:SI (reg:SI 2 r2 [orig:117 _5 ] [117])
            (reg:SI 3 r3 [134]))) "../Drivers/CMSIS/Include/core_cm4.h":1871:82 147 {*arm_shiftsi3}
     (nil))
(insn 40 39 41 5 (set (reg:SI 1 r1 [135])
        (const_int -1 [0xffffffffffffffff])) "../Drivers/CMSIS/Include/core_cm4.h":1872:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 5 (set (reg:SI 3 r3 [136])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 SubPriorityBits+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1872:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 1 r1 [135])
            (reg:SI 3 r3 [136]))) "../Drivers/CMSIS/Include/core_cm4.h":1872:30 147 {*arm_shiftsi3}
     (nil))
(insn 43 42 44 5 (set (reg:SI 1 r1 [orig:120 _8 ] [120])
        (not:SI (reg:SI 3 r3 [orig:119 _7 ] [119]))) "../Drivers/CMSIS/Include/core_cm4.h":1872:30 169 {*arm_one_cmplsi2}
     (nil))
(insn 44 43 45 5 (set (reg:SI 3 r3 [137])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 SubPriority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1872:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 5 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [137])
            (reg:SI 1 r1 [orig:120 _8 ] [120]))) "../Drivers/CMSIS/Include/core_cm4.h":1872:30 90 {*arm_andsi3_insn}
     (nil))
(insn 46 45 53 5 (set (reg:SI 3 r3 [orig:123 _19 ] [123])
        (ior:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (reg:SI 2 r2 [orig:118 _6 ] [118]))) "../Drivers/CMSIS/Include/core_cm4.h":1871:102 106 {*iorsi3_insn}
     (nil))
(insn 53 46 54 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:124 <retval> ] [124])) "../Drivers/CMSIS/Include/core_cm4.h":1874:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 58 5 (use (reg/i:SI 0 r0)) "../Drivers/CMSIS/Include/core_cm4.h":1874:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 58 54 0 NOTE_INSN_DELETED)

;; Function NVIC_DecodePriority (NVIC_DecodePriority, funcdef_no=118, decl_uid=6485, cgraph_uid=119, symbol_order=118)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=0)
Can't eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 13:  (0) r  (1) I  (2) r {*arm_subsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 14:  (0) l  (1) 0  (2) Py {*thumb2_uminsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 17:  (0) l  (1) 0  (2) Py {*arm_addsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 24:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) r  (2) r {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =l  (1) l {*arm_one_cmplsi2}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) r  (2) r {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =l  (1) l {*arm_one_cmplsi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 50:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 56: point = 0, n_alt = -1
  BB 5
   Insn 50: point = 0, n_alt = 7
   Insn 49: point = 1, n_alt = 5
   Insn 48: point = 2, n_alt = 1
   Insn 47: point = 4, n_alt = 5
   Insn 46: point = 5, n_alt = 0
   Insn 45: point = 7, n_alt = 3
   Insn 44: point = 9, n_alt = 5
   Insn 43: point = 10, n_alt = 1
   Insn 42: point = 11, n_alt = 7
   Insn 41: point = 12, n_alt = 5
   Insn 40: point = 13, n_alt = 1
   Insn 39: point = 15, n_alt = 0
   Insn 38: point = 17, n_alt = 3
   Insn 37: point = 19, n_alt = 5
   Insn 36: point = 20, n_alt = 1
   Insn 35: point = 21, n_alt = 0
   Insn 34: point = 23, n_alt = 5
   Insn 33: point = 24, n_alt = 5
   Insn 32: point = 25, n_alt = 7
  BB 3
   Insn 53: point = 27, n_alt = -1
   Insn 24: point = 27, n_alt = 10
   Insn 23: point = 29, n_alt = 5
  BB 4
   Insn 29: point = 30, n_alt = 1
  BB 2
   Insn 21: point = 31, n_alt = -1
   Insn 20: point = 31, n_alt = 0
   Insn 17: point = 32, n_alt = 2
   Insn 16: point = 34, n_alt = 5
   Insn 15: point = 35, n_alt = 7
   Insn 14: point = 36, n_alt = 1
   Insn 13: point = 38, n_alt = 4
   Insn 12: point = 40, n_alt = 5
   Insn 11: point = 41, n_alt = 7
   Insn 10: point = 42, n_alt = 0
   Insn 9: point = 44, n_alt = 5
   Insn 5: point = 45, n_alt = 7
   Insn 4: point = 45, n_alt = 7
   Insn 3: point = 45, n_alt = 7
   Insn 2: point = 45, n_alt = 7
 r113: [37..38]
 r114: [31..32]
 r115: [14..21]
 r116: [16..17]
 r117: [14..15]
 r118: [11..13]
 r119: [6..7]
 r120: [3..5]
 r121: [0..2]
 r122: [30..30] [25..27]
 r123: [41..42]
 r124: [43..44]
 r125: [39..40]
 r126: [35..36]
 r127: [33..34]
 r128: [28..29]
 r129: [22..24]
 r130: [22..23]
 r131: [18..20]
 r132: [18..19]
 r133: [11..12]
 r134: [8..10]
 r135: [8..9]
 r136: [3..4]
 r137: [0..1]
Compressing live ranges: from 45 to 37 - 82%
Ranges after the compression:
 r113: [29..30]
 r114: [23..24]
 r115: [10..15]
 r116: [12..13]
 r117: [10..11]
 r118: [8..9]
 r119: [4..5]
 r120: [2..3]
 r121: [0..1]
 r122: [22..22] [18..19]
 r123: [33..34]
 r124: [35..36]
 r125: [31..32]
 r126: [27..28]
 r127: [25..26]
 r128: [20..21]
 r129: [16..17]
 r130: [16..17]
 r131: [14..15]
 r132: [14..15]
 r133: [8..9]
 r134: [6..7]
 r135: [6..7]
 r136: [2..3]
 r137: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=40, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=40, prev_offset=40)
Can't eliminate 102 to 13 (offset=32, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=32, prev_offset=32)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 20
changing reg in insn 35
changing reg in insn 40
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 42
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 29
changing reg in insn 24
changing reg in insn 32
changing reg in insn 10
changing reg in insn 11
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 23
changing reg in insn 24
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
starting the processing of deferred insns
ending the processing of deferred insns


NVIC_DecodePriority

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={2d,2u} r2={7d,7u} r3={20d,19u} r7={1d,24u} r13={1d,6u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={2d,1u} r102={1d,1u} 
;;    total ref usage 113{52d,61u,0e} in 39{39 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 123 124 125 126 127
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 Priority+0 S4 A32])
        (reg:SI 0 r0 [ Priority ])) "../Drivers/CMSIS/Include/core_cm4.h":1889:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PriorityGroup+0 S4 A32])
        (reg:SI 1 r1 [ PriorityGroup ])) "../Drivers/CMSIS/Include/core_cm4.h":1889:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [7 pPreemptPriority+0 S4 A32])
        (reg:SI 2 r2 [ pPreemptPriority ])) "../Drivers/CMSIS/Include/core_cm4.h":1889:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:SI (reg/f:SI 7 r7) [7 pSubPriority+0 S4 A32])
        (reg:SI 3 r3 [ pSubPriority ])) "../Drivers/CMSIS/Include/core_cm4.h":1889:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 3 r3 [124])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PriorityGroup+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1890:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [123])
        (and:SI (reg:SI 3 r3 [124])
            (const_int 7 [0x7]))) "../Drivers/CMSIS/Include/core_cm4.h":1890:12 90 {*arm_andsi3_insn}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])
        (reg:SI 3 r3 [123])) "../Drivers/CMSIS/Include/core_cm4.h":1890:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1894:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (minus:SI (const_int 7 [0x7])
            (reg:SI 3 r3 [125]))) "../Drivers/CMSIS/Include/core_cm4.h":1894:31 45 {*arm_subsi3_insn}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 3 r3 [126])
                (umin:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 100 cc))
        ]) "../Drivers/CMSIS/Include/core_cm4.h":1894:23 993 {*thumb2_uminsi3}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 PreemptPriorityBits+0 S4 A64])
        (reg:SI 3 r3 [126])) "../Drivers/CMSIS/Include/core_cm4.h":1894:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 3 r3 [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1895:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 20 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (plus:SI (reg:SI 3 r3 [127])
            (const_int 4 [0x4]))) "../Drivers/CMSIS/Include/core_cm4.h":1895:44 7 {*arm_addsi3}
     (nil))
(insn 20 17 21 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 6 [0x6]))) "../Drivers/CMSIS/Include/core_cm4.h":1895:109 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":1895:109 273 {arm_cond_branch}
     (nil)
 -> 27)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 122 128
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:SI 3 r3 [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 PriorityGroupTmp+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1895:109 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 53 3 (set (reg:SI 3 r3 [orig:122 iftmp.5_10 ] [122])
        (plus:SI (reg:SI 3 r3 [128])
            (const_int -3 [0xfffffffffffffffd]))) "../Drivers/CMSIS/Include/core_cm4.h":1895:109 7 {*arm_addsi3}
     (nil))
(jump_insn 53 24 54 3 (set (pc)
        (label_ref 30)) 284 {*arm_jump}
     (nil)
 -> 30)
;;  succ:       5 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122

(barrier 54 53 27)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 122
(code_label 27 54 28 4 54 (nil) [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 3 r3 [orig:122 iftmp.5_10 ] [122])
        (const_int 0 [0])) "../Drivers/CMSIS/Include/core_cm4.h":1895:109 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 122
;; lr  def 	 115 116 117 118 119 120 121 129 130 131 132 133 134 135 136 137
(code_label 30 29 31 5 55 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 SubPriorityBits+0 S4 A32])
        (reg:SI 3 r3 [orig:122 iftmp.5_10 ] [122])) "../Drivers/CMSIS/Include/core_cm4.h":1895:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 5 (set (reg:SI 2 r2 [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 Priority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1897:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 5 (set (reg:SI 3 r3 [130])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 SubPriorityBits+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1897:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 5 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (lshiftrt:SI (reg:SI 2 r2 [129])
            (reg:SI 3 r3 [130]))) "../Drivers/CMSIS/Include/core_cm4.h":1897:33 147 {*arm_shiftsi3}
     (nil))
(insn 36 35 37 5 (set (reg:SI 1 r1 [131])
        (const_int -1 [0xffffffffffffffff])) "../Drivers/CMSIS/Include/core_cm4.h":1897:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 5 (set (reg:SI 3 r3 [132])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 PreemptPriorityBits+0 S4 A64])) "../Drivers/CMSIS/Include/core_cm4.h":1897:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 5 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ashift:SI (reg:SI 1 r1 [131])
            (reg:SI 3 r3 [132]))) "../Drivers/CMSIS/Include/core_cm4.h":1897:53 147 {*arm_shiftsi3}
     (nil))
(insn 39 38 40 5 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (not:SI (reg:SI 3 r3 [orig:116 _4 ] [116]))) "../Drivers/CMSIS/Include/core_cm4.h":1897:53 169 {*arm_one_cmplsi2}
     (nil))
(insn 40 39 41 5 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (and:SI (reg:SI 2 r2 [orig:115 _3 ] [115])
            (reg:SI 3 r3 [orig:117 _5 ] [117]))) "../Drivers/CMSIS/Include/core_cm4.h":1897:53 90 {*arm_andsi3_insn}
     (nil))
(insn 41 40 42 5 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [7 pPreemptPriority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1897:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (mem:SI (reg/f:SI 3 r3 [133]) [1 *pPreemptPriority_19(D)+0 S4 A32])
        (reg:SI 2 r2 [orig:118 _6 ] [118])) "../Drivers/CMSIS/Include/core_cm4.h":1897:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 5 (set (reg:SI 2 r2 [134])
        (const_int -1 [0xffffffffffffffff])) "../Drivers/CMSIS/Include/core_cm4.h":1898:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 5 (set (reg:SI 3 r3 [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 SubPriorityBits+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1898:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 5 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (ashift:SI (reg:SI 2 r2 [134])
            (reg:SI 3 r3 [135]))) "../Drivers/CMSIS/Include/core_cm4.h":1898:53 147 {*arm_shiftsi3}
     (nil))
(insn 46 45 47 5 (set (reg:SI 2 r2 [orig:120 _8 ] [120])
        (not:SI (reg:SI 3 r3 [orig:119 _7 ] [119]))) "../Drivers/CMSIS/Include/core_cm4.h":1898:53 169 {*arm_one_cmplsi2}
     (nil))
(insn 47 46 48 5 (set (reg:SI 3 r3 [136])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 Priority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1898:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 5 (set (reg:SI 2 r2 [orig:121 _9 ] [121])
        (and:SI (reg:SI 2 r2 [orig:120 _8 ] [120])
            (reg:SI 3 r3 [136]))) "../Drivers/CMSIS/Include/core_cm4.h":1898:53 90 {*arm_andsi3_insn}
     (nil))
(insn 49 48 50 5 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (reg/f:SI 7 r7) [7 pSubPriority+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1898:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 55 5 (set (mem:SI (reg/f:SI 3 r3 [137]) [1 *pSubPriority_21(D)+0 S4 A32])
        (reg:SI 2 r2 [orig:121 _9 ] [121])) "../Drivers/CMSIS/Include/core_cm4.h":1898:21 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       6 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1899:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:1899:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 55 50 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (const_int 0 [0]) "../Drivers/CMSIS/Include/core_cm4.h":1899:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 57 56 0 NOTE_INSN_DELETED)

;; Function __NVIC_SystemReset (__NVIC_SystemReset, funcdef_no=121, decl_uid=6500, cgraph_uid=122, symbol_order=121)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 12
	 Choosing alt 1 in insn 12:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 25: point = 0, n_alt = -1
   Insn 17: point = 0, n_alt = -1
  BB 2
   Insn 24: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -1
   Insn 13: point = 0, n_alt = 7
   Insn 12: point = 1, n_alt = 1
   Insn 11: point = 3, n_alt = 5
   Insn 10: point = 4, n_alt = 5
   Insn 9: point = 5, n_alt = 0
   Insn 8: point = 7, n_alt = 5
   Insn 7: point = 9, n_alt = 5
   Insn 23: point = 10, n_alt = -1
   Insn 5: point = 10, n_alt = -1
 r113: [8..9]
 r114: [6..7]
 r115: [2..5]
 r116: [0..4]
 r117: [0..3]
Compressing live ranges: from 10 to 6 - 60%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
 r116: [0..1]
 r117: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 12
changing reg in insn 10
changing reg in insn 13
changing reg in insn 12
changing reg in insn 11
changing reg in insn 13
starting the processing of deferred insns
ending the processing of deferred insns


__NVIC_SystemReset

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d} r1={2d,1u} r2={2d,1u,1e} r3={5d,4u} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 44{30d,13u,1e} in 13{13 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 23 2 (parallel [
            (asm_operands/v ("dsb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:271)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":271:3 -1
     (nil))
(insn 23 5 7 2 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":272:1 313 {nop}
     (nil))
(insn 7 23 8 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1943:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 12 [0xc])) [1 _1->AIRCR+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":1943:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1792 [0x700]))) "../Drivers/CMSIS/Include/core_cm4.h":1943:40 90 {*arm_andsi3_insn}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 1 r1 [orig:116 _4 ] [116])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/CMSIS/Include/core_cm4.h":1942:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 100270084 [0x5fa0004])) "../Drivers/CMSIS/Include/core_cm4.h":1942:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (ior:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (reg:SI 2 r2 [orig:115 _3 ] [115]))) "../Drivers/CMSIS/Include/core_cm4.h":1942:17 106 {*iorsi3_insn}
     (expr_list:REG_EQUAL (ior:SI (reg:SI 2 r2 [orig:115 _3 ] [115])
            (const_int 100270084 [0x5fa0004]))
        (nil)))
(insn 13 12 14 2 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:116 _4 ] [116])
                (const_int 12 [0xc])) [1 _4->AIRCR+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "../Drivers/CMSIS/Include/core_cm4.h":1942:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 24 2 (parallel [
            (asm_operands/v ("dsb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:271)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":271:3 -1
     (nil))
(insn 24 14 18 2 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":272:1 313 {nop}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              3 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 18 24 16 3 57 (nil) [1 uses])
(note 16 18 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 25 3 (parallel [
            (asm_input/v ("nop") ../Drivers/CMSIS/Include/core_cm4.h:1949)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/core_cm4.h":1949:5 -1
     (nil))
(jump_insn 25 17 26 3 (set (pc)
        (label_ref 18)) 284 {*arm_jump}
     (nil)
 -> 18)
;;  succ:       3 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 26 25 30)
(note 30 26 0 NOTE_INSN_DELETED)

;; Function SysTick_Config (SysTick_Config, funcdef_no=130, decl_uid=6550, cgraph_uid=131, symbol_order=130)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 7:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 20:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 27:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 30:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 39: point = 0, n_alt = -1
   Insn 38: point = 0, n_alt = -2
   Insn 34: point = 1, n_alt = -2
  BB 3
   Insn 41: point = 4, n_alt = -1
   Insn 13: point = 4, n_alt = 1
  BB 4
   Insn 31: point = 5, n_alt = 1
   Insn 30: point = 6, n_alt = 7
   Insn 29: point = 7, n_alt = 1
   Insn 28: point = 8, n_alt = 5
   Insn 27: point = 9, n_alt = 7
   Insn 26: point = 10, n_alt = 1
   Insn 25: point = 11, n_alt = 5
   Insn 24: point = 12, n_alt = -1
   Insn 23: point = 12, n_alt = 1
   Insn 22: point = 12, n_alt = 1
   Insn 21: point = 12, n_alt = 7
   Insn 20: point = 13, n_alt = 4
   Insn 19: point = 15, n_alt = 5
   Insn 18: point = 16, n_alt = 5
  BB 2
   Insn 11: point = 17, n_alt = -1
   Insn 10: point = 17, n_alt = 3
   Insn 7: point = 18, n_alt = 4
   Insn 6: point = 20, n_alt = 5
   Insn 2: point = 21, n_alt = 7
 r113: [17..18]
 r114: [12..16]
 r115: [12..13]
 r116: [9..11]
 r117: [6..8]
 r118: [2..5]
 r119: [0..1]
 r120: [19..20]
 r121: [14..15]
 r122: [9..10]
 r123: [6..7]
Compressing live ranges: from 21 to 16 - 76%
Ranges after the compression:
 r113: [12..13]
 r114: [8..11]
 r115: [8..9]
 r116: [6..7]
 r117: [4..5]
 r118: [2..3]
 r119: [0..1]
 r120: [14..15]
 r121: [10..11]
 r122: [6..7]
 r123: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 7
changing reg in insn 10
changing reg in insn 18
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 13
changing reg in insn 34
changing reg in insn 34
changing reg in insn 38
changing reg in insn 6
changing reg in insn 7
changing reg in insn 19
changing reg in insn 20
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
deleting insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.


SysTick_Config

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={5d,3u} r3={10d,7u} r7={1d,8u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 151{120d,31u,0e} in 23{22 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 120
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 ticks+0 S4 A32])
        (reg:SI 0 r0 [ ticks ])) "../Drivers/CMSIS/Include/core_cm4.h":2023:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 ticks+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":2024:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 10 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (plus:SI (reg:SI 3 r3 [120])
            (const_int -1 [0xffffffffffffffff]))) "../Drivers/CMSIS/Include/core_cm4.h":2024:14 7 {*arm_addsi3}
     (nil))
(insn 10 7 11 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 16777216 [0x1000000]))) "../Drivers/CMSIS/Include/core_cm4.h":2024:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "../Drivers/CMSIS/Include/core_cm4.h":2024:6 273 {arm_cond_branch}
     (nil)
 -> 16)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 41 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1 [0x1])) "../Drivers/CMSIS/Include/core_cm4.h":2026:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 41 13 42 3 (set (pc)
        (label_ref 32)) "../Drivers/CMSIS/Include/core_cm4.h":2026:12 284 {*arm_jump}
     (nil)
 -> 32)
;;  succ:       5 [always]  ../Drivers/CMSIS/Include/core_cm4.h:2026:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118

(barrier 42 41 16)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 114 115 116 117 118 121 122 123
(code_label 16 42 17 4 61 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 2 r2 [orig:114 _2 ] [114])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/CMSIS/Include/core_cm4.h":2029:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 4 (set (reg:SI 3 r3 [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 ticks+0 S4 A32])) "../Drivers/CMSIS/Include/core_cm4.h":2029:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (plus:SI (reg:SI 3 r3 [121])
            (const_int -1 [0xffffffffffffffff]))) "../Drivers/CMSIS/Include/core_cm4.h":2029:20 7 {*arm_addsi3}
     (nil))
(insn 21 20 22 4 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:114 _2 ] [114])
                (const_int 4 [0x4])) [1 _2->LOAD+0 S4 A32])
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "../Drivers/CMSIS/Include/core_cm4.h":2029:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 4 (set (reg:SI 1 r1)
        (const_int 15 [0xf])) "../Drivers/CMSIS/Include/core_cm4.h":2030:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 4 (set (reg:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) "../Drivers/CMSIS/Include/core_cm4.h":2030:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 24 23 25 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_SetPriority") [flags 0x3]  <function_decl 0000000006385200 __NVIC_SetPriority>) [0 __NVIC_SetPriority S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/CMSIS/Include/core_cm4.h":2030:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 25 24 26 4 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/CMSIS/Include/core_cm4.h":2031:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 4 (set (reg:SI 2 r2 [122])
        (const_int 0 [0])) "../Drivers/CMSIS/Include/core_cm4.h":2031:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116])
                (const_int 8 [0x8])) [1 _4->VAL+0 S4 A32])
        (reg:SI 2 r2 [122])) "../Drivers/CMSIS/Include/core_cm4.h":2031:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/CMSIS/Include/core_cm4.h":2032:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 4 (set (reg:SI 2 r2 [123])
        (const_int 7 [0x7])) "../Drivers/CMSIS/Include/core_cm4.h":2032:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 4 (set (mem/v:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117]) [1 _5->CTRL+0 S4 A32])
        (reg:SI 2 r2 [123])) "../Drivers/CMSIS/Include/core_cm4.h":2032:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 4 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 0 [0])) "../Drivers/CMSIS/Include/core_cm4.h":2035:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:2035:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/CMSIS/Include/core_cm4.h:2035:10
;;              3 [always]  ../Drivers/CMSIS/Include/core_cm4.h:2026:12
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118
;; lr  def 	 0 [r0] 119
(code_label 32 31 33 5 62 (nil) [1 uses])
(note 33 32 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 33 39 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "../Drivers/CMSIS/Include/core_cm4.h":2036:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 46 5 (use (reg/i:SI 0 r0)) "../Drivers/CMSIS/Include/core_cm4.h":2036:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 46 39 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_SetPriorityGrouping (HAL_NVIC_SetPriorityGrouping, funcdef_no=134, decl_uid=7221, cgraph_uid=139, symbol_order=138)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
starting the processing of deferred insns
ending the processing of deferred insns


HAL_NVIC_SetPriorityGrouping

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r7={1d,5u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 118{106d,12u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 PriorityGroup+0 S4 A32])
        (reg:SI 0 r0 [ PriorityGroup ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":142:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 PriorityGroup+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":147:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 7 6 10 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_SetPriorityGrouping") [flags 0x3]  <function_decl 000000000636b000 __NVIC_SetPriorityGrouping>) [0 __NVIC_SetPriorityGrouping S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":147:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:148:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:148:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":148:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 12 11 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_SetPriority (HAL_NVIC_SetPriority, funcdef_no=135, decl_uid=7225, cgraph_uid=140, symbol_order=139)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 26: point = 0, n_alt = -1
  BB 2
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -2
   Insn 20: point = 1, n_alt = -2
   Insn 19: point = 2, n_alt = 1
   Insn 18: point = 3, n_alt = -2
   Insn 17: point = 4, n_alt = -1
   Insn 16: point = 4, n_alt = 5
   Insn 15: point = 4, n_alt = 5
   Insn 14: point = 4, n_alt = 5
   Insn 13: point = 4, n_alt = 7
   Insn 12: point = 4, n_alt = -1
   Insn 11: point = 4, n_alt = 7
   Insn 10: point = 5, n_alt = 1
   Insn 4: point = 6, n_alt = 6
   Insn 3: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 7
   Insn 5: point = 9, n_alt = 7
   Insn 2: point = 9, n_alt = -2
 r113: [1..3]
 r114: [8..9]
 r115: [6..7]
 r116: [4..5]
 r117: [0..2]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r113: [0..1]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
 r117: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 18
changing reg in insn 20
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 10
changing reg in insn 11
changing reg in insn 19
changing reg in insn 21
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.


HAL_NVIC_SetPriority

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={6d,5u} r1={6d,3u} r2={6d,3u} r3={7d,3u} r7={1d,12u} r12={6d} r13={1d,6u} r14={4d} r15={3d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 309{276d,33u,0e} in 18{15 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 5 2 (set (reg:SI 3 r3 [114])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":164:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PreemptPriority+0 S4 A32])
        (reg:SI 1 r1 [ PreemptPriority ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":164:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 SubPriority+0 S4 A32])
        (reg:SI 2 r2 [ SubPriority ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":164:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 6 7 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":164:1 263 {*arm_movqi_insn}
     (nil))
(note 7 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 3 r3 [116])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":165:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 prioritygroup+0 S4 A32])
        (reg:SI 3 r3 [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":165:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 12 11 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__NVIC_GetPriorityGrouping") [flags 0x3]  <function_decl 000000000636b200 __NVIC_GetPriorityGrouping>) [0 __NVIC_GetPriorityGrouping S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":171:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 13 12 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 prioritygroup+0 S4 A32])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":171:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 SubPriority+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PreemptPriority+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 prioritygroup+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 17 16 18 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("NVIC_EncodePriority") [flags 0x3]  <function_decl 0000000006385600 NVIC_EncodePriority>) [0 NVIC_EncodePriority S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (nil))))))
(insn 18 17 19 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (reg:SI 3 r3 [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 r1)
        (reg:SI 2 r2 [orig:113 _1 ] [113])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 22 21 25 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_SetPriority") [flags 0x3]  <function_decl 0000000006385200 __NVIC_SetPriority>) [0 __NVIC_SetPriority S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":173:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:174:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:174:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 25 22 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":174:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 27 26 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_EnableIRQ (HAL_NVIC_EnableIRQ, funcdef_no=136, decl_uid=7227, cgraph_uid=141, symbol_order=140)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = -1
   Insn 9: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = 1
   Insn 4: point = 2, n_alt = 6
   Insn 3: point = 3, n_alt = 0
   Insn 2: point = 5, n_alt = -2
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


HAL_NVIC_EnableIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={4d,2u} r7={1d,5u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 122{108d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [113])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":186:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":186:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [115])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":191:3 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":191:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_EnableIRQ") [flags 0x3]  <function_decl 000000000636b400 __NVIC_EnableIRQ>) [0 __NVIC_EnableIRQ S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":191:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:192:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:192:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":192:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 15 14 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_DisableIRQ (HAL_NVIC_DisableIRQ, funcdef_no=137, decl_uid=7229, cgraph_uid=142, symbol_order=141)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = -1
   Insn 9: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = 1
   Insn 4: point = 2, n_alt = 6
   Insn 3: point = 3, n_alt = 0
   Insn 2: point = 5, n_alt = -2
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


HAL_NVIC_DisableIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={4d,2u} r7={1d,5u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 122{108d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [113])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":202:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":202:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [115])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":207:3 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":207:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_DisableIRQ") [flags 0x3]  <function_decl 000000000636b800 __NVIC_DisableIRQ>) [0 __NVIC_DisableIRQ S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":207:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:208:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:208:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":208:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 15 14 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_SystemReset (HAL_NVIC_SystemReset, funcdef_no=138, decl_uid=7231, cgraph_uid=143, symbol_order=142)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


HAL_NVIC_SystemReset

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 111{105d,6u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_SystemReset") [flags 0x3]  <function_decl 0000000006385e00 __NVIC_SystemReset>) [0 __NVIC_SystemReset S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":217:3 290 {*call_symbol}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:      
;; lr  out 	 13 [sp] 102 [sfp] 103 [afp]

(barrier 6 5 9)
(note 9 6 0 NOTE_INSN_DELETED)

;; Function HAL_SYSTICK_Config (HAL_SYSTICK_Config, funcdef_no=139, decl_uid=7233, cgraph_uid=144, symbol_order=143)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = -2
   Insn 7: point = 4, n_alt = -1
   Insn 6: point = 4, n_alt = 5
   Insn 2: point = 4, n_alt = 7
 r113: [2..3]
 r114: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.


HAL_SYSTICK_Config

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,5u} r1={2d} r2={2d} r3={3d,1u} r7={1d,4u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 122{108d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 TicksNumb+0 S4 A32])
        (reg:SI 0 r0 [ TicksNumb ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":228:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 TicksNumb+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":229:11 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 7 6 8 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("SysTick_Config") [flags 0x3]  <function_decl 000000000639f000 SysTick_Config>) [0 SysTick_Config S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":229:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 8 7 15 2 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":229:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 8 16 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":230:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 18 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":230:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 18 16 0 NOTE_INSN_DELETED)

;; Function HAL_MPU_Disable (HAL_MPU_Disable, funcdef_no=140, decl_uid=7258, cgraph_uid=145, symbol_order=144)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 10:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 19: point = 0, n_alt = -1
  BB 2
   Insn 14: point = 0, n_alt = 7
   Insn 13: point = 1, n_alt = 1
   Insn 12: point = 2, n_alt = 5
   Insn 11: point = 3, n_alt = 7
   Insn 10: point = 4, n_alt = 2
   Insn 9: point = 6, n_alt = 5
   Insn 8: point = 7, n_alt = 5
   Insn 7: point = 9, n_alt = 5
   Insn 17: point = 10, n_alt = -1
   Insn 5: point = 10, n_alt = -1
 r113: [8..9]
 r114: [5..7]
 r115: [3..6]
 r116: [3..4]
 r117: [0..2]
 r118: [0..1]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r113: [6..7]
 r114: [4..5]
 r115: [2..5]
 r116: [2..3]
 r117: [0..1]
 r118: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
starting the processing of deferred insns
ending the processing of deferred insns


HAL_MPU_Disable

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={3d,2u} r3={5d,4u} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 43{30d,13u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 17 2 (parallel [
            (asm_operands/v ("dmb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:282)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":282:3 -1
     (nil))
(insn 17 5 7 2 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":283:1 313 {nop}
     (nil))
(insn 7 17 8 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":262:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 36 [0x24])) [1 _1->SHCSR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":262:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":262:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int -65537 [0xfffffffffffeffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":262:14 90 {*arm_andsi3_insn}
     (nil))
(insn 11 10 12 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 36 [0x24])) [1 _3->SHCSR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":262:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":265:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 2 r2 [118])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":265:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 18 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 4 [0x4])) [1 _5->CTRL+0 S4 A32])
        (reg:SI 2 r2 [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":265:13 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:266:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:266:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 18 14 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 23 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":266:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 23 19 0 NOTE_INSN_DELETED)

;; Function HAL_MPU_Enable (HAL_MPU_Enable, funcdef_no=141, decl_uid=7256, cgraph_uid=146, symbol_order=145)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 9:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 24: point = 0, n_alt = -1
  BB 2
   Insn 22: point = 0, n_alt = -1
   Insn 17: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = 7
   Insn 13: point = 1, n_alt = 0
   Insn 12: point = 3, n_alt = 5
   Insn 11: point = 4, n_alt = 5
   Insn 10: point = 6, n_alt = 5
   Insn 9: point = 7, n_alt = 7
   Insn 8: point = 8, n_alt = 0
   Insn 7: point = 10, n_alt = 5
   Insn 6: point = 11, n_alt = 5
   Insn 2: point = 12, n_alt = 7
 r113: [7..11]
 r114: [7..8]
 r115: [5..6]
 r116: [2..4]
 r117: [0..3]
 r118: [0..1]
 r119: [9..10]
Compressing live ranges: from 12 to 10 - 83%
Ranges after the compression:
 r113: [6..9]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
 r117: [0..3]
 r118: [0..1]
 r119: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 6
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 7
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns


HAL_MPU_Enable

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,2u} r3={6d,5u} r7={1d,5u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 48{31d,17u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 MPU_Control+0 S4 A32])
        (reg:SI 0 r0 [ MPU_Control ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":280:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":282:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 MPU_Control+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":282:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (ior:SI (reg:SI 3 r3 [119])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":282:27 106 {*iorsi3_insn}
     (nil))
(insn 9 8 10 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:113 _1 ] [113])
                (const_int 4 [0x4])) [1 _1->CTRL+0 S4 A32])
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":282:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":285:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:115 _3 ] [115])
                (const_int 36 [0x24])) [1 _3->SHCSR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":285:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 2 r2 [orig:117 _5 ] [117])
        (const_int -536810240 [0xffffffffe000ed00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":285:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (ior:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":285:14 106 {*iorsi3_insn}
     (nil))
(insn 14 13 15 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:117 _5 ] [117])
                (const_int 36 [0x24])) [1 _5->SHCSR+0 S4 A32])
        (reg:SI 3 r3 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":285:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 21 2 (parallel [
            (asm_operands/v ("dsb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:271)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":271:3 -1
     (nil))
(insn 21 15 17 2 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":272:1 313 {nop}
     (nil))
(insn 17 21 22 2 (parallel [
            (asm_operands/v ("isb 0xF") ("") 0 []
                 []
                 [] ../Drivers/CMSIS/Include/cmsis_gcc.h:260)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/CMSIS/Include/cmsis_gcc.h":260:3 -1
     (nil))
(insn 22 17 23 2 (const_int 0 [0]) "../Drivers/CMSIS/Include/cmsis_gcc.h":261:1 313 {nop}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:290:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:290:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":290:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 28 24 0 NOTE_INSN_DELETED)

;; Function HAL_MPU_EnableRegion (HAL_MPU_EnableRegion, funcdef_no=142, decl_uid=7260, cgraph_uid=147, symbol_order=146)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 17: point = 0, n_alt = -1
  BB 2
   Insn 13: point = 0, n_alt = 7
   Insn 12: point = 1, n_alt = 0
   Insn 11: point = 3, n_alt = 5
   Insn 10: point = 4, n_alt = 5
   Insn 9: point = 6, n_alt = 5
   Insn 8: point = 7, n_alt = 7
   Insn 7: point = 8, n_alt = 5
   Insn 6: point = 9, n_alt = 5
   Insn 2: point = 10, n_alt = 7
 r113: [7..9]
 r114: [5..6]
 r115: [2..4]
 r116: [0..3]
 r117: [0..1]
 r118: [7..8]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r113: [6..7]
 r114: [4..5]
 r115: [2..3]
 r116: [0..3]
 r117: [0..1]
 r118: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns


HAL_MPU_EnableRegion

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,2u} r3={5d,4u} r7={1d,5u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 46{30d,16u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RegionNumber+0 S4 A32])
        (reg:SI 0 r0 [ RegionNumber ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":297:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":302:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RegionNumber+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":302:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:113 _1 ] [113])
                (const_int 8 [0x8])) [1 _1->RNR+0 S4 A32])
        (reg:SI 3 r3 [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":302:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":305:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114])
                (const_int 16 [0x10])) [1 _2->RASR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":305:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:116 _4 ] [116])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":305:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (ior:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":305:3 106 {*iorsi3_insn}
     (nil))
(insn 13 12 16 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:116 _4 ] [116])
                (const_int 16 [0x10])) [1 _4->RASR+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":305:3 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:306:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:306:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 16 13 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 21 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":306:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 21 17 0 NOTE_INSN_DELETED)

;; Function HAL_MPU_DisableRegion (HAL_MPU_DisableRegion, funcdef_no=143, decl_uid=7262, cgraph_uid=148, symbol_order=147)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 12:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 17: point = 0, n_alt = -1
  BB 2
   Insn 13: point = 0, n_alt = 7
   Insn 12: point = 1, n_alt = 2
   Insn 11: point = 3, n_alt = 5
   Insn 10: point = 4, n_alt = 5
   Insn 9: point = 6, n_alt = 5
   Insn 8: point = 7, n_alt = 7
   Insn 7: point = 8, n_alt = 5
   Insn 6: point = 9, n_alt = 5
   Insn 2: point = 10, n_alt = 7
 r113: [7..9]
 r114: [5..6]
 r115: [2..4]
 r116: [0..3]
 r117: [0..1]
 r118: [7..8]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r113: [6..7]
 r114: [4..5]
 r115: [2..3]
 r116: [0..3]
 r117: [0..1]
 r118: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
changing reg in insn 7
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns


HAL_MPU_DisableRegion

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,2u} r3={5d,4u} r7={1d,5u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 46{30d,16u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RegionNumber+0 S4 A32])
        (reg:SI 0 r0 [ RegionNumber ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":313:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 2 r2 [orig:113 _1 ] [113])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":318:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RegionNumber+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":318:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:113 _1 ] [113])
                (const_int 8 [0x8])) [1 _1->RNR+0 S4 A32])
        (reg:SI 3 r3 [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":318:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":321:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114])
                (const_int 16 [0x10])) [1 _2->RASR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":321:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 2 r2 [orig:116 _4 ] [116])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":321:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (and:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":321:3 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 16 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:116 _4 ] [116])
                (const_int 16 [0x10])) [1 _4->RASR+0 S4 A32])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":321:3 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:322:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:322:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 16 13 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 21 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":322:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 21 17 0 NOTE_INSN_DELETED)

;; Function HAL_MPU_ConfigRegion (HAL_MPU_ConfigRegion, funcdef_no=144, decl_uid=7264, cgraph_uid=149, symbol_order=148)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 14:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 19:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 58
	 Choosing alt 1 in insn 58:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 68: point = 0, n_alt = -1
  BB 2
   Insn 64: point = 0, n_alt = 7
   Insn 63: point = 1, n_alt = 1
   Insn 62: point = 3, n_alt = 5
   Insn 61: point = 4, n_alt = -2
   Insn 60: point = 6, n_alt = 1
   Insn 59: point = 8, n_alt = 5
   Insn 58: point = 9, n_alt = 1
   Insn 57: point = 11, n_alt = 1
   Insn 56: point = 13, n_alt = -2
   Insn 55: point = 15, n_alt = 1
   Insn 54: point = 17, n_alt = 5
   Insn 53: point = 18, n_alt = 1
   Insn 52: point = 20, n_alt = 1
   Insn 51: point = 22, n_alt = -2
   Insn 50: point = 24, n_alt = 1
   Insn 49: point = 26, n_alt = 5
   Insn 48: point = 27, n_alt = 1
   Insn 47: point = 29, n_alt = 1
   Insn 46: point = 31, n_alt = -2
   Insn 45: point = 33, n_alt = 1
   Insn 44: point = 35, n_alt = 5
   Insn 43: point = 36, n_alt = 1
   Insn 42: point = 38, n_alt = 1
   Insn 41: point = 40, n_alt = -2
   Insn 40: point = 42, n_alt = 1
   Insn 39: point = 44, n_alt = 5
   Insn 38: point = 45, n_alt = 1
   Insn 37: point = 47, n_alt = 1
   Insn 36: point = 49, n_alt = -2
   Insn 35: point = 51, n_alt = 1
   Insn 34: point = 53, n_alt = 5
   Insn 33: point = 54, n_alt = 1
   Insn 32: point = 56, n_alt = 1
   Insn 31: point = 58, n_alt = -2
   Insn 30: point = 60, n_alt = 1
   Insn 29: point = 62, n_alt = 5
   Insn 28: point = 63, n_alt = 1
   Insn 27: point = 65, n_alt = 1
   Insn 26: point = 67, n_alt = -2
   Insn 25: point = 69, n_alt = 1
   Insn 24: point = 71, n_alt = 5
   Insn 23: point = 72, n_alt = 1
   Insn 22: point = 74, n_alt = -2
   Insn 21: point = 76, n_alt = 1
   Insn 20: point = 78, n_alt = 5
   Insn 19: point = 79, n_alt = 7
   Insn 18: point = 80, n_alt = 5
   Insn 17: point = 82, n_alt = 5
   Insn 16: point = 83, n_alt = 5
   Insn 15: point = 84, n_alt = 7
   Insn 14: point = 85, n_alt = 2
   Insn 13: point = 87, n_alt = 5
   Insn 12: point = 88, n_alt = 5
   Insn 11: point = 90, n_alt = 5
   Insn 10: point = 91, n_alt = 7
   Insn 9: point = 92, n_alt = -2
   Insn 8: point = 94, n_alt = 5
   Insn 7: point = 95, n_alt = 1
   Insn 6: point = 97, n_alt = 5
   Insn 2: point = 98, n_alt = 7
 r113: [93..95]
 r114: [91..94]
 r115: [91..92]
 r116: [89..90]
 r117: [86..88]
 r118: [84..87]
 r119: [84..85]
 r120: [79..83]
 r121: [79..80]
 r122: [75..76]
 r123: [73..74]
 r124: [64..72]
 r125: [68..69]
 r126: [66..67]
 r127: [64..65]
 r128: [55..63]
 r129: [59..60]
 r130: [57..58]
 r131: [55..56]
 r132: [46..54]
 r133: [50..51]
 r134: [48..49]
 r135: [46..47]
 r136: [37..45]
 r137: [41..42]
 r138: [39..40]
 r139: [37..38]
 r140: [28..36]
 r141: [32..33]
 r142: [30..31]
 r143: [28..29]
 r144: [19..27]
 r145: [23..24]
 r146: [21..22]
 r147: [19..20]
 r148: [10..18]
 r149: [14..15]
 r150: [12..13]
 r151: [10..11]
 r152: [2..9]
 r153: [5..6]
 r154: [2..4]
 r155: [0..3]
 r156: [0..1]
 r157: [96..97]
 r158: [81..82]
 r159: [77..78]
 r160: [70..71]
 r161: [61..62]
 r162: [52..53]
 r163: [43..44]
 r164: [34..35]
 r165: [25..26]
 r166: [16..17]
 r167: [7..8]
Compressing live ranges: from 98 to 86 - 87%
Ranges after the compression:
 r113: [82..83]
 r114: [80..83]
 r115: [80..81]
 r116: [78..79]
 r117: [76..77]
 r118: [74..77]
 r119: [74..75]
 r120: [70..73]
 r121: [70..71]
 r122: [66..67]
 r123: [64..65]
 r124: [56..63]
 r125: [60..61]
 r126: [58..59]
 r127: [56..57]
 r128: [48..55]
 r129: [52..53]
 r130: [50..51]
 r131: [48..49]
 r132: [40..47]
 r133: [44..45]
 r134: [42..43]
 r135: [40..41]
 r136: [32..39]
 r137: [36..37]
 r138: [34..35]
 r139: [32..33]
 r140: [24..31]
 r141: [28..29]
 r142: [26..27]
 r143: [24..25]
 r144: [16..23]
 r145: [20..21]
 r146: [18..19]
 r147: [16..17]
 r148: [8..15]
 r149: [12..13]
 r150: [10..11]
 r151: [8..9]
 r152: [2..7]
 r153: [4..5]
 r154: [2..3]
 r155: [0..3]
 r156: [0..1]
 r157: [84..85]
 r158: [72..73]
 r159: [68..69]
 r160: [62..63]
 r161: [54..55]
 r162: [46..47]
 r163: [38..39]
 r164: [30..31]
 r165: [22..23]
 r166: [14..15]
 r167: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 28
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 33
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 38
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 43
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 48
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 53
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 63
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 63
changing reg in insn 62
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 6
changing reg in insn 7
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 44
changing reg in insn 45
changing reg in insn 49
changing reg in insn 50
changing reg in insn 54
changing reg in insn 55
changing reg in insn 59
changing reg in insn 60
deleting insn with uid = 9.
deleting insn with uid = 22.
deleting insn with uid = 26.
deleting insn with uid = 31.
deleting insn with uid = 36.
deleting insn with uid = 41.
deleting insn with uid = 46.
deleting insn with uid = 51.
deleting insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_MPU_ConfigRegion

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={2d,1u} r2={14d,13u} r3={33d,32u} r7={1d,15u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 136{70d,66u,0e} in 52{52 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])
        (reg:SI 0 r0 [ MPU_Init ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":331:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":345:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [157])
                    (const_int 1 [0x1])) [0 MPU_Init_46(D)->Number+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":345:22 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 8 7 10 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":345:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 8 11 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114])
                (const_int 8 [0x8])) [1 _2->RNR+0 S4 A32])
        (reg:SI 2 r2 [orig:115 _3 ] [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":345:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":348:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116])
                (const_int 16 [0x10])) [1 _4->RASR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":348:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 2 r2 [orig:118 _6 ] [118])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":348:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":348:3 90 {*arm_andsi3_insn}
     (nil))
(insn 15 14 16 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:118 _6 ] [118])
                (const_int 16 [0x10])) [1 _6->RASR+0 S4 A32])
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":348:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 2 r2 [orig:120 _8 ] [120])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":351:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":351:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 2 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 4 [0x4])) [1 MPU_Init_46(D)->BaseAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":351:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:120 _8 ] [120])
                (const_int 12 [0xc])) [1 _8->RBAR+0 S4 A32])
        (reg:SI 3 r3 [orig:121 _9 ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":351:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":352:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 23 2 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [159])
                    (const_int 12 [0xc])) [0 MPU_Init_46(D)->DisableExec+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":352:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 23 21 24 2 (set (reg:SI 2 r2 [orig:124 _12 ] [124])
        (ashift:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 28 [0x1c]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":352:60 147 {*arm_shiftsi3}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 3 r3 [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":353:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 27 2 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [160])
                    (const_int 11 [0xb])) [0 MPU_Init_46(D)->AccessPermission+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":353:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 27 25 28 2 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (ashift:SI (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 24 [0x18]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":353:60 147 {*arm_shiftsi3}
     (nil))
(insn 28 27 29 2 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (ior:SI (reg:SI 2 r2 [orig:124 _12 ] [124])
            (reg:SI 3 r3 [orig:127 _15 ] [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":352:82 106 {*iorsi3_insn}
     (nil))
(insn 29 28 30 2 (set (reg/f:SI 3 r3 [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":354:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 32 2 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [161])
                    (const_int 10 [0xa])) [0 MPU_Init_46(D)->TypeExtField+0 S1 A16]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":354:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 32 30 33 2 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (ashift:SI (reg:SI 3 r3 [orig:130 _18 ] [130])
            (const_int 19 [0x13]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":354:60 147 {*arm_shiftsi3}
     (nil))
(insn 33 32 34 2 (set (reg:SI 2 r2 [orig:132 _20 ] [132])
        (ior:SI (reg:SI 2 r2 [orig:128 _16 ] [128])
            (reg:SI 3 r3 [orig:131 _19 ] [131]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":353:82 106 {*iorsi3_insn}
     (nil))
(insn 34 33 35 2 (set (reg/f:SI 3 r3 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":355:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 37 2 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [162])
                    (const_int 13 [0xd])) [0 MPU_Init_46(D)->IsShareable+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":355:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 37 35 38 2 (set (reg:SI 3 r3 [orig:135 _23 ] [135])
        (ashift:SI (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 18 [0x12]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":355:60 147 {*arm_shiftsi3}
     (nil))
(insn 38 37 39 2 (set (reg:SI 2 r2 [orig:136 _24 ] [136])
        (ior:SI (reg:SI 2 r2 [orig:132 _20 ] [132])
            (reg:SI 3 r3 [orig:135 _23 ] [135]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":354:82 106 {*iorsi3_insn}
     (nil))
(insn 39 38 40 2 (set (reg/f:SI 3 r3 [163])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":356:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 42 2 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [163])
                    (const_int 14 [0xe])) [0 MPU_Init_46(D)->IsCacheable+0 S1 A16]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":356:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 42 40 43 2 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (ashift:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 17 [0x11]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":356:60 147 {*arm_shiftsi3}
     (nil))
(insn 43 42 44 2 (set (reg:SI 2 r2 [orig:140 _28 ] [140])
        (ior:SI (reg:SI 2 r2 [orig:136 _24 ] [136])
            (reg:SI 3 r3 [orig:139 _27 ] [139]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":355:82 106 {*iorsi3_insn}
     (nil))
(insn 44 43 45 2 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":357:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 47 2 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [164])
                    (const_int 15 [0xf])) [0 MPU_Init_46(D)->IsBufferable+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":357:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 47 45 48 2 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (ashift:SI (reg:SI 3 r3 [orig:142 _30 ] [142])
            (const_int 16 [0x10]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":357:60 147 {*arm_shiftsi3}
     (nil))
(insn 48 47 49 2 (set (reg:SI 2 r2 [orig:144 _32 ] [144])
        (ior:SI (reg:SI 2 r2 [orig:140 _28 ] [140])
            (reg:SI 3 r3 [orig:143 _31 ] [143]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":356:82 106 {*iorsi3_insn}
     (nil))
(insn 49 48 50 2 (set (reg/f:SI 3 r3 [165])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":358:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 52 2 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [165])
                    (const_int 9 [0x9])) [0 MPU_Init_46(D)->SubRegionDisable+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":358:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 52 50 53 2 (set (reg:SI 3 r3 [orig:147 _35 ] [147])
        (ashift:SI (reg:SI 3 r3 [orig:146 _34 ] [146])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":358:60 147 {*arm_shiftsi3}
     (nil))
(insn 53 52 54 2 (set (reg:SI 2 r2 [orig:148 _36 ] [148])
        (ior:SI (reg:SI 2 r2 [orig:144 _32 ] [144])
            (reg:SI 3 r3 [orig:147 _35 ] [147]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":357:82 106 {*iorsi3_insn}
     (nil))
(insn 54 53 55 2 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":359:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 57 2 (set (reg:SI 3 r3 [orig:149 _37 ] [149])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [166])
                    (const_int 8 [0x8])) [0 MPU_Init_46(D)->Size+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":359:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 57 55 58 2 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (ashift:SI (reg:SI 3 r3 [orig:150 _38 ] [150])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":359:60 147 {*arm_shiftsi3}
     (nil))
(insn 58 57 59 2 (set (reg:SI 3 r3 [orig:152 _40 ] [152])
        (ior:SI (reg:SI 3 r3 [orig:151 _39 ] [151])
            (reg:SI 2 r2 [orig:148 _36 ] [148]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":358:82 106 {*iorsi3_insn}
     (nil))
(insn 59 58 60 2 (set (reg/f:SI 2 r2 [167])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 MPU_Init+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":360:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 2 (set (reg:SI 2 r2 [orig:153 _41 ] [153])
        (zero_extend:SI (mem:QI (reg/f:SI 2 r2 [167]) [0 MPU_Init_46(D)->Enable+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":360:34 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 61 60 62 2 (set (reg:SI 1 r1 [orig:154 _42 ] [154])
        (reg:SI 2 r2 [orig:153 _41 ] [153])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":360:60 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 2 (set (reg/f:SI 2 r2 [orig:155 _43 ] [155])
        (const_int -536810096 [0xffffffffe000ed90])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":352:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 2 (set (reg:SI 3 r3 [orig:156 _44 ] [156])
        (ior:SI (reg:SI 3 r3 [orig:152 _40 ] [152])
            (reg:SI 1 r1 [orig:154 _42 ] [154]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":359:82 106 {*iorsi3_insn}
     (nil))
(insn 64 63 67 2 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:155 _43 ] [155])
                (const_int 16 [0x10])) [1 _43->RASR+0 S4 A32])
        (reg:SI 3 r3 [orig:156 _44 ] [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":352:13 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:361:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:361:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 67 64 68 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 74 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":361:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 74 68 0 NOTE_INSN_DELETED)

;; Function HAL_CORTEX_ClearEvent (HAL_CORTEX_ClearEvent, funcdef_no=145, decl_uid=7266, cgraph_uid=150, symbol_order=149)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


HAL_CORTEX_ClearEvent

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 31{24d,7u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_input/v ("sev") ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:370)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":370:3 -1
     (nil))
(insn 6 5 9 2 (parallel [
            (asm_operands/v ("wfe") ("") 0 []
                 []
                 [] ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:371)
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":371:3 -1
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:372:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:372:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 9 6 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":372:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 11 10 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_GetPriorityGrouping (HAL_NVIC_GetPriorityGrouping, funcdef_no=146, decl_uid=7235, cgraph_uid=151, symbol_order=150)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 14: point = 0, n_alt = -1
   Insn 13: point = 0, n_alt = -2
   Insn 9: point = 1, n_alt = -2
   Insn 6: point = 3, n_alt = -2
   Insn 5: point = 4, n_alt = -1
 r113: [2..3]
 r114: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 9
changing reg in insn 9
changing reg in insn 13
deleting insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.


HAL_NVIC_GetPriorityGrouping

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={3d,1u} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 117{107d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__NVIC_GetPriorityGrouping") [flags 0x3]  <function_decl 000000000636b200 __NVIC_GetPriorityGrouping>) [0 __NVIC_GetPriorityGrouping S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":381:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 6 5 13 2 (set (reg:SI 3 r3 [orig:113 _3 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":381:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 6 14 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":382:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 16 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":382:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 16 14 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_GetPriority (HAL_NVIC_GetPriority, funcdef_no=147, decl_uid=7240, cgraph_uid=152, symbol_order=151)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_extendqisi_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 23: point = 0, n_alt = -1
  BB 2
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 17: point = 1, n_alt = 5
   Insn 16: point = 1, n_alt = 5
   Insn 15: point = 1, n_alt = 5
   Insn 14: point = 1, n_alt = -2
   Insn 13: point = 2, n_alt = -1
   Insn 12: point = 2, n_alt = -2
   Insn 11: point = 3, n_alt = 1
   Insn 4: point = 4, n_alt = 6
   Insn 3: point = 5, n_alt = 0
   Insn 7: point = 7, n_alt = 7
   Insn 6: point = 7, n_alt = 7
   Insn 5: point = 7, n_alt = 7
   Insn 2: point = 7, n_alt = -2
 r113: [0..1]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
Compressing live ranges: from 8 to 8 - 100%
Ranges after the compression:
 r113: [0..1]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 14
changing reg in insn 18
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 11
changing reg in insn 12
deleting insn with uid = 2.
deleting insn with uid = 14.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_NVIC_GetPriority

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,3u} r1={4d,2u} r2={4d,2u} r3={6d,4u} r7={1d,11u} r12={4d} r13={1d,5u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 220{192d,28u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116
(note 9 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 9 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PriorityGroup+0 S4 A32])
        (reg:SI 1 r1 [ PriorityGroup ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":406:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [7 pPreemptPriority+0 S4 A32])
        (reg:SI 2 r2 [ pPreemptPriority ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":406:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 3 2 (set (mem/f/c:SI (reg/f:SI 7 r7) [7 pSubPriority+0 S4 A32])
        (reg:SI 3 r3 [ pSubPriority ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":406:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 7 4 2 (set (reg:QI 3 r3 [115])
        (reg:QI 0 r0 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":406:1 263 {*arm_movqi_insn}
     (nil))
(insn 4 3 8 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":406:1 263 {*arm_movqi_insn}
     (nil))
(note 8 4 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 3 r3 [116])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 13 12 15 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__NVIC_GetPriority") [flags 0x3]  <function_decl 0000000006385400 __NVIC_GetPriority>) [0 __NVIC_GetPriority S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 15 13 16 2 (set (reg:SI 3 r3)
        (mem/f/c:SI (reg/f:SI 7 r7) [7 pSubPriority+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 2 r2)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [7 pPreemptPriority+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 19 2 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 PriorityGroup+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 19 17 22 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("NVIC_DecodePriority") [flags 0x3]  <function_decl 0000000006385800 NVIC_DecodePriority>) [0 NVIC_DecodePriority S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":410:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:411:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:411:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 22 19 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":411:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 24 23 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_SetPendingIRQ (HAL_NVIC_SetPendingIRQ, funcdef_no=148, decl_uid=7244, cgraph_uid=153, symbol_order=152)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = -1
   Insn 9: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = 1
   Insn 4: point = 2, n_alt = 6
   Insn 3: point = 3, n_alt = 0
   Insn 2: point = 5, n_alt = -2
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


HAL_NVIC_SetPendingIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={4d,2u} r7={1d,5u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 122{108d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [113])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":421:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":421:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [115])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":426:3 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":426:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_SetPendingIRQ") [flags 0x3]  <function_decl 000000000636bc00 __NVIC_SetPendingIRQ>) [0 __NVIC_SetPendingIRQ S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":426:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:427:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:427:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":427:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 15 14 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_GetPendingIRQ (HAL_NVIC_GetPendingIRQ, funcdef_no=149, decl_uid=7242, cgraph_uid=154, symbol_order=153)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 14: point = 1, n_alt = -2
   Insn 11: point = 3, n_alt = -2
   Insn 10: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = -2
   Insn 8: point = 5, n_alt = 1
   Insn 4: point = 6, n_alt = 6
   Insn 3: point = 7, n_alt = 0
   Insn 2: point = 9, n_alt = -2
 r113: [2..3]
 r114: [0..1]
 r115: [8..9]
 r116: [6..7]
 r117: [4..5]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]
 r115: [8..9]
 r116: [6..7]
 r117: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 14
changing reg in insn 14
changing reg in insn 18
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 3.
deleting insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


HAL_NVIC_GetPendingIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,5u} r1={2d} r2={2d} r3={5d,3u} r7={1d,4u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 126{110d,16u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [115])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":439:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":439:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":444:10 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":444:10 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__NVIC_GetPendingIRQ") [flags 0x3]  <function_decl 000000000636ba00 __NVIC_GetPendingIRQ>) [0 __NVIC_GetPendingIRQ S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":444:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 18 2 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":444:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 11 19 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":445:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 21 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":445:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 21 19 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_ClearPendingIRQ (HAL_NVIC_ClearPendingIRQ, funcdef_no=150, decl_uid=7246, cgraph_uid=155, symbol_order=154)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = -1
   Insn 9: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = 1
   Insn 4: point = 2, n_alt = 6
   Insn 3: point = 3, n_alt = 0
   Insn 2: point = 5, n_alt = -2
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


HAL_NVIC_ClearPendingIRQ

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={4d,2u} r7={1d,5u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 122{108d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [113])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":455:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":455:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [115])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":460:3 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":460:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 13 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__NVIC_ClearPendingIRQ") [flags 0x3]  <function_decl 000000000636be00 __NVIC_ClearPendingIRQ>) [0 __NVIC_ClearPendingIRQ S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":460:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:461:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:461:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":461:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 15 14 0 NOTE_INSN_DELETED)

;; Function HAL_NVIC_GetActive (HAL_NVIC_GetActive, funcdef_no=151, decl_uid=7248, cgraph_uid=156, symbol_order=155)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_extendqisi_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 14: point = 1, n_alt = -2
   Insn 11: point = 3, n_alt = -2
   Insn 10: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = -2
   Insn 8: point = 5, n_alt = 1
   Insn 4: point = 6, n_alt = 6
   Insn 3: point = 7, n_alt = 0
   Insn 2: point = 9, n_alt = -2
 r113: [2..3]
 r114: [0..1]
 r115: [8..9]
 r116: [6..7]
 r117: [4..5]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]
 r115: [8..9]
 r116: [6..7]
 r117: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 14
changing reg in insn 14
changing reg in insn 18
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 3.
deleting insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


HAL_NVIC_GetActive

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,5u} r1={2d} r2={2d} r3={5d,3u} r7={1d,4u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 126{110d,16u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [115])
        (reg:SI 0 r0 [ IRQn ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":472:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 7 [0x7])) [0 IRQn+0 S1 A8])
        (reg:QI 3 r3 [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":472:1 263 {*arm_movqi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [117])
        (sign_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 7 [0x7])) [0 IRQn+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":477:10 1027 {*thumb2_extendqisi_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":477:10 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 10 9 11 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__NVIC_GetActive") [flags 0x3]  <function_decl 0000000006385000 __NVIC_GetActive>) [0 __NVIC_GetActive S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":477:10 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:QI (use (reg:SI 0 r0))
            (nil))))
(insn 11 10 18 2 (set (reg:SI 3 r3 [orig:113 _4 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":477:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 11 19 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":478:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 21 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":478:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 21 19 0 NOTE_INSN_DELETED)

;; Function HAL_SYSTICK_CLKSourceConfig (HAL_SYSTICK_CLKSourceConfig, funcdef_no=152, decl_uid=7250, cgraph_uid=157, symbol_order=156)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 22:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 23:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 31: point = 0, n_alt = -1
  BB 3
   Insn 28: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = 7
   Insn 13: point = 1, n_alt = 0
   Insn 12: point = 3, n_alt = 5
   Insn 11: point = 4, n_alt = 5
   Insn 10: point = 6, n_alt = 5
  BB 4
   Insn 23: point = 7, n_alt = 7
   Insn 22: point = 8, n_alt = 2
   Insn 21: point = 10, n_alt = 5
   Insn 20: point = 11, n_alt = 5
   Insn 19: point = 13, n_alt = 5
  BB 2
   Insn 8: point = 14, n_alt = -1
   Insn 7: point = 14, n_alt = 0
   Insn 6: point = 15, n_alt = 5
   Insn 2: point = 16, n_alt = 7
 r113: [5..6]
 r114: [2..4]
 r115: [0..3]
 r116: [0..1]
 r117: [12..13]
 r118: [9..11]
 r119: [7..10]
 r120: [7..8]
 r121: [14..15]
Compressing live ranges: from 16 to 14 - 87%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..3]
 r116: [0..1]
 r117: [10..11]
 r118: [8..9]
 r119: [6..9]
 r120: [6..7]
 r121: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 22
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 23
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


HAL_SYSTICK_CLKSourceConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,2u} r3={8d,7u} r7={1d,8u} r13={1d,6u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 60{34d,26u,0e} in 16{16 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 121
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 CLKSource+0 S4 A32])
        (reg:SI 0 r0 [ CLKSource ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":489:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 CLKSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":492:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [121])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":492:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":492:6 273 {arm_cond_branch}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":494:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 _1->CTRL+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":494:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":494:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ior:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":494:19 106 {*iorsi3_insn}
     (nil))
(insn 14 13 28 3 (set (mem/v:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115]) [1 _3->CTRL+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":494:19 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 28 14 29 3 (set (pc)
        (label_ref:SI 32)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":500:1 284 {*arm_jump}
     (nil)
 -> 32)
;;  succ:       6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:500:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 29 28 17)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 117 118 119 120
(code_label 17 29 18 4 98 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":498:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 4 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117]) [1 _5->CTRL+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":498:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 2 r2 [orig:119 _7 ] [119])
        (const_int -536813552 [0xffffffffe000e010])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":498:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 4 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int -5 [0xfffffffffffffffb]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":498:19 90 {*arm_andsi3_insn}
     (nil))
(insn 23 22 32 4 (set (mem/v:SI (reg/f:SI 2 r2 [orig:119 _7 ] [119]) [1 _7->CTRL+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":498:19 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       6 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:500:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:500:1
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:500:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 32 23 30 6 100 (nil) [1 uses])
(note 30 32 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 26 6 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":500:1 313 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 26 31 27 5 97 (nil) [0 uses])
(note 27 26 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 37 27 0 NOTE_INSN_DELETED)

;; Function HAL_SYSTICK_IRQHandler (HAL_SYSTICK_IRQHandler, funcdef_no=153, decl_uid=7252, cgraph_uid=158, symbol_order=157)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


HAL_SYSTICK_IRQHandler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r7={1d,3u} r12={2d} r13={1d,4u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 113{105d,8u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 8 2 (parallel [
            (call (mem:SI (symbol_ref/i:SI ("HAL_SYSTICK_Callback") [flags 0x3]  <function_decl 00000000067ccd00 HAL_SYSTICK_Callback>) [0 HAL_SYSTICK_Callback S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":508:3 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:509:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:509:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 8 5 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":509:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 10 9 0 NOTE_INSN_DELETED)

;; Function HAL_SYSTICK_Callback (HAL_SYSTICK_Callback, funcdef_no=154, decl_uid=7254, cgraph_uid=159, symbol_order=158)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


HAL_SYSTICK_Callback

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 31{24d,7u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:520:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c:520:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 7 2 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c":520:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 9 8 0 NOTE_INSN_DELETED)
