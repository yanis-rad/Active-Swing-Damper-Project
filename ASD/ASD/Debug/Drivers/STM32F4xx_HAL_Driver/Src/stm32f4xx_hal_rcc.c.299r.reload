
;; Function HAL_RCC_DeInit (HAL_RCC_DeInit, funcdef_no=134, decl_uid=6987, cgraph_uid=139, symbol_order=138)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 1
 r113: [2..3]
 r114: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_DeInit

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={2d,1u} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 34{26d,8u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 12 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":202:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 5 13 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":203:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 15 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":203:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 15 13 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_OscConfig (HAL_RCC_OscConfig, funcdef_no=135, decl_uid=6989, cgraph_uid=140, symbol_order=139)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 69:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 76:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 82:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 83:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 85:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 88:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 93:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 96:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 97:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 101:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 102:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 105:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 106:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 111:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 117:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 141:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 147:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 159:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 160:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 167:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 169:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 173:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 174:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 175:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 179:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 180:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 185:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 186:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 192:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 193:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 194:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 198:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 199:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 203:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 208:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 209:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 210:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 211:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 212:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 214:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 215
	 Choosing alt 1 in insn 215:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 216:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 221:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 222:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 226:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 227:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 228:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 230:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 236:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 243:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 248:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 249:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 250:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 255:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 256:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 257:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 258:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 259:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 261:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 262
	 Choosing alt 1 in insn 262:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 263:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 268:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 278:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 285:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 290:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 291:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 292:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 298:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 299:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 300:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 304:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 305:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 309:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 310:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 311:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 313:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 319:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 331:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 332:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 333:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 342:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 343:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 344:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 346:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 352:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 364:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 365:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 366:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 372:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 373:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 374:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 375:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 378:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 380:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 381:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 382:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 383:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 387:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 388:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 389:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 390:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 391:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 392:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 393:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 394:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 395:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 396:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 397:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 398:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 399:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 401:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 404:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 405:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 406:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 410:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 411:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 412:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 413:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 414:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 416:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 422:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 429:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 434:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 435:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 436:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 442:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 443:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 447:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 448:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 449:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 450:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 451:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 456:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 457:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 461:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 462:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 463:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 464:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 465:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 466:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 467:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 468:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 469:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 470:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 475:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 476:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 477:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 478:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 479:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 480:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 481:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 482:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 483:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 484:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 487:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 488:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 493:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 499:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 503:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 504:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 512:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 513:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 514:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) l  (1) Py {*arm_cmpsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 524:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 530:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 531:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 534:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 535:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 543:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 544:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 545:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 551:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 552:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 555:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 556:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 557:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 558:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 559:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 562:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 563:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 567:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 568:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 569:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 573:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 574:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 578:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 579:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 580:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 582:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 588:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 595:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 600:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 601:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 602:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 607:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 608:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 609:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 610:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 611:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 612:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 613:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 614:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 616:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 617:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 618:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 619:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 620:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 621:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 622:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 623:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 624:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 625:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 626
	 Choosing alt 1 in insn 626:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 627:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 628:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 629:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 630:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 632:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 638:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 645:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 650:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 651:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 661:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 662:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 663:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 665:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 671:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 672:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 675:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 678:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 683:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 684:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 685:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 694:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 695:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 699:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 704:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 705:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 706:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 707:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 708:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 712:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 713:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 714:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 715:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 716:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 719:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 720:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 721:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 722:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 723:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 726:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 727:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 728
	 Choosing alt 1 in insn 728:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 729:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 730:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 731:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 732:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 735:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 736:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 737:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 738:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 739:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 740:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 741:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 742:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 745:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 746:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 747:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 748:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 749:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 750:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 754:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 759:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6 7
EBB 8 9 10
EBB 11 12
EBB 13 14
EBB 15
EBB 16 17
EBB 18 19
EBB 20 21
EBB 22
EBB 23 24
EBB 25 108
EBB 109
EBB 26 27 28 29
EBB 30 31 32
EBB 33
EBB 34 35
EBB 36 37
EBB 38 39
EBB 40
EBB 41 42
EBB 43
EBB 44 45 46
EBB 47 48
EBB 49 50
EBB 51
EBB 52 53
EBB 54
EBB 55 56 57
EBB 58 59
EBB 60 61
EBB 62
EBB 63 64
EBB 65 66
EBB 67
EBB 68 69
EBB 70 71
EBB 72 73
EBB 74
EBB 75 76
EBB 77
EBB 78 79
EBB 80 81 82 83
EBB 84 85
EBB 86 87
EBB 88 89
EBB 90 91
EBB 92
EBB 93 94
EBB 95 96
EBB 97 98
EBB 99 100 101 102 103 104
EBB 105
EBB 106
EBB 107

********** Pseudo live ranges #1: **********

  BB 107
   Insn 767: point = 0, n_alt = -1
   Insn 766: point = 0, n_alt = -2
   Insn 762: point = 1, n_alt = -2
  BB 105
   Insn 852: point = 4, n_alt = -1
   Insn 754: point = 4, n_alt = 1
  BB 98
   Insn 850: point = 5, n_alt = -1
   Insn 699: point = 5, n_alt = 1
  BB 94
   Insn 845: point = 6, n_alt = -1
   Insn 678: point = 6, n_alt = 1
  BB 89
   Insn 838: point = 7, n_alt = -1
   Insn 645: point = 7, n_alt = 1
  BB 85
   Insn 834: point = 8, n_alt = -1
   Insn 595: point = 8, n_alt = 1
  BB 76
   Insn 830: point = 9, n_alt = -1
   Insn 538: point = 9, n_alt = 1
  BB 71
   Insn 823: point = 10, n_alt = -1
   Insn 507: point = 10, n_alt = 1
  BB 61
   Insn 815: point = 11, n_alt = -1
   Insn 429: point = 11, n_alt = 1
  BB 53
   Insn 811: point = 12, n_alt = -1
   Insn 359: point = 12, n_alt = 1
  BB 48
   Insn 804: point = 13, n_alt = -1
   Insn 326: point = 13, n_alt = 1
  BB 42
   Insn 800: point = 14, n_alt = -1
   Insn 285: point = 14, n_alt = 1
  BB 37
   Insn 794: point = 15, n_alt = -1
   Insn 243: point = 15, n_alt = 1
  BB 32
   Insn 788: point = 16, n_alt = -1
   Insn 203: point = 16, n_alt = 1
  BB 24
   Insn 786: point = 17, n_alt = -1
   Insn 154: point = 17, n_alt = 1
  BB 19
   Insn 779: point = 18, n_alt = -1
   Insn 124: point = 18, n_alt = 1
  BB 10
   Insn 771: point = 19, n_alt = -1
   Insn 51: point = 19, n_alt = 1
  BB 3
   Insn 769: point = 20, n_alt = -1
   Insn 10: point = 20, n_alt = 1
  BB 106
   Insn 759: point = 21, n_alt = 1
  BB 96
   Insn 848: point = 22, n_alt = -1
  BB 95
   Insn 688: point = 22, n_alt = -1
   Insn 687: point = 22, n_alt = 0
   Insn 685: point = 23, n_alt = 0
   Insn 684: point = 25, n_alt = 5
   Insn 683: point = 27, n_alt = 5
  BB 92
   Insn 843: point = 28, n_alt = -1
   Insn 665: point = 28, n_alt = 7
   Insn 664: point = 28, n_alt = -1
   Insn 663: point = 28, n_alt = 7
   Insn 662: point = 29, n_alt = 1
   Insn 661: point = 30, n_alt = 5
  BB 93
   Insn 676: point = 31, n_alt = -1
   Insn 675: point = 31, n_alt = 0
   Insn 672: point = 32, n_alt = 0
   Insn 671: point = 34, n_alt = 5
   Insn 670: point = 35, n_alt = -2
   Insn 669: point = 36, n_alt = -1
  BB 104
   Insn 751: point = 36, n_alt = -1
   Insn 750: point = 36, n_alt = 1
   Insn 749: point = 37, n_alt = 1
   Insn 748: point = 39, n_alt = 5
   Insn 747: point = 41, n_alt = 5
   Insn 746: point = 42, n_alt = 0
   Insn 745: point = 44, n_alt = 5
  BB 103
   Insn 743: point = 45, n_alt = -1
   Insn 742: point = 45, n_alt = 1
   Insn 741: point = 46, n_alt = 1
   Insn 740: point = 48, n_alt = 4
   Insn 739: point = 50, n_alt = 1
   Insn 738: point = 52, n_alt = 5
   Insn 737: point = 54, n_alt = 5
   Insn 736: point = 55, n_alt = 0
   Insn 735: point = 57, n_alt = 5
  BB 102
   Insn 733: point = 58, n_alt = -1
   Insn 732: point = 58, n_alt = 1
   Insn 731: point = 59, n_alt = 1
   Insn 730: point = 61, n_alt = 5
   Insn 729: point = 63, n_alt = 5
   Insn 728: point = 64, n_alt = 1
   Insn 727: point = 66, n_alt = 4
   Insn 726: point = 67, n_alt = 5
  BB 101
   Insn 724: point = 68, n_alt = -1
   Insn 723: point = 68, n_alt = 1
   Insn 722: point = 69, n_alt = 5
   Insn 721: point = 71, n_alt = 5
   Insn 720: point = 72, n_alt = 0
   Insn 719: point = 74, n_alt = 5
  BB 100
   Insn 717: point = 75, n_alt = -1
   Insn 716: point = 75, n_alt = 1
   Insn 715: point = 76, n_alt = 5
   Insn 714: point = 78, n_alt = 5
   Insn 713: point = 79, n_alt = 0
   Insn 712: point = 81, n_alt = 5
  BB 99
   Insn 710: point = 82, n_alt = -1
   Insn 709: point = 82, n_alt = 0
   Insn 708: point = 83, n_alt = 5
   Insn 707: point = 85, n_alt = 5
   Insn 706: point = 86, n_alt = 7
   Insn 705: point = 87, n_alt = 5
   Insn 704: point = 89, n_alt = 5
  BB 97
   Insn 697: point = 90, n_alt = -1
   Insn 696: point = 90, n_alt = 0
   Insn 695: point = 91, n_alt = 5
   Insn 694: point = 93, n_alt = 5
  BB 91
   Insn 841: point = 94, n_alt = -1
  BB 90
   Insn 655: point = 94, n_alt = -1
   Insn 654: point = 94, n_alt = 0
   Insn 652: point = 95, n_alt = 0
   Insn 651: point = 97, n_alt = 5
   Insn 650: point = 99, n_alt = 5
  BB 87
   Insn 836: point = 100, n_alt = -1
   Insn 632: point = 100, n_alt = 7
   Insn 631: point = 100, n_alt = -1
   Insn 630: point = 100, n_alt = 7
   Insn 629: point = 101, n_alt = 1
   Insn 628: point = 102, n_alt = 5
   Insn 627: point = 103, n_alt = 7
   Insn 626: point = 104, n_alt = 1
   Insn 625: point = 106, n_alt = 5
   Insn 624: point = 107, n_alt = 1
   Insn 623: point = 109, n_alt = 5
   Insn 622: point = 111, n_alt = 5
   Insn 621: point = 112, n_alt = 1
   Insn 620: point = 114, n_alt = 1
   Insn 619: point = 116, n_alt = 4
   Insn 618: point = 118, n_alt = 1
   Insn 617: point = 120, n_alt = 5
   Insn 616: point = 122, n_alt = 5
   Insn 615: point = 123, n_alt = 1
   Insn 614: point = 125, n_alt = 1
   Insn 613: point = 127, n_alt = 5
   Insn 612: point = 129, n_alt = 5
   Insn 611: point = 130, n_alt = 1
   Insn 610: point = 132, n_alt = 5
   Insn 609: point = 134, n_alt = 5
   Insn 608: point = 135, n_alt = 5
   Insn 607: point = 137, n_alt = 5
  BB 86
   Insn 605: point = 138, n_alt = -1
   Insn 604: point = 138, n_alt = 0
   Insn 602: point = 139, n_alt = 0
   Insn 601: point = 141, n_alt = 5
   Insn 600: point = 143, n_alt = 5
  BB 83
   Insn 832: point = 144, n_alt = -1
   Insn 582: point = 144, n_alt = 7
   Insn 581: point = 144, n_alt = -1
   Insn 580: point = 144, n_alt = 7
   Insn 579: point = 145, n_alt = 1
   Insn 578: point = 146, n_alt = 5
  BB 82
   Insn 576: point = 147, n_alt = -1
   Insn 575: point = 147, n_alt = 0
   Insn 574: point = 148, n_alt = 5
   Insn 573: point = 150, n_alt = 5
  BB 81
   Insn 571: point = 151, n_alt = -1
   Insn 570: point = 151, n_alt = 0
   Insn 569: point = 152, n_alt = 0
   Insn 568: point = 154, n_alt = 5
   Insn 567: point = 156, n_alt = 5
  BB 84
   Insn 593: point = 157, n_alt = -1
   Insn 592: point = 157, n_alt = 0
   Insn 589: point = 158, n_alt = 0
   Insn 588: point = 160, n_alt = 5
   Insn 587: point = 161, n_alt = -2
   Insn 586: point = 162, n_alt = -1
  BB 88
   Insn 643: point = 162, n_alt = -1
   Insn 642: point = 162, n_alt = 0
   Insn 639: point = 163, n_alt = 0
   Insn 638: point = 165, n_alt = 5
   Insn 637: point = 166, n_alt = -2
   Insn 636: point = 167, n_alt = -1
  BB 80
   Insn 565: point = 167, n_alt = -1
   Insn 564: point = 167, n_alt = 0
   Insn 563: point = 168, n_alt = 5
   Insn 562: point = 170, n_alt = 5
  BB 79
   Insn 559: point = 171, n_alt = 7
   Insn 558: point = 172, n_alt = 2
   Insn 557: point = 174, n_alt = 5
   Insn 556: point = 175, n_alt = 5
   Insn 555: point = 177, n_alt = 5
  BB 78
   Insn 553: point = 178, n_alt = -1
   Insn 552: point = 178, n_alt = 0
   Insn 551: point = 179, n_alt = 1
  BB 73
   Insn 826: point = 180, n_alt = -1
  BB 72
   Insn 517: point = 180, n_alt = -1
   Insn 516: point = 180, n_alt = 0
   Insn 514: point = 181, n_alt = 0
   Insn 513: point = 183, n_alt = 5
   Insn 512: point = 185, n_alt = 5
  BB 69
   Insn 821: point = 186, n_alt = -1
   Insn 493: point = 186, n_alt = 7
   Insn 492: point = 186, n_alt = -1
  BB 70
   Insn 505: point = 186, n_alt = -1
   Insn 504: point = 186, n_alt = 1
   Insn 503: point = 187, n_alt = 4
   Insn 500: point = 188, n_alt = 0
   Insn 499: point = 190, n_alt = 5
   Insn 498: point = 191, n_alt = -2
   Insn 497: point = 192, n_alt = -1
  BB 77
   Insn 548: point = 192, n_alt = -1
   Insn 547: point = 192, n_alt = 0
   Insn 545: point = 193, n_alt = 0
   Insn 544: point = 195, n_alt = 5
   Insn 543: point = 197, n_alt = 5
  BB 74
   Insn 828: point = 198, n_alt = -1
   Insn 524: point = 198, n_alt = 7
   Insn 523: point = 198, n_alt = -1
  BB 68
   Insn 490: point = 198, n_alt = -1
   Insn 489: point = 198, n_alt = 0
   Insn 488: point = 199, n_alt = 5
   Insn 487: point = 201, n_alt = 5
  BB 66
   Insn 819: point = 202, n_alt = -1
   Insn 470: point = 202, n_alt = 7
   Insn 469: point = 203, n_alt = 0
   Insn 468: point = 205, n_alt = 5
   Insn 467: point = 206, n_alt = 5
   Insn 466: point = 208, n_alt = 5
   Insn 465: point = 209, n_alt = 7
   Insn 464: point = 210, n_alt = 0
   Insn 463: point = 212, n_alt = 5
   Insn 462: point = 213, n_alt = 5
   Insn 461: point = 215, n_alt = 5
  BB 64
   Insn 817: point = 216, n_alt = -1
   Insn 451: point = 216, n_alt = 7
   Insn 450: point = 217, n_alt = 0
   Insn 449: point = 219, n_alt = 5
   Insn 448: point = 220, n_alt = 5
   Insn 447: point = 222, n_alt = 5
  BB 67
   Insn 484: point = 223, n_alt = 7
   Insn 483: point = 224, n_alt = 2
   Insn 482: point = 226, n_alt = 5
   Insn 481: point = 227, n_alt = 5
   Insn 480: point = 229, n_alt = 5
   Insn 479: point = 230, n_alt = 7
   Insn 478: point = 231, n_alt = 2
   Insn 477: point = 233, n_alt = 5
   Insn 476: point = 234, n_alt = 5
   Insn 475: point = 236, n_alt = 5
  BB 65
   Insn 459: point = 237, n_alt = -1
   Insn 458: point = 237, n_alt = 0
   Insn 457: point = 238, n_alt = 5
   Insn 456: point = 240, n_alt = 5
  BB 63
   Insn 445: point = 241, n_alt = -1
   Insn 444: point = 241, n_alt = 0
   Insn 443: point = 242, n_alt = 5
   Insn 442: point = 244, n_alt = 5
  BB 62
   Insn 439: point = 245, n_alt = -1
   Insn 438: point = 245, n_alt = 0
   Insn 436: point = 246, n_alt = 0
   Insn 435: point = 248, n_alt = 5
   Insn 434: point = 250, n_alt = 5
  BB 59
   Insn 813: point = 251, n_alt = -1
   Insn 416: point = 251, n_alt = 7
   Insn 415: point = 251, n_alt = -1
   Insn 414: point = 251, n_alt = 7
   Insn 413: point = 252, n_alt = 0
   Insn 412: point = 254, n_alt = 5
   Insn 411: point = 255, n_alt = 5
   Insn 410: point = 257, n_alt = 5
  BB 60
   Insn 427: point = 258, n_alt = -1
   Insn 426: point = 258, n_alt = 0
   Insn 423: point = 259, n_alt = 0
   Insn 422: point = 261, n_alt = 5
   Insn 421: point = 262, n_alt = -2
   Insn 420: point = 263, n_alt = -1
  BB 58
   Insn 408: point = 263, n_alt = -1
   Insn 407: point = 263, n_alt = 0
   Insn 406: point = 264, n_alt = 0
   Insn 405: point = 266, n_alt = 5
   Insn 404: point = 268, n_alt = 5
  BB 57
   Insn 401: point = 269, n_alt = 6
   Insn 400: point = 270, n_alt = 0
   Insn 399: point = 272, n_alt = 1
   Insn 398: point = 273, n_alt = 5
   Insn 397: point = 274, n_alt = 7
   Insn 396: point = 275, n_alt = 0
   Insn 395: point = 277, n_alt = 5
   Insn 394: point = 279, n_alt = 5
   Insn 393: point = 280, n_alt = 7
   Insn 392: point = 281, n_alt = 0
   Insn 391: point = 283, n_alt = 5
   Insn 390: point = 284, n_alt = 5
   Insn 389: point = 286, n_alt = 5
   Insn 388: point = 287, n_alt = 7
   Insn 387: point = 288, n_alt = 1
  BB 56
   Insn 385: point = 289, n_alt = -1
   Insn 384: point = 289, n_alt = 0
   Insn 383: point = 290, n_alt = 0
   Insn 382: point = 292, n_alt = 5
   Insn 381: point = 294, n_alt = 5
   Insn 380: point = 295, n_alt = 6
   Insn 379: point = 296, n_alt = 0
   Insn 378: point = 298, n_alt = 1
  BB 75
   Insn 536: point = 299, n_alt = -1
   Insn 535: point = 299, n_alt = 1
   Insn 534: point = 300, n_alt = 4
   Insn 531: point = 301, n_alt = 0
   Insn 530: point = 303, n_alt = 5
   Insn 529: point = 304, n_alt = -2
   Insn 528: point = 305, n_alt = -1
  BB 55
   Insn 376: point = 305, n_alt = -1
   Insn 375: point = 305, n_alt = 0
   Insn 374: point = 306, n_alt = 0
   Insn 373: point = 308, n_alt = 5
   Insn 372: point = 310, n_alt = 5
  BB 50
   Insn 807: point = 311, n_alt = -1
  BB 49
   Insn 336: point = 311, n_alt = -1
   Insn 335: point = 311, n_alt = 0
   Insn 333: point = 312, n_alt = 0
   Insn 332: point = 314, n_alt = 5
   Insn 331: point = 316, n_alt = 5
  BB 46
   Insn 802: point = 317, n_alt = -1
   Insn 313: point = 317, n_alt = 7
   Insn 312: point = 317, n_alt = -1
   Insn 311: point = 317, n_alt = 7
   Insn 310: point = 318, n_alt = 1
   Insn 309: point = 319, n_alt = 5
  BB 47
   Insn 324: point = 320, n_alt = -1
   Insn 323: point = 320, n_alt = 0
   Insn 320: point = 321, n_alt = 0
   Insn 319: point = 323, n_alt = 5
   Insn 318: point = 324, n_alt = -2
   Insn 317: point = 325, n_alt = -1
  BB 54
   Insn 369: point = 325, n_alt = -1
   Insn 368: point = 325, n_alt = 0
   Insn 366: point = 326, n_alt = 0
   Insn 365: point = 328, n_alt = 5
   Insn 364: point = 330, n_alt = 5
  BB 51
   Insn 809: point = 331, n_alt = -1
   Insn 346: point = 331, n_alt = 7
   Insn 345: point = 331, n_alt = -1
   Insn 344: point = 331, n_alt = 7
   Insn 343: point = 332, n_alt = 1
   Insn 342: point = 333, n_alt = 5
  BB 45
   Insn 307: point = 334, n_alt = -1
   Insn 306: point = 334, n_alt = 0
   Insn 305: point = 335, n_alt = 5
   Insn 304: point = 337, n_alt = 5
  BB 52
   Insn 357: point = 338, n_alt = -1
   Insn 356: point = 338, n_alt = 0
   Insn 353: point = 339, n_alt = 0
   Insn 352: point = 341, n_alt = 5
   Insn 351: point = 342, n_alt = -2
   Insn 350: point = 343, n_alt = -1
  BB 44
   Insn 302: point = 343, n_alt = -1
   Insn 301: point = 343, n_alt = 0
   Insn 300: point = 344, n_alt = 0
   Insn 299: point = 346, n_alt = 5
   Insn 298: point = 348, n_alt = 5
  BB 39
   Insn 796: point = 349, n_alt = -1
   Insn 263: point = 349, n_alt = 7
   Insn 262: point = 350, n_alt = 1
   Insn 261: point = 352, n_alt = 5
   Insn 260: point = 353, n_alt = 1
   Insn 259: point = 355, n_alt = 5
   Insn 258: point = 357, n_alt = 5
   Insn 257: point = 358, n_alt = 2
   Insn 256: point = 360, n_alt = 5
   Insn 255: point = 362, n_alt = 5
  BB 38
   Insn 253: point = 363, n_alt = -1
   Insn 252: point = 363, n_alt = 0
   Insn 250: point = 364, n_alt = 0
   Insn 249: point = 366, n_alt = 5
   Insn 248: point = 368, n_alt = 5
  BB 35
   Insn 792: point = 369, n_alt = -1
   Insn 230: point = 369, n_alt = 7
   Insn 229: point = 369, n_alt = -1
   Insn 228: point = 369, n_alt = 7
   Insn 227: point = 370, n_alt = 1
   Insn 226: point = 371, n_alt = 5
  BB 36
   Insn 241: point = 372, n_alt = -1
   Insn 240: point = 372, n_alt = 0
   Insn 237: point = 373, n_alt = 0
   Insn 236: point = 375, n_alt = 5
   Insn 235: point = 376, n_alt = -2
   Insn 234: point = 377, n_alt = -1
  BB 33
   Insn 790: point = 377, n_alt = -1
   Insn 216: point = 377, n_alt = 7
   Insn 215: point = 378, n_alt = 1
   Insn 214: point = 380, n_alt = 5
   Insn 213: point = 381, n_alt = 1
   Insn 212: point = 383, n_alt = 5
   Insn 211: point = 385, n_alt = 5
   Insn 210: point = 386, n_alt = 2
   Insn 209: point = 388, n_alt = 5
   Insn 208: point = 390, n_alt = 5
  BB 31
   Insn 201: point = 391, n_alt = -1
   Insn 200: point = 391, n_alt = 0
   Insn 199: point = 392, n_alt = 5
   Insn 198: point = 394, n_alt = 5
  BB 30
   Insn 196: point = 395, n_alt = -1
   Insn 195: point = 395, n_alt = 0
   Insn 194: point = 396, n_alt = 0
   Insn 193: point = 398, n_alt = 5
   Insn 192: point = 400, n_alt = 5
  BB 43
   Insn 295: point = 401, n_alt = -1
   Insn 294: point = 401, n_alt = 0
   Insn 292: point = 402, n_alt = 0
   Insn 291: point = 404, n_alt = 5
   Insn 290: point = 406, n_alt = 5
  BB 40
   Insn 798: point = 407, n_alt = -1
   Insn 272: point = 407, n_alt = 7
   Insn 271: point = 407, n_alt = -1
   Insn 270: point = 407, n_alt = 7
   Insn 269: point = 408, n_alt = 1
   Insn 268: point = 409, n_alt = 5
  BB 34
   Insn 224: point = 410, n_alt = -1
   Insn 223: point = 410, n_alt = 0
   Insn 222: point = 411, n_alt = 5
   Insn 221: point = 413, n_alt = 5
  BB 29
   Insn 189: point = 414, n_alt = -1
   Insn 188: point = 414, n_alt = 0
   Insn 187: point = 415, n_alt = 0
   Insn 186: point = 417, n_alt = 5
   Insn 185: point = 419, n_alt = 5
  BB 28
   Insn 183: point = 420, n_alt = -1
   Insn 182: point = 420, n_alt = 0
   Insn 181: point = 421, n_alt = 0
   Insn 180: point = 423, n_alt = 5
   Insn 179: point = 425, n_alt = 5
  BB 27
   Insn 177: point = 426, n_alt = -1
   Insn 176: point = 426, n_alt = 0
   Insn 175: point = 427, n_alt = 0
   Insn 174: point = 429, n_alt = 5
   Insn 173: point = 431, n_alt = 5
  BB 41
   Insn 283: point = 432, n_alt = -1
   Insn 282: point = 432, n_alt = 0
   Insn 279: point = 433, n_alt = 0
   Insn 278: point = 435, n_alt = 5
   Insn 277: point = 436, n_alt = -2
   Insn 276: point = 437, n_alt = -1
  BB 26
   Insn 171: point = 437, n_alt = -1
   Insn 170: point = 437, n_alt = 0
   Insn 169: point = 438, n_alt = 0
   Insn 168: point = 440, n_alt = 5
   Insn 167: point = 442, n_alt = 5
  BB 108
   Insn 855: point = 443, n_alt = -1
  BB 25
   Insn 164: point = 443, n_alt = -1
   Insn 163: point = 443, n_alt = 0
   Insn 161: point = 444, n_alt = 0
   Insn 160: point = 446, n_alt = 5
   Insn 159: point = 448, n_alt = 5
  BB 22
   Insn 784: point = 449, n_alt = -1
   Insn 141: point = 449, n_alt = 7
   Insn 140: point = 449, n_alt = -1
  BB 23
   Insn 152: point = 449, n_alt = -1
   Insn 151: point = 449, n_alt = 0
   Insn 148: point = 450, n_alt = 0
   Insn 147: point = 452, n_alt = 5
   Insn 146: point = 453, n_alt = -2
   Insn 145: point = 454, n_alt = -1
  BB 21
   Insn 782: point = 454, n_alt = -1
  BB 20
   Insn 134: point = 454, n_alt = -1
   Insn 133: point = 454, n_alt = 0
   Insn 131: point = 455, n_alt = 0
   Insn 130: point = 457, n_alt = 5
   Insn 129: point = 459, n_alt = 5
  BB 17
   Insn 777: point = 460, n_alt = -1
   Insn 111: point = 460, n_alt = 7
   Insn 110: point = 460, n_alt = -1
  BB 16
   Insn 108: point = 460, n_alt = -1
   Insn 107: point = 460, n_alt = 0
   Insn 106: point = 461, n_alt = 5
   Insn 105: point = 463, n_alt = 5
  BB 14
   Insn 775: point = 464, n_alt = -1
   Insn 88: point = 464, n_alt = 7
   Insn 87: point = 465, n_alt = 0
   Insn 86: point = 467, n_alt = 5
   Insn 85: point = 468, n_alt = 5
   Insn 84: point = 470, n_alt = 5
   Insn 83: point = 471, n_alt = 7
   Insn 82: point = 472, n_alt = 0
   Insn 81: point = 474, n_alt = 5
   Insn 80: point = 475, n_alt = 5
   Insn 79: point = 477, n_alt = 5
  BB 12
   Insn 773: point = 478, n_alt = -1
   Insn 69: point = 478, n_alt = 7
   Insn 68: point = 479, n_alt = 0
   Insn 67: point = 481, n_alt = 5
   Insn 66: point = 482, n_alt = 5
   Insn 65: point = 484, n_alt = 5
  BB 15
   Insn 102: point = 485, n_alt = 7
   Insn 101: point = 486, n_alt = 2
   Insn 100: point = 488, n_alt = 5
   Insn 99: point = 489, n_alt = 5
   Insn 98: point = 491, n_alt = 5
   Insn 97: point = 492, n_alt = 7
   Insn 96: point = 493, n_alt = 2
   Insn 95: point = 495, n_alt = 5
   Insn 94: point = 496, n_alt = 5
   Insn 93: point = 498, n_alt = 5
  BB 13
   Insn 77: point = 499, n_alt = -1
   Insn 76: point = 499, n_alt = 3
   Insn 75: point = 500, n_alt = 5
   Insn 74: point = 502, n_alt = 5
  BB 11
   Insn 63: point = 503, n_alt = -1
   Insn 62: point = 503, n_alt = 3
   Insn 61: point = 504, n_alt = 5
   Insn 60: point = 506, n_alt = 5
  BB 18
   Insn 122: point = 507, n_alt = -1
   Insn 121: point = 507, n_alt = 0
   Insn 118: point = 508, n_alt = 0
   Insn 117: point = 510, n_alt = 5
   Insn 116: point = 511, n_alt = -2
   Insn 115: point = 512, n_alt = -1
  BB 109
   Insn 859: point = 512, n_alt = -1
  BB 9
   Insn 49: point = 512, n_alt = -1
   Insn 48: point = 512, n_alt = 0
   Insn 47: point = 513, n_alt = 5
   Insn 46: point = 515, n_alt = 5
  BB 8
   Insn 44: point = 516, n_alt = -1
   Insn 43: point = 516, n_alt = 0
   Insn 42: point = 517, n_alt = 0
   Insn 41: point = 519, n_alt = 5
   Insn 40: point = 521, n_alt = 5
  BB 7
   Insn 37: point = 522, n_alt = -1
   Insn 36: point = 522, n_alt = 3
   Insn 35: point = 523, n_alt = 0
   Insn 34: point = 525, n_alt = 5
   Insn 33: point = 527, n_alt = 5
  BB 6
   Insn 31: point = 528, n_alt = -1
   Insn 30: point = 528, n_alt = 0
   Insn 29: point = 529, n_alt = 0
   Insn 28: point = 531, n_alt = 5
   Insn 27: point = 533, n_alt = 5
  BB 5
   Insn 25: point = 534, n_alt = -1
   Insn 24: point = 534, n_alt = 0
   Insn 23: point = 535, n_alt = 0
   Insn 22: point = 537, n_alt = 5
   Insn 21: point = 539, n_alt = 5
  BB 4
   Insn 19: point = 540, n_alt = -1
   Insn 18: point = 540, n_alt = 0
   Insn 17: point = 541, n_alt = 0
   Insn 16: point = 543, n_alt = 5
   Insn 15: point = 545, n_alt = 5
  BB 2
   Insn 8: point = 546, n_alt = -1
   Insn 7: point = 546, n_alt = 0
   Insn 6: point = 547, n_alt = 5
   Insn 2: point = 548, n_alt = 7
 r113: [542..543]
 r114: [540..541]
 r115: [538..539]
 r116: [536..537]
 r117: [534..535]
 r118: [532..533]
 r119: [530..531]
 r120: [528..529]
 r121: [526..527]
 r122: [524..525]
 r123: [522..523]
 r124: [520..521]
 r125: [518..519]
 r126: [516..517]
 r127: [512..513]
 r128: [503..504]
 r129: [483..484]
 r130: [480..482]
 r131: [478..481]
 r132: [478..479]
 r133: [499..500]
 r134: [476..477]
 r135: [473..475]
 r136: [471..474]
 r137: [471..472]
 r138: [469..470]
 r139: [466..468]
 r140: [464..467]
 r141: [464..465]
 r142: [497..498]
 r143: [494..496]
 r144: [492..495]
 r145: [492..493]
 r146: [490..491]
 r147: [487..489]
 r148: [485..488]
 r149: [485..486]
 r150: [460..461]
 r151: [509..511]
 r152: [507..508]
 r153: [458..459]
 r154: [456..457]
 r155: [454..455]
 r156: [451..453]
 r157: [449..450]
 r158: [447..448]
 r159: [445..446]
 r160: [443..444]
 r161: [439..440]
 r162: [437..438]
 r163: [430..431]
 r164: [428..429]
 r165: [426..427]
 r166: [424..425]
 r167: [422..423]
 r168: [420..421]
 r169: [418..419]
 r170: [416..417]
 r171: [414..415]
 r172: [399..400]
 r173: [397..398]
 r174: [395..396]
 r175: [391..392]
 r176: [389..390]
 r177: [387..388]
 r178: [379..386]
 r179: [382..383]
 r180: [379..381]
 r181: [377..380]
 r182: [377..378]
 r183: [410..411]
 r184: [369..371]
 r185: [374..376]
 r186: [372..373]
 r187: [367..368]
 r188: [365..366]
 r189: [363..364]
 r190: [361..362]
 r191: [359..360]
 r192: [351..358]
 r193: [354..355]
 r194: [351..353]
 r195: [349..352]
 r196: [349..350]
 r197: [407..409]
 r198: [434..436]
 r199: [432..433]
 r200: [405..406]
 r201: [403..404]
 r202: [401..402]
 r203: [345..346]
 r204: [343..344]
 r205: [334..335]
 r206: [317..319]
 r207: [322..324]
 r208: [320..321]
 r209: [315..316]
 r210: [313..314]
 r211: [311..312]
 r212: [331..333]
 r213: [340..342]
 r214: [338..339]
 r215: [329..330]
 r216: [327..328]
 r217: [325..326]
 r218: [307..308]
 r219: [305..306]
 r220: [293..294]
 r221: [291..292]
 r222: [289..290]
 r223: [285..286]
 r224: [282..284]
 r225: [280..283]
 r226: [280..281]
 r227: [278..279]
 r228: [276..277]
 r229: [274..275]
 r230: [267..268]
 r231: [265..266]
 r232: [263..264]
 r233: [256..257]
 r234: [253..255]
 r235: [251..254]
 r236: [251..252]
 r237: [260..262]
 r238: [258..259]
 r239: [249..250]
 r240: [247..248]
 r241: [245..246]
 r242: [241..242]
 r243: [221..222]
 r244: [218..220]
 r245: [216..219]
 r246: [216..217]
 r247: [237..238]
 r248: [214..215]
 r249: [211..213]
 r250: [209..212]
 r251: [209..210]
 r252: [207..208]
 r253: [204..206]
 r254: [202..205]
 r255: [202..203]
 r256: [235..236]
 r257: [232..234]
 r258: [230..233]
 r259: [230..231]
 r260: [228..229]
 r261: [225..227]
 r262: [223..226]
 r263: [223..224]
 r264: [198..199]
 r265: [189..191]
 r266: [186..188]
 r267: [184..185]
 r268: [182..183]
 r269: [180..181]
 r270: [302..304]
 r271: [299..301]
 r272: [196..197]
 r273: [194..195]
 r274: [192..193]
 r275: [176..177]
 r276: [173..175]
 r277: [171..174]
 r278: [171..172]
 r279: [167..168]
 r280: [155..156]
 r281: [153..154]
 r282: [151..152]
 r283: [147..148]
 r284: [144..146]
 r285: [159..161]
 r286: [157..158]
 r287: [142..143]
 r288: [140..141]
 r289: [138..139]
 r290: [131..135]
 r291: [131..132]
 r292: [124..130]
 r293: [126..127]
 r294: [124..125]
 r295: [113..123]
 r296: [119..120]
 r297: [117..118]
 r298: [115..116]
 r299: [113..114]
 r300: [105..112]
 r301: [108..109]
 r302: [105..107]
 r303: [103..106]
 r304: [103..104]
 r305: [100..102]
 r306: [164..166]
 r307: [162..163]
 r308: [98..99]
 r309: [96..97]
 r310: [94..95]
 r311: [28..30]
 r312: [33..35]
 r313: [31..32]
 r314: [26..27]
 r315: [24..25]
 r316: [22..23]
 r317: [90..91]
 r318: [88..89]
 r319: [82..83]
 r320: [75..79]
 r321: [75..76]
 r322: [68..72]
 r323: [68..69]
 r324: [58..66]
 r325: [60..61]
 r326: [58..59]
 r327: [45..55]
 r328: [51..52]
 r329: [49..50]
 r330: [47..48]
 r331: [45..46]
 r332: [36..42]
 r333: [38..39]
 r334: [36..37]
 r335: [2..21]
 r336: [273..273]
 r337: [0..1]
 r338: [546..547]
 r339: [544..545]
 r340: [514..515]
 r341: [505..506]
 r342: [501..502]
 r343: [462..463]
 r344: [509..510]
 r345: [451..452]
 r346: [441..442]
 r347: [393..394]
 r348: [384..385]
 r349: [412..413]
 r350: [369..370]
 r351: [374..375]
 r352: [356..357]
 r353: [407..408]
 r354: [434..435]
 r355: [347..348]
 r356: [336..337]
 r357: [317..318]
 r358: [322..323]
 r359: [331..332]
 r360: [340..341]
 r361: [309..310]
 r362: [297..298]
 r363: [295..296]
 r364: [287..288]
 r365: [271..272]
 r366: [269..270]
 r367: [260..261]
 r368: [243..244]
 r369: [239..240]
 r370: [200..201]
 r371: [189..190]
 r372: [186..187]
 r373: [302..303]
 r374: [299..300]
 r375: [178..179]
 r376: [169..170]
 r377: [149..150]
 r378: [144..145]
 r379: [159..160]
 r380: [136..137]
 r381: [133..134]
 r382: [128..129]
 r383: [121..122]
 r384: [110..111]
 r385: [100..101]
 r386: [164..165]
 r387: [28..29]
 r388: [33..34]
 r389: [92..93]
 r390: [86..87]
 r391: [84..85]
 r392: [80..81]
 r393: [77..78]
 r394: [73..74]
 r395: [70..71]
 r396: [65..67]
 r397: [62..63]
 r398: [56..57]
 r399: [53..54]
 r400: [43..44]
 r401: [40..41]
Compressing live ranges: from 548 to 481 - 87%
Ranges after the compression:
 r113: [475..476]
 r114: [473..474]
 r115: [471..472]
 r116: [469..470]
 r117: [467..468]
 r118: [465..466]
 r119: [463..464]
 r120: [461..462]
 r121: [459..460]
 r122: [457..458]
 r123: [455..456]
 r124: [453..454]
 r125: [451..452]
 r126: [449..450]
 r127: [445..446]
 r128: [437..438]
 r129: [419..420]
 r130: [417..418]
 r131: [415..418]
 r132: [415..416]
 r133: [433..434]
 r134: [413..414]
 r135: [411..412]
 r136: [409..412]
 r137: [409..410]
 r138: [407..408]
 r139: [405..406]
 r140: [403..406]
 r141: [403..404]
 r142: [431..432]
 r143: [429..430]
 r144: [427..430]
 r145: [427..428]
 r146: [425..426]
 r147: [423..424]
 r148: [421..424]
 r149: [421..422]
 r150: [399..400]
 r151: [443..444]
 r152: [441..442]
 r153: [397..398]
 r154: [395..396]
 r155: [393..394]
 r156: [391..392]
 r157: [389..390]
 r158: [387..388]
 r159: [385..386]
 r160: [383..384]
 r161: [379..380]
 r162: [377..378]
 r163: [371..372]
 r164: [369..370]
 r165: [367..368]
 r166: [365..366]
 r167: [363..364]
 r168: [361..362]
 r169: [359..360]
 r170: [357..358]
 r171: [355..356]
 r172: [341..342]
 r173: [339..340]
 r174: [337..338]
 r175: [333..334]
 r176: [331..332]
 r177: [329..330]
 r178: [323..328]
 r179: [325..326]
 r180: [323..324]
 r181: [321..324]
 r182: [321..322]
 r183: [351..352]
 r184: [315..316]
 r185: [319..320]
 r186: [317..318]
 r187: [313..314]
 r188: [311..312]
 r189: [309..310]
 r190: [307..308]
 r191: [305..306]
 r192: [299..304]
 r193: [301..302]
 r194: [299..300]
 r195: [297..300]
 r196: [297..298]
 r197: [349..350]
 r198: [375..376]
 r199: [373..374]
 r200: [347..348]
 r201: [345..346]
 r202: [343..344]
 r203: [293..294]
 r204: [291..292]
 r205: [283..284]
 r206: [269..270]
 r207: [273..274]
 r208: [271..272]
 r209: [267..268]
 r210: [265..266]
 r211: [263..264]
 r212: [281..282]
 r213: [289..290]
 r214: [287..288]
 r215: [279..280]
 r216: [277..278]
 r217: [275..276]
 r218: [259..260]
 r219: [257..258]
 r220: [247..248]
 r221: [245..246]
 r222: [243..244]
 r223: [239..240]
 r224: [237..238]
 r225: [235..238]
 r226: [235..236]
 r227: [233..234]
 r228: [231..232]
 r229: [229..230]
 r230: [222..223]
 r231: [220..221]
 r232: [218..219]
 r233: [212..213]
 r234: [210..211]
 r235: [208..211]
 r236: [208..209]
 r237: [216..217]
 r238: [214..215]
 r239: [206..207]
 r240: [204..205]
 r241: [202..203]
 r242: [198..199]
 r243: [180..181]
 r244: [178..179]
 r245: [176..179]
 r246: [176..177]
 r247: [194..195]
 r248: [174..175]
 r249: [172..173]
 r250: [170..173]
 r251: [170..171]
 r252: [168..169]
 r253: [166..167]
 r254: [164..167]
 r255: [164..165]
 r256: [192..193]
 r257: [190..191]
 r258: [188..191]
 r259: [188..189]
 r260: [186..187]
 r261: [184..185]
 r262: [182..185]
 r263: [182..183]
 r264: [160..161]
 r265: [152..153]
 r266: [150..151]
 r267: [148..149]
 r268: [146..147]
 r269: [144..145]
 r270: [255..256]
 r271: [253..254]
 r272: [158..159]
 r273: [156..157]
 r274: [154..155]
 r275: [140..141]
 r276: [138..139]
 r277: [136..139]
 r278: [136..137]
 r279: [132..133]
 r280: [122..123]
 r281: [120..121]
 r282: [118..119]
 r283: [114..115]
 r284: [112..113]
 r285: [126..127]
 r286: [124..125]
 r287: [110..111]
 r288: [108..109]
 r289: [106..107]
 r290: [100..103]
 r291: [100..101]
 r292: [94..99]
 r293: [96..97]
 r294: [94..95]
 r295: [84..93]
 r296: [90..91]
 r297: [88..89]
 r298: [86..87]
 r299: [84..85]
 r300: [78..83]
 r301: [80..81]
 r302: [78..79]
 r303: [76..79]
 r304: [76..77]
 r305: [74..75]
 r306: [130..131]
 r307: [128..129]
 r308: [72..73]
 r309: [70..71]
 r310: [68..69]
 r311: [10..11]
 r312: [14..15]
 r313: [12..13]
 r314: [8..9]
 r315: [6..7]
 r316: [4..5]
 r317: [64..65]
 r318: [62..63]
 r319: [56..57]
 r320: [50..53]
 r321: [50..51]
 r322: [44..47]
 r323: [44..45]
 r324: [36..43]
 r325: [38..39]
 r326: [36..37]
 r327: [24..33]
 r328: [30..31]
 r329: [28..29]
 r330: [26..27]
 r331: [24..25]
 r332: [16..21]
 r333: [18..19]
 r334: [16..17]
 r335: [2..3]
 r336: [228..228]
 r337: [0..1]
 r338: [479..480]
 r339: [477..478]
 r340: [447..448]
 r341: [439..440]
 r342: [435..436]
 r343: [401..402]
 r344: [443..444]
 r345: [391..392]
 r346: [381..382]
 r347: [335..336]
 r348: [327..328]
 r349: [353..354]
 r350: [315..316]
 r351: [319..320]
 r352: [303..304]
 r353: [349..350]
 r354: [375..376]
 r355: [295..296]
 r356: [285..286]
 r357: [269..270]
 r358: [273..274]
 r359: [281..282]
 r360: [289..290]
 r361: [261..262]
 r362: [251..252]
 r363: [249..250]
 r364: [241..242]
 r365: [226..227]
 r366: [224..225]
 r367: [216..217]
 r368: [200..201]
 r369: [196..197]
 r370: [162..163]
 r371: [152..153]
 r372: [150..151]
 r373: [255..256]
 r374: [253..254]
 r375: [142..143]
 r376: [134..135]
 r377: [116..117]
 r378: [112..113]
 r379: [126..127]
 r380: [104..105]
 r381: [102..103]
 r382: [98..99]
 r383: [92..93]
 r384: [82..83]
 r385: [74..75]
 r386: [130..131]
 r387: [10..11]
 r388: [14..15]
 r389: [66..67]
 r390: [60..61]
 r391: [58..59]
 r392: [54..55]
 r393: [52..53]
 r394: [48..49]
 r395: [46..47]
 r396: [42..43]
 r397: [40..41]
 r398: [34..35]
 r399: [32..33]
 r400: [22..23]
 r401: [20..21]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 47
changing reg in insn 48
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 68
changing reg in insn 67
changing reg in insn 69
changing reg in insn 68
changing reg in insn 69
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 87
changing reg in insn 86
changing reg in insn 88
changing reg in insn 87
changing reg in insn 88
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 96
changing reg in insn 95
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 102
changing reg in insn 101
changing reg in insn 102
changing reg in insn 106
changing reg in insn 107
changing reg in insn 116
changing reg in insn 118
changing reg in insn 118
changing reg in insn 121
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 133
changing reg in insn 146
changing reg in insn 148
changing reg in insn 148
changing reg in insn 151
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 163
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 170
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 175
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
changing reg in insn 180
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 182
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 188
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 195
changing reg in insn 199
changing reg in insn 200
changing reg in insn 208
changing reg in insn 209
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 212
changing reg in insn 213
changing reg in insn 213
changing reg in insn 214
changing reg in insn 216
changing reg in insn 215
changing reg in insn 216
changing reg in insn 222
changing reg in insn 223
changing reg in insn 226
changing reg in insn 228
changing reg in insn 235
changing reg in insn 237
changing reg in insn 237
changing reg in insn 240
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 250
changing reg in insn 250
changing reg in insn 252
changing reg in insn 255
changing reg in insn 256
changing reg in insn 256
changing reg in insn 257
changing reg in insn 257
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 261
changing reg in insn 263
changing reg in insn 262
changing reg in insn 263
changing reg in insn 268
changing reg in insn 270
changing reg in insn 277
changing reg in insn 279
changing reg in insn 279
changing reg in insn 282
changing reg in insn 290
changing reg in insn 291
changing reg in insn 291
changing reg in insn 292
changing reg in insn 292
changing reg in insn 294
changing reg in insn 299
changing reg in insn 300
changing reg in insn 300
changing reg in insn 301
changing reg in insn 305
changing reg in insn 306
changing reg in insn 309
changing reg in insn 311
changing reg in insn 318
changing reg in insn 320
changing reg in insn 320
changing reg in insn 323
changing reg in insn 331
changing reg in insn 332
changing reg in insn 332
changing reg in insn 333
changing reg in insn 333
changing reg in insn 335
changing reg in insn 342
changing reg in insn 344
changing reg in insn 351
changing reg in insn 353
changing reg in insn 353
changing reg in insn 356
changing reg in insn 364
changing reg in insn 365
changing reg in insn 365
changing reg in insn 366
changing reg in insn 366
changing reg in insn 368
changing reg in insn 373
changing reg in insn 374
changing reg in insn 374
changing reg in insn 375
changing reg in insn 381
changing reg in insn 382
changing reg in insn 382
changing reg in insn 383
changing reg in insn 383
changing reg in insn 384
changing reg in insn 389
changing reg in insn 390
changing reg in insn 390
changing reg in insn 392
changing reg in insn 391
changing reg in insn 393
changing reg in insn 392
changing reg in insn 393
changing reg in insn 394
changing reg in insn 395
changing reg in insn 395
changing reg in insn 396
changing reg in insn 396
changing reg in insn 397
changing reg in insn 404
changing reg in insn 405
changing reg in insn 405
changing reg in insn 406
changing reg in insn 406
changing reg in insn 407
changing reg in insn 410
changing reg in insn 411
changing reg in insn 411
changing reg in insn 413
changing reg in insn 412
changing reg in insn 414
changing reg in insn 413
changing reg in insn 414
changing reg in insn 421
changing reg in insn 423
changing reg in insn 423
changing reg in insn 426
changing reg in insn 434
changing reg in insn 435
changing reg in insn 435
changing reg in insn 436
changing reg in insn 436
changing reg in insn 438
changing reg in insn 443
changing reg in insn 444
changing reg in insn 447
changing reg in insn 448
changing reg in insn 448
changing reg in insn 450
changing reg in insn 449
changing reg in insn 451
changing reg in insn 450
changing reg in insn 451
changing reg in insn 457
changing reg in insn 458
changing reg in insn 461
changing reg in insn 462
changing reg in insn 462
changing reg in insn 464
changing reg in insn 463
changing reg in insn 465
changing reg in insn 464
changing reg in insn 465
changing reg in insn 466
changing reg in insn 467
changing reg in insn 467
changing reg in insn 469
changing reg in insn 468
changing reg in insn 470
changing reg in insn 469
changing reg in insn 470
changing reg in insn 475
changing reg in insn 476
changing reg in insn 476
changing reg in insn 478
changing reg in insn 477
changing reg in insn 479
changing reg in insn 478
changing reg in insn 479
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 483
changing reg in insn 482
changing reg in insn 484
changing reg in insn 483
changing reg in insn 484
changing reg in insn 488
changing reg in insn 489
changing reg in insn 498
changing reg in insn 500
changing reg in insn 500
changing reg in insn 504
changing reg in insn 512
changing reg in insn 513
changing reg in insn 513
changing reg in insn 514
changing reg in insn 514
changing reg in insn 516
changing reg in insn 529
changing reg in insn 531
changing reg in insn 531
changing reg in insn 535
changing reg in insn 543
changing reg in insn 544
changing reg in insn 544
changing reg in insn 545
changing reg in insn 545
changing reg in insn 547
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 558
changing reg in insn 557
changing reg in insn 559
changing reg in insn 558
changing reg in insn 559
changing reg in insn 563
changing reg in insn 564
changing reg in insn 567
changing reg in insn 568
changing reg in insn 568
changing reg in insn 569
changing reg in insn 569
changing reg in insn 570
changing reg in insn 574
changing reg in insn 575
changing reg in insn 578
changing reg in insn 580
changing reg in insn 587
changing reg in insn 589
changing reg in insn 589
changing reg in insn 592
changing reg in insn 600
changing reg in insn 601
changing reg in insn 601
changing reg in insn 602
changing reg in insn 602
changing reg in insn 604
changing reg in insn 608
changing reg in insn 611
changing reg in insn 610
changing reg in insn 611
changing reg in insn 611
changing reg in insn 615
changing reg in insn 613
changing reg in insn 614
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 621
changing reg in insn 617
changing reg in insn 618
changing reg in insn 618
changing reg in insn 619
changing reg in insn 619
changing reg in insn 620
changing reg in insn 620
changing reg in insn 621
changing reg in insn 621
changing reg in insn 623
changing reg in insn 624
changing reg in insn 624
changing reg in insn 625
changing reg in insn 627
changing reg in insn 626
changing reg in insn 627
changing reg in insn 628
changing reg in insn 630
changing reg in insn 637
changing reg in insn 639
changing reg in insn 639
changing reg in insn 642
changing reg in insn 650
changing reg in insn 651
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 654
changing reg in insn 661
changing reg in insn 663
changing reg in insn 670
changing reg in insn 672
changing reg in insn 672
changing reg in insn 675
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 685
changing reg in insn 685
changing reg in insn 687
changing reg in insn 695
changing reg in insn 696
changing reg in insn 704
changing reg in insn 705
changing reg in insn 708
changing reg in insn 709
changing reg in insn 713
changing reg in insn 716
changing reg in insn 715
changing reg in insn 716
changing reg in insn 720
changing reg in insn 723
changing reg in insn 722
changing reg in insn 723
changing reg in insn 728
changing reg in insn 727
changing reg in insn 732
changing reg in insn 730
changing reg in insn 731
changing reg in insn 731
changing reg in insn 732
changing reg in insn 736
changing reg in insn 742
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 740
changing reg in insn 740
changing reg in insn 741
changing reg in insn 741
changing reg in insn 742
changing reg in insn 746
changing reg in insn 750
changing reg in insn 748
changing reg in insn 749
changing reg in insn 749
changing reg in insn 750
changing reg in insn 759
changing reg in insn 754
changing reg in insn 699
changing reg in insn 678
changing reg in insn 645
changing reg in insn 595
changing reg in insn 538
changing reg in insn 507
changing reg in insn 429
changing reg in insn 359
changing reg in insn 326
changing reg in insn 285
changing reg in insn 243
changing reg in insn 203
changing reg in insn 154
changing reg in insn 124
changing reg in insn 51
changing reg in insn 10
changing reg in insn 762
changing reg in insn 398
changing reg in insn 762
changing reg in insn 766
changing reg in insn 6
changing reg in insn 7
changing reg in insn 15
changing reg in insn 16
changing reg in insn 46
changing reg in insn 47
changing reg in insn 60
changing reg in insn 61
changing reg in insn 74
changing reg in insn 75
changing reg in insn 105
changing reg in insn 106
changing reg in insn 117
changing reg in insn 118
changing reg in insn 147
changing reg in insn 148
changing reg in insn 167
changing reg in insn 168
changing reg in insn 198
changing reg in insn 199
changing reg in insn 211
changing reg in insn 212
changing reg in insn 221
changing reg in insn 222
changing reg in insn 227
changing reg in insn 228
changing reg in insn 236
changing reg in insn 237
changing reg in insn 258
changing reg in insn 259
changing reg in insn 269
changing reg in insn 270
changing reg in insn 278
changing reg in insn 279
changing reg in insn 298
changing reg in insn 299
changing reg in insn 304
changing reg in insn 305
changing reg in insn 310
changing reg in insn 311
changing reg in insn 319
changing reg in insn 320
changing reg in insn 343
changing reg in insn 344
changing reg in insn 352
changing reg in insn 353
changing reg in insn 372
changing reg in insn 373
changing reg in insn 378
changing reg in insn 379
changing reg in insn 380
changing reg in insn 387
changing reg in insn 388
changing reg in insn 399
changing reg in insn 400
changing reg in insn 401
changing reg in insn 422
changing reg in insn 423
changing reg in insn 442
changing reg in insn 443
changing reg in insn 456
changing reg in insn 457
changing reg in insn 487
changing reg in insn 488
changing reg in insn 499
changing reg in insn 500
changing reg in insn 503
changing reg in insn 504
changing reg in insn 530
changing reg in insn 531
changing reg in insn 534
changing reg in insn 535
changing reg in insn 551
changing reg in insn 552
changing reg in insn 562
changing reg in insn 563
changing reg in insn 573
changing reg in insn 574
changing reg in insn 579
changing reg in insn 580
changing reg in insn 588
changing reg in insn 589
changing reg in insn 607
changing reg in insn 608
changing reg in insn 609
changing reg in insn 610
changing reg in insn 612
changing reg in insn 613
changing reg in insn 616
changing reg in insn 617
changing reg in insn 622
changing reg in insn 623
changing reg in insn 629
changing reg in insn 630
changing reg in insn 638
changing reg in insn 639
changing reg in insn 662
changing reg in insn 663
changing reg in insn 671
changing reg in insn 672
changing reg in insn 694
changing reg in insn 695
changing reg in insn 705
changing reg in insn 706
changing reg in insn 707
changing reg in insn 708
changing reg in insn 712
changing reg in insn 713
changing reg in insn 714
changing reg in insn 715
changing reg in insn 719
changing reg in insn 720
changing reg in insn 721
changing reg in insn 722
changing reg in insn 726
changing reg in insn 728
changing reg in insn 729
changing reg in insn 730
changing reg in insn 735
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 745
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
deleting insn with uid = 379.
deleting insn with uid = 400.
deleting insn with uid = 762.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 229.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 271.
verify found no changes in insn with uid = 276.
verify found no changes in insn with uid = 312.
verify found no changes in insn with uid = 317.
verify found no changes in insn with uid = 345.
verify found no changes in insn with uid = 350.
verify found no changes in insn with uid = 415.
verify found no changes in insn with uid = 420.
verify found no changes in insn with uid = 492.
verify found no changes in insn with uid = 497.
verify found no changes in insn with uid = 523.
verify found no changes in insn with uid = 528.
verify found no changes in insn with uid = 581.
verify found no changes in insn with uid = 586.
verify found no changes in insn with uid = 631.
verify found no changes in insn with uid = 636.
verify found no changes in insn with uid = 664.
verify found no changes in insn with uid = 669.


HAL_RCC_OscConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={26d,27u} r1={28d,3u} r2={73d,48u,1e} r3={278d,235u} r7={1d,177u} r12={48d} r13={1d,133u} r14={25d} r15={24d} r16={25d} r17={25d} r18={25d} r19={25d} r20={25d} r21={25d} r22={25d} r23={25d} r24={25d} r25={25d} r26={25d} r27={25d} r28={25d} r29={25d} r30={25d} r31={25d} r48={24d} r49={24d} r50={24d} r51={24d} r52={24d} r53={24d} r54={24d} r55={24d} r56={24d} r57={24d} r58={24d} r59={24d} r60={24d} r61={24d} r62={24d} r63={24d} r64={24d} r65={24d} r66={24d} r67={24d} r68={24d} r69={24d} r70={24d} r71={24d} r72={24d} r73={24d} r74={24d} r75={24d} r76={24d} r77={24d} r78={24d} r79={24d} r80={24d} r81={24d} r82={24d} r83={24d} r84={24d} r85={24d} r86={24d} r87={24d} r88={24d} r89={24d} r90={24d} r91={24d} r92={24d} r93={24d} r94={24d} r95={24d} r96={24d} r97={24d} r98={24d} r99={24d} r100={84d,60u} r101={24d} r102={1d,1u} r104={24d} r105={24d} r106={24d} 
;;    total ref usage 3018{2333d,684u,1e} in 533{509 regular + 24 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 338
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])
        (reg:SI 0 r0 [ RCC_OscInitStruct ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":220:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [338])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":224:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [338])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":224:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":224:6 273 {arm_cond_branch}
     (nil)
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 769 3 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":226:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 769 10 770 3 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":226:12 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:226:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 770 769 13)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 339
(code_label 13 770 14 4 4 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 3 r3 [339])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":232:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 4 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (reg/f:SI 3 r3 [339]) [1 RCC_OscInitStruct_248(D)->OscillatorType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":232:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (and:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":232:44 90 {*arm_andsi3_insn}
     (nil))
(insn 18 17 19 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":232:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":232:6 273 {arm_cond_branch}
     (nil)
 -> 165)
;;  succ:       5 (FALLTHRU)
;;              26
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 116 117
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 5 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:115 _3 ] [115])
                (const_int 8 [0x8])) [1 _3->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 5 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (and:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:10 90 {*arm_andsi3_insn}
     (nil))
(insn 24 23 25 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:8 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       8
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 118 119 120
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 6 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118])
                (const_int 8 [0x8])) [1 _6->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 6 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:11 90 {*arm_andsi3_insn}
     (nil))
(insn 30 29 31 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:61 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":237:61 273 {arm_cond_branch}
     (nil)
 -> 58)
;;  succ:       7 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 121 122 123
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 7 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 4 [0x4])) [1 _9->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 7 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (and:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 4194304 [0x400000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:80 90 {*arm_andsi3_insn}
     (nil))
(insn 36 35 37 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 4194304 [0x400000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:62 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":238:62 273 {arm_cond_branch}
     (nil)
 -> 58)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 124 125 126
(code_label 38 37 39 8 7 (nil) [1 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg/f:SI 3 r3 [orig:124 _12 ] [124])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 8 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem/v:SI (reg/f:SI 3 r3 [orig:124 _12 ] [124]) [1 _12->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 8 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (and:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 131072 [0x20000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:12 90 {*arm_andsi3_insn}
     (nil))
(insn 43 42 44 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 858)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:10 273 {arm_cond_branch}
     (nil)
 -> 858)
;;  succ:       9 (FALLTHRU)
;;              109 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:240:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 127 340
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg/f:SI 3 r3 [340])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 9 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [340])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_248(D)->HSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:127 _15 ] [127])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:58 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 49 48 50 9 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 858)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:58 273 {arm_cond_branch}
     (nil)
 -> 858)
;;  succ:       10 (FALLTHRU)
;;              109 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:240:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 771 10 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":242:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 771 51 772 10 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":242:16 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:242:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 772 771 58)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       6
;;              7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 128 341
(code_label 58 772 59 11 8 (nil) [2 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg/f:SI 3 r3 [341])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 11 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [341])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_248(D)->HSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:128 _16 ] [128])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 63 62 64 11 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 273 {arm_cond_branch}
     (nil)
 -> 72)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 129 130 131 132
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 12 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (mem/v:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129]) [1 _17->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 12 (set (reg/f:SI 2 r2 [orig:131 _19 ] [131])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 12 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (ior:SI (reg:SI 3 r3 [orig:130 _18 ] [130])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 106 {*iorsi3_insn}
     (nil))
(insn 69 68 773 12 (set (mem/v:SI (reg/f:SI 2 r2 [orig:131 _19 ] [131]) [1 _19->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:132 _20 ] [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 773 69 774 12 (set (pc)
        (label_ref 103)) 284 {*arm_jump}
     (nil)
 -> 103)
;;  succ:       16 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 774 773 72)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 133 342
(code_label 72 774 73 13 10 (nil) [1 uses])
(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 13 (set (reg/f:SI 3 r3 [342])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 13 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [342])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_248(D)->HSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 _21 ] [133])
            (const_int 327680 [0x50000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 77 76 78 13 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 273 {arm_cond_branch}
     (nil)
 -> 91)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 134 135 136 137 138 139 140 141
(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 14 (set (reg/f:SI 3 r3 [orig:134 _22 ] [134])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 14 (set (reg:SI 3 r3 [orig:135 _23 ] [135])
        (mem/v:SI (reg/f:SI 3 r3 [orig:134 _22 ] [134]) [1 _22->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 81 80 82 14 (set (reg/f:SI 2 r2 [orig:136 _24 ] [136])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 82 81 83 14 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (ior:SI (reg:SI 3 r3 [orig:135 _23 ] [135])
            (const_int 262144 [0x40000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 106 {*iorsi3_insn}
     (nil))
(insn 83 82 84 14 (set (mem/v:SI (reg/f:SI 2 r2 [orig:136 _24 ] [136]) [1 _24->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:137 _25 ] [137])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 14 (set (reg/f:SI 3 r3 [orig:138 _26 ] [138])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 14 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (mem/v:SI (reg/f:SI 3 r3 [orig:138 _26 ] [138]) [1 _26->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 86 85 87 14 (set (reg/f:SI 2 r2 [orig:140 _28 ] [140])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 14 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (ior:SI (reg:SI 3 r3 [orig:139 _27 ] [139])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 106 {*iorsi3_insn}
     (nil))
(insn 88 87 775 14 (set (mem/v:SI (reg/f:SI 2 r2 [orig:140 _28 ] [140]) [1 _28->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:141 _29 ] [141])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 775 88 776 14 (set (pc)
        (label_ref 103)) 284 {*arm_jump}
     (nil)
 -> 103)
;;  succ:       16 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 776 775 91)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 142 143 144 145 146 147 148 149
(code_label 91 776 92 15 12 (nil) [1 uses])
(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (set (reg/f:SI 3 r3 [orig:142 _30 ] [142])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 95 15 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:142 _30 ] [142]) [1 _30->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 95 94 96 15 (set (reg/f:SI 2 r2 [orig:144 _32 ] [144])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 15 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (and:SI (reg:SI 3 r3 [orig:143 _31 ] [143])
            (const_int -65537 [0xfffffffffffeffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 90 {*arm_andsi3_insn}
     (nil))
(insn 97 96 98 15 (set (mem/v:SI (reg/f:SI 2 r2 [orig:144 _32 ] [144]) [1 _32->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:145 _33 ] [145])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 15 (set (reg/f:SI 3 r3 [orig:146 _34 ] [146])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 100 15 (set (reg:SI 3 r3 [orig:147 _35 ] [147])
        (mem/v:SI (reg/f:SI 3 r3 [orig:146 _34 ] [146]) [1 _34->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 100 99 101 15 (set (reg/f:SI 2 r2 [orig:148 _36 ] [148])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 15 (set (reg:SI 3 r3 [orig:149 _37 ] [149])
        (and:SI (reg:SI 3 r3 [orig:147 _35 ] [147])
            (const_int -262145 [0xfffffffffffbffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 90 {*arm_andsi3_insn}
     (nil))
(insn 102 101 103 15 (set (mem/v:SI (reg/f:SI 2 r2 [orig:148 _36 ] [148]) [1 _36->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:149 _37 ] [149])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":248:7 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              12 [always] 
;;              14 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 150 343
(code_label 103 102 104 16 11 (nil) [2 uses])
(note 104 103 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 16 (set (reg/f:SI 3 r3 [343])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":251:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 106 105 107 16 (set (reg:SI 3 r3 [orig:150 _38 ] [150])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [343])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_248(D)->HSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":251:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 107 106 108 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:150 _38 ] [150])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":251:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 108 107 109 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":251:10 273 {arm_cond_branch}
     (nil)
 -> 138)
;;  succ:       17 (FALLTHRU)
;;              22
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn 110 109 111 17 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":254:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 111 110 777 17 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":254:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 777 111 778 17 (set (pc)
        (label_ref 127)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":257:15 284 {*arm_jump}
     (nil)
 -> 127)
;;  succ:       20 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:257:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 778 777 132)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 151 152 344
(code_label 132 778 114 18 15 (nil) [1 uses])
(note 114 132 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 115 114 116 18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":259:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 116 115 117 18 (set (reg:SI 2 r2 [orig:151 _39 ] [151])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":259:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 117 116 118 18 (set (reg:SI 3 r3 [344])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":259:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 118 117 121 18 (set (reg:SI 3 r3 [orig:152 _40 ] [152])
        (minus:SI (reg:SI 2 r2 [orig:151 _39 ] [151])
            (reg:SI 3 r3 [344]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":259:30 45 {*arm_subsi3_insn}
     (nil))
(insn 121 118 122 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:152 _40 ] [152])
            (const_int 100 [0x64]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":259:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 122 121 123 18 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":259:14 273 {arm_cond_branch}
     (nil)
 -> 127)
;;  succ:       19 (FALLTHRU)
;;              20 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 123 122 124 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 779 19 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":261:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 779 124 780 19 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":261:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:261:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 780 779 127)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       18 (DFS_BACK)
;;              17 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:257:15
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 153 154 155
(code_label 127 780 128 20 14 (nil) [2 uses])
(note 128 127 129 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 20 (set (reg/f:SI 3 r3 [orig:153 _41 ] [153])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":257:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 130 129 131 20 (set (reg:SI 3 r3 [orig:154 _42 ] [154])
        (mem/v:SI (reg/f:SI 3 r3 [orig:153 _41 ] [153]) [1 _41->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":257:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 133 20 (set (reg:SI 3 r3 [orig:155 _43 ] [155])
        (and:SI (reg:SI 3 r3 [orig:154 _42 ] [154])
            (const_int 131072 [0x20000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":257:16 90 {*arm_andsi3_insn}
     (nil))
(insn 133 131 134 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:155 _43 ] [155])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":257:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 134 133 781 20 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":257:52 273 {arm_cond_branch}
     (nil)
 -> 132)
;;  succ:       18
;;              21 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 781 134 782 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 782 781 783 21 (set (pc)
        (label_ref 165)) 284 {*arm_jump}
     (nil)
 -> 165)
;;  succ:       26 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 783 782 138)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 138 783 139 22 13 (nil) [1 uses])
(note 139 138 140 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 140 139 141 22 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":268:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 141 140 784 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":268:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 784 141 785 22 (set (pc)
        (label_ref 157)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":271:15 284 {*arm_jump}
     (nil)
 -> 157)
;;  succ:       25 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:271:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 785 784 162)
;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       25
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 156 157 345
(code_label 162 785 144 23 17 (nil) [1 uses])
(note 144 162 145 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn 145 144 146 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":273:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 146 145 147 23 (set (reg:SI 2 r2 [orig:156 _44 ] [156])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":273:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 147 146 148 23 (set (reg:SI 3 r3 [345])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":273:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 148 147 151 23 (set (reg:SI 3 r3 [orig:157 _45 ] [157])
        (minus:SI (reg:SI 2 r2 [orig:156 _44 ] [156])
            (reg:SI 3 r3 [345]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":273:30 45 {*arm_subsi3_insn}
     (nil))
(insn 151 148 152 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:157 _45 ] [157])
            (const_int 100 [0x64]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":273:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 152 151 153 23 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":273:14 273 {arm_cond_branch}
     (nil)
 -> 157)
;;  succ:       24 (FALLTHRU)
;;              25 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 153 152 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 786 24 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":275:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 786 154 787 24 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":275:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:275:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 787 786 157)
;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 108, flags: (RTL, MODIFIED)
;;  pred:       23 (DFS_BACK)
;;              22 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:271:15
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 158 159 160
(code_label 157 787 158 25 16 (nil) [2 uses])
(note 158 157 159 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 25 (set (reg/f:SI 3 r3 [orig:158 _46 ] [158])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":271:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 160 159 161 25 (set (reg:SI 3 r3 [orig:159 _47 ] [159])
        (mem/v:SI (reg/f:SI 3 r3 [orig:158 _46 ] [158]) [1 _46->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":271:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 161 160 163 25 (set (reg:SI 3 r3 [orig:160 _48 ] [160])
        (and:SI (reg:SI 3 r3 [orig:159 _47 ] [159])
            (const_int 131072 [0x20000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":271:16 90 {*arm_andsi3_insn}
     (nil))
(insn 163 161 164 25 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:160 _48 ] [160])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":271:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 164 163 854 25 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":271:52 273 {arm_cond_branch}
     (nil)
 -> 162)
;;  succ:       23
;;              108 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 108, loop depth 0, maybe hot
;;  prev block 25, next block 109, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 854 164 855 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(jump_insn 855 854 856 108 (set (pc)
        (label_ref 165)) 284 {*arm_jump}
     (nil)
 -> 165)
;;  succ:       26 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 856 855 858)
;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 26, flags: (RTL, MODIFIED)
;;  pred:       9 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:240:10
;;              8 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:240:10
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 858 856 857 109 58 (nil) [2 uses])
(note 857 858 859 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 859 857 165 109 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":240:10 313 {nop}
     (nil))
;;  succ:       26 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 109, next block 27, flags: (RTL, MODIFIED)
;;  pred:       4
;;              109 [always]  (FALLTHRU)
;;              21 [always] 
;;              108 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 161 162 346
(code_label 165 859 166 26 6 (nil) [3 uses])
(note 166 165 167 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 26 (set (reg/f:SI 3 r3 [346])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":282:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 168 167 169 26 (set (reg:SI 3 r3 [orig:161 _49 ] [161])
        (mem:SI (reg/f:SI 3 r3 [346]) [1 RCC_OscInitStruct_248(D)->OscillatorType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":282:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 169 168 170 26 (set (reg:SI 3 r3 [orig:162 _50 ] [162])
        (and:SI (reg:SI 3 r3 [orig:161 _49 ] [161])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":282:44 90 {*arm_andsi3_insn}
     (nil))
(insn 170 169 171 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:162 _50 ] [162])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":282:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 171 170 172 26 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":282:6 273 {arm_cond_branch}
     (nil)
 -> 296)
;;  succ:       27 (FALLTHRU)
;;              44
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 163 164 165
(note 172 171 173 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 27 (set (reg/f:SI 3 r3 [orig:163 _51 ] [163])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 174 173 175 27 (set (reg:SI 3 r3 [orig:164 _52 ] [164])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:163 _51 ] [163])
                (const_int 8 [0x8])) [1 _51->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 175 174 176 27 (set (reg:SI 3 r3 [orig:165 _53 ] [165])
        (and:SI (reg:SI 3 r3 [orig:164 _52 ] [164])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:10 90 {*arm_andsi3_insn}
     (nil))
(insn 176 175 177 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:165 _53 ] [165])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 177 176 178 27 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:8 273 {arm_cond_branch}
     (nil)
 -> 190)
;;  succ:       30
;;              28 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 166 167 168
(note 178 177 179 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 28 (set (reg/f:SI 3 r3 [orig:166 _54 ] [166])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 180 179 181 28 (set (reg:SI 3 r3 [orig:167 _55 ] [167])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:166 _54 ] [166])
                (const_int 8 [0x8])) [1 _54->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 181 180 182 28 (set (reg:SI 3 r3 [orig:168 _56 ] [168])
        (and:SI (reg:SI 3 r3 [orig:167 _55 ] [167])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:11 90 {*arm_andsi3_insn}
     (nil))
(insn 182 181 183 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:168 _56 ] [168])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:61 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 183 182 184 28 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":289:61 273 {arm_cond_branch}
     (nil)
 -> 219)
;;  succ:       29 (FALLTHRU)
;;              34
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 169 170 171
(note 184 183 185 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 29 (set (reg/f:SI 3 r3 [orig:169 _57 ] [169])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 186 185 187 29 (set (reg:SI 3 r3 [orig:170 _58 ] [170])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:169 _57 ] [169])
                (const_int 4 [0x4])) [1 _57->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 187 186 188 29 (set (reg:SI 3 r3 [orig:171 _59 ] [171])
        (and:SI (reg:SI 3 r3 [orig:170 _58 ] [170])
            (const_int 4194304 [0x400000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:80 90 {*arm_andsi3_insn}
     (nil))
(insn 188 187 189 29 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:171 _59 ] [171])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:62 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 189 188 190 29 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":290:62 273 {arm_cond_branch}
     (nil)
 -> 219)
;;  succ:       30 (FALLTHRU)
;;              34
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       27
;;              29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 172 173 174
(code_label 190 189 191 30 19 (nil) [1 uses])
(note 191 190 192 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 30 (set (reg/f:SI 3 r3 [orig:172 _60 ] [172])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 193 192 194 30 (set (reg:SI 3 r3 [orig:173 _61 ] [173])
        (mem/v:SI (reg/f:SI 3 r3 [orig:172 _60 ] [172]) [1 _60->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 194 193 195 30 (set (reg:SI 3 r3 [orig:174 _62 ] [174])
        (and:SI (reg:SI 3 r3 [orig:173 _61 ] [173])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:12 90 {*arm_andsi3_insn}
     (nil))
(insn 195 194 196 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:174 _62 ] [174])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 196 195 197 30 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:10 273 {arm_cond_branch}
     (nil)
 -> 206)
;;  succ:       31 (FALLTHRU)
;;              33
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 175 347
(note 197 196 198 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 31 (set (reg/f:SI 3 r3 [347])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 199 198 200 31 (set (reg:SI 3 r3 [orig:175 _63 ] [175])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [347])
                (const_int 12 [0xc])) [1 RCC_OscInitStruct_248(D)->HSIState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 200 199 201 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:175 _63 ] [175])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:58 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 201 200 202 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:58 273 {arm_cond_branch}
     (nil)
 -> 206)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 202 201 203 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 788 32 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":295:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 788 203 789 32 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":295:16 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:295:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 789 788 206)
;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       30
;;              31
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 176 177 178 179 180 181 182 348
(code_label 206 789 207 33 21 (nil) [2 uses])
(note 207 206 208 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 33 (set (reg/f:SI 3 r3 [orig:176 _64 ] [176])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 209 208 210 33 (set (reg:SI 3 r3 [orig:177 _65 ] [177])
        (mem/v:SI (reg/f:SI 3 r3 [orig:176 _64 ] [176]) [1 _64->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 210 209 211 33 (set (reg:SI 2 r2 [orig:178 _66 ] [178])
        (and:SI (reg:SI 3 r3 [orig:177 _65 ] [177])
            (const_int -249 [0xffffffffffffff07]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 90 {*arm_andsi3_insn}
     (nil))
(insn 211 210 212 33 (set (reg/f:SI 3 r3 [348])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 212 211 213 33 (set (reg:SI 3 r3 [orig:179 _67 ] [179])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [348])
                (const_int 16 [0x10])) [1 RCC_OscInitStruct_248(D)->HSICalibrationValue+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 213 212 214 33 (set (reg:SI 3 r3 [orig:180 _68 ] [180])
        (ashift:SI (reg:SI 3 r3 [orig:179 _67 ] [179])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 147 {*arm_shiftsi3}
     (nil))
(insn 214 213 215 33 (set (reg/f:SI 1 r1 [orig:181 _69 ] [181])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 215 214 216 33 (set (reg:SI 3 r3 [orig:182 _70 ] [182])
        (ior:SI (reg:SI 3 r3 [orig:180 _68 ] [180])
            (reg:SI 2 r2 [orig:178 _66 ] [178]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 106 {*iorsi3_insn}
     (nil))
(insn 216 215 790 33 (set (mem/v:SI (reg/f:SI 1 r1 [orig:181 _69 ] [181]) [1 _69->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:182 _70 ] [182])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":301:9 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 790 216 791 33 (set (pc)
        (label_ref 296)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":293:10 284 {*arm_jump}
     (nil)
 -> 296)
;;  succ:       44 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:293:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 791 790 219)
;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       28
;;              29
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 183 349
(code_label 219 791 220 34 20 (nil) [2 uses])
(note 220 219 221 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 34 (set (reg/f:SI 3 r3 [349])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":307:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 222 221 223 34 (set (reg:SI 3 r3 [orig:183 _71 ] [183])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [349])
                (const_int 12 [0xc])) [1 RCC_OscInitStruct_248(D)->HSIState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":307:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 223 222 224 34 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:183 _71 ] [183])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":307:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 224 223 225 34 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":307:10 273 {arm_cond_branch}
     (nil)
 -> 266)
;;  succ:       35 (FALLTHRU)
;;              40
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 184 350
(note 225 224 226 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 35 (set (reg/f:SI 3 r3 [orig:184 _72 ] [184])
        (const_int 1111949312 [0x42470000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":310:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 227 226 228 35 (set (reg:SI 2 r2 [350])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":310:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 228 227 229 35 (set (mem/v:SI (reg/f:SI 3 r3 [orig:184 _72 ] [184]) [1 *_72+0 S4 A32])
        (reg:SI 2 r2 [350])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":310:9 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 229 228 230 35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":313:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 230 229 792 35 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":313:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 792 230 793 35 (set (pc)
        (label_ref 246)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":316:15 284 {*arm_jump}
     (nil)
 -> 246)
;;  succ:       38 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:316:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 793 792 251)
;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       38
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 185 186 351
(code_label 251 793 233 36 24 (nil) [1 uses])
(note 233 251 234 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(call_insn 234 233 235 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":318:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 235 234 236 36 (set (reg:SI 2 r2 [orig:185 _73 ] [185])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":318:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 236 235 237 36 (set (reg:SI 3 r3 [351])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":318:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 237 236 240 36 (set (reg:SI 3 r3 [orig:186 _74 ] [186])
        (minus:SI (reg:SI 2 r2 [orig:185 _73 ] [185])
            (reg:SI 3 r3 [351]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":318:30 45 {*arm_subsi3_insn}
     (nil))
(insn 240 237 241 36 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:186 _74 ] [186])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":318:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 241 240 242 36 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":318:14 273 {arm_cond_branch}
     (nil)
 -> 246)
;;  succ:       37 (FALLTHRU)
;;              38 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 242 241 243 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 794 37 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":320:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 794 243 795 37 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":320:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:320:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 795 794 246)
;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       36 (DFS_BACK)
;;              35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:316:15
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 187 188 189
(code_label 246 795 247 38 23 (nil) [2 uses])
(note 247 246 248 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 38 (set (reg/f:SI 3 r3 [orig:187 _75 ] [187])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":316:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 249 248 250 38 (set (reg:SI 3 r3 [orig:188 _76 ] [188])
        (mem/v:SI (reg/f:SI 3 r3 [orig:187 _75 ] [187]) [1 _75->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":316:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 250 249 252 38 (set (reg:SI 3 r3 [orig:189 _77 ] [189])
        (and:SI (reg:SI 3 r3 [orig:188 _76 ] [188])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":316:16 90 {*arm_andsi3_insn}
     (nil))
(insn 252 250 253 38 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:189 _77 ] [189])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":316:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 253 252 254 38 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 251)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":316:52 273 {arm_cond_branch}
     (nil)
 -> 251)
;;  succ:       36
;;              39 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 190 191 192 193 194 195 196 352
(note 254 253 255 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 39 (set (reg/f:SI 3 r3 [orig:190 _78 ] [190])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 256 255 257 39 (set (reg:SI 3 r3 [orig:191 _79 ] [191])
        (mem/v:SI (reg/f:SI 3 r3 [orig:190 _78 ] [190]) [1 _78->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 257 256 258 39 (set (reg:SI 2 r2 [orig:192 _80 ] [192])
        (and:SI (reg:SI 3 r3 [orig:191 _79 ] [191])
            (const_int -249 [0xffffffffffffff07]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 90 {*arm_andsi3_insn}
     (nil))
(insn 258 257 259 39 (set (reg/f:SI 3 r3 [352])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 259 258 260 39 (set (reg:SI 3 r3 [orig:193 _81 ] [193])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [352])
                (const_int 16 [0x10])) [1 RCC_OscInitStruct_248(D)->HSICalibrationValue+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 260 259 261 39 (set (reg:SI 3 r3 [orig:194 _82 ] [194])
        (ashift:SI (reg:SI 3 r3 [orig:193 _81 ] [193])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 147 {*arm_shiftsi3}
     (nil))
(insn 261 260 262 39 (set (reg/f:SI 1 r1 [orig:195 _83 ] [195])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 262 261 263 39 (set (reg:SI 3 r3 [orig:196 _84 ] [196])
        (ior:SI (reg:SI 3 r3 [orig:194 _82 ] [194])
            (reg:SI 2 r2 [orig:192 _80 ] [192]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 106 {*iorsi3_insn}
     (nil))
(insn 263 262 796 39 (set (mem/v:SI (reg/f:SI 1 r1 [orig:195 _83 ] [195]) [1 _83->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:196 _84 ] [196])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":325:9 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 796 263 797 39 (set (pc)
        (label_ref 296)) 284 {*arm_jump}
     (nil)
 -> 296)
;;  succ:       44 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 797 796 266)
;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       34
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 197 353
(code_label 266 797 267 40 22 (nil) [1 uses])
(note 267 266 268 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 40 (set (reg/f:SI 3 r3 [orig:197 _85 ] [197])
        (const_int 1111949312 [0x42470000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":330:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 269 268 270 40 (set (reg:SI 2 r2 [353])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":330:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 270 269 271 40 (set (mem/v:SI (reg/f:SI 3 r3 [orig:197 _85 ] [197]) [1 *_85+0 S4 A32])
        (reg:SI 2 r2 [353])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":330:9 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 271 270 272 40 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":333:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 272 271 798 40 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":333:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 798 272 799 40 (set (pc)
        (label_ref 288)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":336:15 284 {*arm_jump}
     (nil)
 -> 288)
;;  succ:       43 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:336:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 799 798 293)
;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       43
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 198 199 354
(code_label 293 799 275 41 26 (nil) [1 uses])
(note 275 293 276 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(call_insn 276 275 277 41 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":338:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 277 276 278 41 (set (reg:SI 2 r2 [orig:198 _86 ] [198])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":338:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 278 277 279 41 (set (reg:SI 3 r3 [354])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":338:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 279 278 282 41 (set (reg:SI 3 r3 [orig:199 _87 ] [199])
        (minus:SI (reg:SI 2 r2 [orig:198 _86 ] [198])
            (reg:SI 3 r3 [354]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":338:30 45 {*arm_subsi3_insn}
     (nil))
(insn 282 279 283 41 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:199 _87 ] [199])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":338:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 283 282 284 41 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":338:14 273 {arm_cond_branch}
     (nil)
 -> 288)
;;  succ:       42 (FALLTHRU)
;;              43 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 284 283 285 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 800 42 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":340:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 800 285 801 42 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":340:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:340:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 801 800 288)
;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       41 (DFS_BACK)
;;              40 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:336:15
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 200 201 202
(code_label 288 801 289 43 25 (nil) [2 uses])
(note 289 288 290 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 43 (set (reg/f:SI 3 r3 [orig:200 _88 ] [200])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":336:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 291 290 292 43 (set (reg:SI 3 r3 [orig:201 _89 ] [201])
        (mem/v:SI (reg/f:SI 3 r3 [orig:200 _88 ] [200]) [1 _88->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":336:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 292 291 294 43 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (and:SI (reg:SI 3 r3 [orig:201 _89 ] [201])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":336:16 90 {*arm_andsi3_insn}
     (nil))
(insn 294 292 295 43 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:202 _90 ] [202])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":336:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 295 294 296 43 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":336:52 273 {arm_cond_branch}
     (nil)
 -> 293)
;;  succ:       41
;;              44 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       26
;;              43 (FALLTHRU)
;;              33 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:293:10
;;              39 [always] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 203 204 355
(code_label 296 295 297 44 18 (nil) [3 uses])
(note 297 296 298 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 44 (set (reg/f:SI 3 r3 [355])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":347:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 299 298 300 44 (set (reg:SI 3 r3 [orig:203 _91 ] [203])
        (mem:SI (reg/f:SI 3 r3 [355]) [1 RCC_OscInitStruct_248(D)->OscillatorType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":347:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 300 299 301 44 (set (reg:SI 3 r3 [orig:204 _92 ] [204])
        (and:SI (reg:SI 3 r3 [orig:203 _91 ] [203])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":347:44 90 {*arm_andsi3_insn}
     (nil))
(insn 301 300 302 44 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:204 _92 ] [204])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":347:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 302 301 303 44 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 370)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":347:6 273 {arm_cond_branch}
     (nil)
 -> 370)
;;  succ:       45 (FALLTHRU)
;;              55
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 205 356
(note 303 302 304 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 45 (set (reg/f:SI 3 r3 [356])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":353:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 305 304 306 45 (set (reg:SI 3 r3 [orig:205 _93 ] [205])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [356])
                (const_int 20 [0x14])) [1 RCC_OscInitStruct_248(D)->LSIState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":353:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 306 305 307 45 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:205 _93 ] [205])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":353:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 307 306 308 45 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 340)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":353:8 273 {arm_cond_branch}
     (nil)
 -> 340)
;;  succ:       46 (FALLTHRU)
;;              51
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 206 357
(note 308 307 309 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 46 (set (reg/f:SI 3 r3 [orig:206 _94 ] [206])
        (const_int 1111953024 [0x42470e80])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":356:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 310 309 311 46 (set (reg:SI 2 r2 [357])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":356:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 311 310 312 46 (set (mem/v:SI (reg/f:SI 3 r3 [orig:206 _94 ] [206]) [1 *_94+0 S4 A32])
        (reg:SI 2 r2 [357])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":356:7 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 312 311 313 46 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":359:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 313 312 802 46 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":359:19 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 802 313 803 46 (set (pc)
        (label_ref 329)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":362:13 284 {*arm_jump}
     (nil)
 -> 329)
;;  succ:       49 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:362:13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 803 802 334)
;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       49
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 207 208 358
(code_label 334 803 316 47 30 (nil) [1 uses])
(note 316 334 317 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(call_insn 317 316 318 47 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":364:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 318 317 319 47 (set (reg:SI 2 r2 [orig:207 _95 ] [207])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":364:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 319 318 320 47 (set (reg:SI 3 r3 [358])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":364:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 320 319 323 47 (set (reg:SI 3 r3 [orig:208 _96 ] [208])
        (minus:SI (reg:SI 2 r2 [orig:207 _95 ] [207])
            (reg:SI 3 r3 [358]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":364:28 45 {*arm_subsi3_insn}
     (nil))
(insn 323 320 324 47 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:208 _96 ] [208])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":364:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 324 323 325 47 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":364:12 273 {arm_cond_branch}
     (nil)
 -> 329)
;;  succ:       48 (FALLTHRU)
;;              49 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 325 324 326 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 804 48 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":366:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 804 326 805 48 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":366:18 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:366:18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 805 804 329)
;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       47 (DFS_BACK)
;;              46 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:362:13
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 209 210 211
(code_label 329 805 330 49 29 (nil) [2 uses])
(note 330 329 331 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 49 (set (reg/f:SI 3 r3 [orig:209 _97 ] [209])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":362:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 332 331 333 49 (set (reg:SI 3 r3 [orig:210 _98 ] [210])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:209 _97 ] [209])
                (const_int 116 [0x74])) [1 _97->CSR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":362:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 333 332 335 49 (set (reg:SI 3 r3 [orig:211 _99 ] [211])
        (and:SI (reg:SI 3 r3 [orig:210 _98 ] [210])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":362:14 90 {*arm_andsi3_insn}
     (nil))
(insn 335 333 336 49 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:211 _99 ] [211])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":362:50 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 336 335 806 49 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":362:50 273 {arm_cond_branch}
     (nil)
 -> 334)
;;  succ:       47
;;              50 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 806 336 807 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 807 806 808 50 (set (pc)
        (label_ref 370)) 284 {*arm_jump}
     (nil)
 -> 370)
;;  succ:       55 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 808 807 340)
;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       45
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 212 359
(code_label 340 808 341 51 28 (nil) [1 uses])
(note 341 340 342 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 51 (set (reg/f:SI 3 r3 [orig:212 _100 ] [212])
        (const_int 1111953024 [0x42470e80])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":373:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 343 342 344 51 (set (reg:SI 2 r2 [359])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":373:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 344 343 345 51 (set (mem/v:SI (reg/f:SI 3 r3 [orig:212 _100 ] [212]) [1 *_100+0 S4 A32])
        (reg:SI 2 r2 [359])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":373:7 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 345 344 346 51 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":376:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 346 345 809 51 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":376:19 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 809 346 810 51 (set (pc)
        (label_ref 362)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":379:13 284 {*arm_jump}
     (nil)
 -> 362)
;;  succ:       54 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:379:13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 810 809 367)
;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       54
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 213 214 360
(code_label 367 810 349 52 32 (nil) [1 uses])
(note 349 367 350 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(call_insn 350 349 351 52 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":381:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 351 350 352 52 (set (reg:SI 2 r2 [orig:213 _101 ] [213])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":381:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 352 351 353 52 (set (reg:SI 3 r3 [360])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":381:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 353 352 356 52 (set (reg:SI 3 r3 [orig:214 _102 ] [214])
        (minus:SI (reg:SI 2 r2 [orig:213 _101 ] [213])
            (reg:SI 3 r3 [360]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":381:28 45 {*arm_subsi3_insn}
     (nil))
(insn 356 353 357 52 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:214 _102 ] [214])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":381:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 357 356 358 52 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":381:12 273 {arm_cond_branch}
     (nil)
 -> 362)
;;  succ:       53 (FALLTHRU)
;;              54 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 358 357 359 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 811 53 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":383:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 811 359 812 53 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":383:18 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:383:18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 812 811 362)
;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       52 (DFS_BACK)
;;              51 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:379:13
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 215 216 217
(code_label 362 812 363 54 31 (nil) [2 uses])
(note 363 362 364 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 54 (set (reg/f:SI 3 r3 [orig:215 _103 ] [215])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":379:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 365 364 366 54 (set (reg:SI 3 r3 [orig:216 _104 ] [216])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:215 _103 ] [215])
                (const_int 116 [0x74])) [1 _103->CSR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":379:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 366 365 368 54 (set (reg:SI 3 r3 [orig:217 _105 ] [217])
        (and:SI (reg:SI 3 r3 [orig:216 _104 ] [216])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":379:14 90 {*arm_andsi3_insn}
     (nil))
(insn 368 366 369 54 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:217 _105 ] [217])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":379:50 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 369 368 370 54 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 367)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":379:50 273 {arm_cond_branch}
     (nil)
 -> 367)
;;  succ:       52
;;              55 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       44
;;              54 (FALLTHRU)
;;              50 [always] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 218 219 361
(code_label 370 369 371 55 27 (nil) [2 uses])
(note 371 370 372 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 55 (set (reg/f:SI 3 r3 [361])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":389:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 373 372 374 55 (set (reg:SI 3 r3 [orig:218 _106 ] [218])
        (mem:SI (reg/f:SI 3 r3 [361]) [1 RCC_OscInitStruct_248(D)->OscillatorType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":389:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 374 373 375 55 (set (reg:SI 3 r3 [orig:219 _107 ] [219])
        (and:SI (reg:SI 3 r3 [orig:218 _106 ] [218])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":389:44 90 {*arm_andsi3_insn}
     (nil))
(insn 375 374 376 55 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:219 _107 ] [219])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":389:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 376 375 377 55 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 560)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":389:6 273 {arm_cond_branch}
     (nil)
 -> 560)
;;  succ:       56 (FALLTHRU)
;;              80
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 220 221 222 362 363
(note 377 376 378 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 380 56 (set (reg:SI 3 r3 [362])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":391:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 380 378 381 56 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 pwrclkchanged+0 S1 A8])
        (reg:QI 3 r3 [363])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":391:22 263 {*arm_movqi_insn}
     (nil))
(insn 381 380 382 56 (set (reg/f:SI 3 r3 [orig:220 _108 ] [220])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":398:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 382 381 383 56 (set (reg:SI 3 r3 [orig:221 _109 ] [221])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:220 _108 ] [220])
                (const_int 64 [0x40])) [1 _108->APB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":398:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 383 382 384 56 (set (reg:SI 3 r3 [orig:222 _110 ] [222])
        (and:SI (reg:SI 3 r3 [orig:221 _109 ] [221])
            (const_int 268435456 [0x10000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":398:9 90 {*arm_andsi3_insn}
     (nil))
(insn 384 383 385 56 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:222 _110 ] [222])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":398:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 385 384 386 56 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 402)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":398:8 273 {arm_cond_branch}
     (nil)
 -> 402)
;;  succ:       57 (FALLTHRU)
;;              58
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 223 224 225 226 227 228 229 336 364 365 366
(note 386 385 387 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 388 57 (set (reg:SI 3 r3 [364])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 388 387 389 57 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmpreg+0 S4 A64])
        (reg:SI 3 r3 [364])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 389 388 390 57 (set (reg/f:SI 3 r3 [orig:223 _111 ] [223])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 390 389 391 57 (set (reg:SI 3 r3 [orig:224 _112 ] [224])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:223 _111 ] [223])
                (const_int 64 [0x40])) [1 _111->APB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 391 390 392 57 (set (reg/f:SI 2 r2 [orig:225 _113 ] [225])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 392 391 393 57 (set (reg:SI 3 r3 [orig:226 _114 ] [226])
        (ior:SI (reg:SI 3 r3 [orig:224 _112 ] [224])
            (const_int 268435456 [0x10000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 106 {*iorsi3_insn}
     (nil))
(insn 393 392 394 57 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:225 _113 ] [225])
                (const_int 64 [0x40])) [1 _113->APB1ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:226 _114 ] [226])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 394 393 395 57 (set (reg/f:SI 3 r3 [orig:227 _115 ] [227])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 395 394 396 57 (set (reg:SI 3 r3 [orig:228 _116 ] [228])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:227 _115 ] [227])
                (const_int 64 [0x40])) [1 _115->APB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 396 395 397 57 (set (reg:SI 3 r3 [orig:229 _117 ] [229])
        (and:SI (reg:SI 3 r3 [orig:228 _116 ] [228])
            (const_int 268435456 [0x10000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 90 {*arm_andsi3_insn}
     (nil))
(insn 397 396 398 57 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmpreg+0 S4 A64])
        (reg:SI 3 r3 [orig:229 _117 ] [229])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 398 397 399 57 (set (reg:SI 3 r3 [orig:336 vol.0_291 ] [336])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmpreg+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":400:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 399 398 401 57 (set (reg:SI 3 r3 [365])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":401:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 401 399 402 57 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 pwrclkchanged+0 S1 A8])
        (reg:QI 3 r3 [366])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":401:21 263 {*arm_movqi_insn}
     (nil))
;;  succ:       58 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (RTL, MODIFIED)
;;  pred:       56
;;              57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 230 231 232
(code_label 402 401 403 58 34 (nil) [1 uses])
(note 403 402 404 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 58 (set (reg/f:SI 3 r3 [orig:230 _118 ] [230])
        (const_int 1073770496 [0x40007000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":404:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 405 404 406 58 (set (reg:SI 3 r3 [orig:231 _119 ] [231])
        (mem/v:SI (reg/f:SI 3 r3 [orig:230 _118 ] [230]) [1 _118->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":404:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 406 405 407 58 (set (reg:SI 3 r3 [orig:232 _120 ] [232])
        (and:SI (reg:SI 3 r3 [orig:231 _119 ] [231])
            (const_int 256 [0x100]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":404:9 90 {*arm_andsi3_insn}
     (nil))
(insn 407 406 408 58 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:232 _120 ] [232])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":404:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 408 407 409 58 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 440)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":404:8 273 {arm_cond_branch}
     (nil)
 -> 440)
;;  succ:       59 (FALLTHRU)
;;              63
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 233 234 235 236
(note 409 408 410 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 59 (set (reg/f:SI 3 r3 [orig:233 _121 ] [233])
        (const_int 1073770496 [0x40007000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":407:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 411 410 412 59 (set (reg:SI 3 r3 [orig:234 _122 ] [234])
        (mem/v:SI (reg/f:SI 3 r3 [orig:233 _121 ] [233]) [1 _121->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":407:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 412 411 413 59 (set (reg/f:SI 2 r2 [orig:235 _123 ] [235])
        (const_int 1073770496 [0x40007000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":407:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 413 412 414 59 (set (reg:SI 3 r3 [orig:236 _124 ] [236])
        (ior:SI (reg:SI 3 r3 [orig:234 _122 ] [234])
            (const_int 256 [0x100]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":407:7 106 {*iorsi3_insn}
     (nil))
(insn 414 413 415 59 (set (mem/v:SI (reg/f:SI 2 r2 [orig:235 _123 ] [235]) [1 _123->CR+0 S4 A32])
        (reg:SI 3 r3 [orig:236 _124 ] [236])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":407:7 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 415 414 416 59 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":410:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 416 415 813 59 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":410:19 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 813 416 814 59 (set (pc)
        (label_ref 432)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":412:13 284 {*arm_jump}
     (nil)
 -> 432)
;;  succ:       62 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:412:13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 814 813 437)
;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       62
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 237 238 367
(code_label 437 814 419 60 37 (nil) [1 uses])
(note 419 437 420 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(call_insn 420 419 421 60 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":414:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 421 420 422 60 (set (reg:SI 2 r2 [orig:237 _125 ] [237])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":414:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 422 421 423 60 (set (reg:SI 3 r3 [367])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":414:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 423 422 426 60 (set (reg:SI 3 r3 [orig:238 _126 ] [238])
        (minus:SI (reg:SI 2 r2 [orig:237 _125 ] [237])
            (reg:SI 3 r3 [367]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":414:28 45 {*arm_subsi3_insn}
     (nil))
(insn 426 423 427 60 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:238 _126 ] [238])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":414:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 427 426 428 60 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":414:12 273 {arm_cond_branch}
     (nil)
 -> 432)
;;  succ:       61 (FALLTHRU)
;;              62 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 428 427 429 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 815 61 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":416:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 815 429 816 61 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":416:18 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:416:18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 816 815 432)
;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       60 (DFS_BACK)
;;              59 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:412:13
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 239 240 241
(code_label 432 816 433 62 36 (nil) [2 uses])
(note 433 432 434 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 62 (set (reg/f:SI 3 r3 [orig:239 _127 ] [239])
        (const_int 1073770496 [0x40007000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":412:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 435 434 436 62 (set (reg:SI 3 r3 [orig:240 _128 ] [240])
        (mem/v:SI (reg/f:SI 3 r3 [orig:239 _127 ] [239]) [1 _127->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":412:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 436 435 438 62 (set (reg:SI 3 r3 [orig:241 _129 ] [241])
        (and:SI (reg:SI 3 r3 [orig:240 _128 ] [240])
            (const_int 256 [0x100]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":412:14 90 {*arm_andsi3_insn}
     (nil))
(insn 438 436 439 62 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:241 _129 ] [241])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":412:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 439 438 440 62 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":412:14 273 {arm_cond_branch}
     (nil)
 -> 437)
;;  succ:       60
;;              63 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       58
;;              62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 242 368
(code_label 440 439 441 63 35 (nil) [1 uses])
(note 441 440 442 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 63 (set (reg/f:SI 3 r3 [368])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 443 442 444 63 (set (reg:SI 3 r3 [orig:242 _130 ] [242])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [368])
                (const_int 8 [0x8])) [1 RCC_OscInitStruct_248(D)->LSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 444 443 445 63 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:242 _130 ] [242])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 445 444 446 63 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 454)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 273 {arm_cond_branch}
     (nil)
 -> 454)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 243 244 245 246
(note 446 445 447 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 447 446 448 64 (set (reg/f:SI 3 r3 [orig:243 _131 ] [243])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 448 447 449 64 (set (reg:SI 3 r3 [orig:244 _132 ] [244])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:243 _131 ] [243])
                (const_int 112 [0x70])) [1 _131->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 449 448 450 64 (set (reg/f:SI 2 r2 [orig:245 _133 ] [245])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 450 449 451 64 (set (reg:SI 3 r3 [orig:246 _134 ] [246])
        (ior:SI (reg:SI 3 r3 [orig:244 _132 ] [244])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 106 {*iorsi3_insn}
     (nil))
(insn 451 450 817 64 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:245 _133 ] [245])
                (const_int 112 [0x70])) [1 _133->BDCR+0 S4 A32])
        (reg:SI 3 r3 [orig:246 _134 ] [246])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 817 451 818 64 (set (pc)
        (label_ref 485)) 284 {*arm_jump}
     (nil)
 -> 485)
;;  succ:       68 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 818 817 454)
;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (RTL, MODIFIED)
;;  pred:       63
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 247 369
(code_label 454 818 455 65 38 (nil) [1 uses])
(note 455 454 456 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 65 (set (reg/f:SI 3 r3 [369])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 457 456 458 65 (set (reg:SI 3 r3 [orig:247 _135 ] [247])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [369])
                (const_int 8 [0x8])) [1 RCC_OscInitStruct_248(D)->LSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 458 457 459 65 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:247 _135 ] [247])
            (const_int 5 [0x5]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 459 458 460 65 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 473)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 273 {arm_cond_branch}
     (nil)
 -> 473)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 248 249 250 251 252 253 254 255
(note 460 459 461 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 66 (set (reg/f:SI 3 r3 [orig:248 _136 ] [248])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 462 461 463 66 (set (reg:SI 3 r3 [orig:249 _137 ] [249])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:248 _136 ] [248])
                (const_int 112 [0x70])) [1 _136->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 463 462 464 66 (set (reg/f:SI 2 r2 [orig:250 _138 ] [250])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 464 463 465 66 (set (reg:SI 3 r3 [orig:251 _139 ] [251])
        (ior:SI (reg:SI 3 r3 [orig:249 _137 ] [249])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 106 {*iorsi3_insn}
     (nil))
(insn 465 464 466 66 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:250 _138 ] [250])
                (const_int 112 [0x70])) [1 _138->BDCR+0 S4 A32])
        (reg:SI 3 r3 [orig:251 _139 ] [251])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 466 465 467 66 (set (reg/f:SI 3 r3 [orig:252 _140 ] [252])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 467 466 468 66 (set (reg:SI 3 r3 [orig:253 _141 ] [253])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:252 _140 ] [252])
                (const_int 112 [0x70])) [1 _140->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 468 467 469 66 (set (reg/f:SI 2 r2 [orig:254 _142 ] [254])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 469 468 470 66 (set (reg:SI 3 r3 [orig:255 _143 ] [255])
        (ior:SI (reg:SI 3 r3 [orig:253 _141 ] [253])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 106 {*iorsi3_insn}
     (nil))
(insn 470 469 819 66 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:254 _142 ] [254])
                (const_int 112 [0x70])) [1 _142->BDCR+0 S4 A32])
        (reg:SI 3 r3 [orig:255 _143 ] [255])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 819 470 820 66 (set (pc)
        (label_ref 485)) 284 {*arm_jump}
     (nil)
 -> 485)
;;  succ:       68 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 820 819 473)
;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 256 257 258 259 260 261 262 263
(code_label 473 820 474 67 40 (nil) [1 uses])
(note 474 473 475 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 67 (set (reg/f:SI 3 r3 [orig:256 _144 ] [256])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 476 475 477 67 (set (reg:SI 3 r3 [orig:257 _145 ] [257])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:256 _144 ] [256])
                (const_int 112 [0x70])) [1 _144->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 477 476 478 67 (set (reg/f:SI 2 r2 [orig:258 _146 ] [258])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 478 477 479 67 (set (reg:SI 3 r3 [orig:259 _147 ] [259])
        (and:SI (reg:SI 3 r3 [orig:257 _145 ] [257])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 90 {*arm_andsi3_insn}
     (nil))
(insn 479 478 480 67 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:258 _146 ] [258])
                (const_int 112 [0x70])) [1 _146->BDCR+0 S4 A32])
        (reg:SI 3 r3 [orig:259 _147 ] [259])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 480 479 481 67 (set (reg/f:SI 3 r3 [orig:260 _148 ] [260])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 481 480 482 67 (set (reg:SI 3 r3 [orig:261 _149 ] [261])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:260 _148 ] [260])
                (const_int 112 [0x70])) [1 _148->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 482 481 483 67 (set (reg/f:SI 2 r2 [orig:262 _150 ] [262])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 483 482 484 67 (set (reg:SI 3 r3 [orig:263 _151 ] [263])
        (and:SI (reg:SI 3 r3 [orig:261 _149 ] [261])
            (const_int -5 [0xfffffffffffffffb]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 90 {*arm_andsi3_insn}
     (nil))
(insn 484 483 485 67 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:262 _150 ] [262])
                (const_int 112 [0x70])) [1 _150->BDCR+0 S4 A32])
        (reg:SI 3 r3 [orig:263 _151 ] [263])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":422:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       68 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;;              64 [always] 
;;              66 [always] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 264 370
(code_label 485 484 486 68 39 (nil) [2 uses])
(note 486 485 487 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 68 (set (reg/f:SI 3 r3 [370])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":424:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 488 487 489 68 (set (reg:SI 3 r3 [orig:264 _152 ] [264])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [370])
                (const_int 8 [0x8])) [1 RCC_OscInitStruct_248(D)->LSEState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":424:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 489 488 490 68 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:264 _152 ] [264])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":424:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 490 489 491 68 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 521)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":424:8 273 {arm_cond_branch}
     (nil)
 -> 521)
;;  succ:       69 (FALLTHRU)
;;              74
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(note 491 490 492 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(call_insn 492 491 493 69 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":427:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 493 492 821 69 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":427:19 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 821 493 822 69 (set (pc)
        (label_ref 510)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":430:13 284 {*arm_jump}
     (nil)
 -> 510)
;;  succ:       72 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:430:13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 822 821 515)
;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       72
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 265 266 371 372
(code_label 515 822 496 70 43 (nil) [1 uses])
(note 496 515 497 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(call_insn 497 496 498 70 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 498 497 499 70 (set (reg:SI 2 r2 [orig:265 _153 ] [265])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 499 498 500 70 (set (reg:SI 3 r3 [371])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 500 499 503 70 (set (reg:SI 3 r3 [orig:266 _154 ] [266])
        (minus:SI (reg:SI 2 r2 [orig:265 _153 ] [265])
            (reg:SI 3 r3 [371]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:28 45 {*arm_subsi3_insn}
     (nil))
(insn 503 500 504 70 (set (reg:SI 2 r2 [372])
        (const_int 5000 [0x1388])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 504 503 505 70 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:266 _154 ] [266])
            (reg:SI 2 r2 [372]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 505 504 506 70 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":432:12 273 {arm_cond_branch}
     (nil)
 -> 510)
;;  succ:       71 (FALLTHRU)
;;              72 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 506 505 507 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 823 71 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":434:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 823 507 824 71 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":434:18 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:434:18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 824 823 510)
;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       70 (DFS_BACK)
;;              69 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:430:13
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 267 268 269
(code_label 510 824 511 72 42 (nil) [2 uses])
(note 511 510 512 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 72 (set (reg/f:SI 3 r3 [orig:267 _155 ] [267])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":430:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 513 512 514 72 (set (reg:SI 3 r3 [orig:268 _156 ] [268])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:267 _155 ] [267])
                (const_int 112 [0x70])) [1 _155->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":430:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 514 513 516 72 (set (reg:SI 3 r3 [orig:269 _157 ] [269])
        (and:SI (reg:SI 3 r3 [orig:268 _156 ] [268])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":430:14 90 {*arm_andsi3_insn}
     (nil))
(insn 516 514 517 72 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:269 _157 ] [269])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":430:50 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 517 516 825 72 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":430:50 273 {arm_cond_branch}
     (nil)
 -> 515)
;;  succ:       70
;;              73 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 825 517 826 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(jump_insn 826 825 827 73 (set (pc)
        (label_ref 549)) 284 {*arm_jump}
     (nil)
 -> 549)
;;  succ:       78 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 827 826 521)
;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       68
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
(code_label 521 827 522 74 41 (nil) [1 uses])
(note 522 521 523 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(call_insn 523 522 524 74 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":441:19 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 524 523 828 74 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":441:19 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 828 524 829 74 (set (pc)
        (label_ref 541)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":444:13 284 {*arm_jump}
     (nil)
 -> 541)
;;  succ:       77 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:444:13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 829 828 546)
;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       77
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 270 271 373 374
(code_label 546 829 527 75 46 (nil) [1 uses])
(note 527 546 528 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(call_insn 528 527 529 75 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:14 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 529 528 530 75 (set (reg:SI 2 r2 [orig:270 _158 ] [270])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 530 529 531 75 (set (reg:SI 3 r3 [373])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 531 530 534 75 (set (reg:SI 3 r3 [orig:271 _159 ] [271])
        (minus:SI (reg:SI 2 r2 [orig:270 _158 ] [270])
            (reg:SI 3 r3 [373]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:28 45 {*arm_subsi3_insn}
     (nil))
(insn 534 531 535 75 (set (reg:SI 2 r2 [374])
        (const_int 5000 [0x1388])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 535 534 536 75 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:271 _159 ] [271])
            (reg:SI 2 r2 [374]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 536 535 537 75 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 541)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":446:12 273 {arm_cond_branch}
     (nil)
 -> 541)
;;  succ:       76 (FALLTHRU)
;;              77 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 537 536 538 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 538 537 830 76 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":448:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 830 538 831 76 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":448:18 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:448:18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 831 830 541)
;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       75 (DFS_BACK)
;;              74 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:444:13
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 272 273 274
(code_label 541 831 542 77 45 (nil) [2 uses])
(note 542 541 543 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 77 (set (reg/f:SI 3 r3 [orig:272 _160 ] [272])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":444:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 544 543 545 77 (set (reg:SI 3 r3 [orig:273 _161 ] [273])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:272 _160 ] [272])
                (const_int 112 [0x70])) [1 _160->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":444:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 545 544 547 77 (set (reg:SI 3 r3 [orig:274 _162 ] [274])
        (and:SI (reg:SI 3 r3 [orig:273 _161 ] [273])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":444:14 90 {*arm_andsi3_insn}
     (nil))
(insn 547 545 548 77 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:274 _162 ] [274])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":444:50 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 548 547 549 77 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":444:50 273 {arm_cond_branch}
     (nil)
 -> 546)
;;  succ:       75
;;              78 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;;              73 [always] 
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 375
(code_label 549 548 550 78 44 (nil) [1 uses])
(note 550 549 551 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 78 (set (reg:SI 3 r3 [375])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 23 [0x17])) [0 pwrclkchanged+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":454:8 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 552 551 553 78 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [375])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":454:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 553 552 554 78 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 560)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":454:8 273 {arm_cond_branch}
     (nil)
 -> 560)
;;  succ:       79 (FALLTHRU)
;;              80
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 275 276 277 278
(note 554 553 555 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 555 554 556 79 (set (reg/f:SI 3 r3 [orig:275 _163 ] [275])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":456:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 556 555 557 79 (set (reg:SI 3 r3 [orig:276 _164 ] [276])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:275 _163 ] [275])
                (const_int 64 [0x40])) [1 _163->APB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":456:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 557 556 558 79 (set (reg/f:SI 2 r2 [orig:277 _165 ] [277])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":456:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 558 557 559 79 (set (reg:SI 3 r3 [orig:278 _166 ] [278])
        (and:SI (reg:SI 3 r3 [orig:276 _164 ] [276])
            (const_int -268435457 [0xffffffffefffffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":456:7 90 {*arm_andsi3_insn}
     (nil))
(insn 559 558 560 79 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:277 _165 ] [277])
                (const_int 64 [0x40])) [1 _165->APB1ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:278 _166 ] [278])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":456:7 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       80 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (RTL, MODIFIED)
;;  pred:       55
;;              78
;;              79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 279 376
(code_label 560 559 561 80 33 (nil) [2 uses])
(note 561 560 562 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 80 (set (reg/f:SI 3 r3 [376])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":462:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 563 562 564 80 (set (reg:SI 3 r3 [orig:279 _167 ] [279])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [376])
                (const_int 24 [0x18])) [1 RCC_OscInitStruct_248(D)->PLL.PLLState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":462:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 564 563 565 80 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:279 _167 ] [279])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":462:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 565 564 566 80 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 757)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":462:6 273 {arm_cond_branch}
     (nil)
 -> 757)
;;  succ:       81 (FALLTHRU)
;;              106
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 280 281 282
(note 566 565 567 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 567 566 568 81 (set (reg/f:SI 3 r3 [orig:280 _168 ] [280])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":465:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 568 567 569 81 (set (reg:SI 3 r3 [orig:281 _169 ] [281])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:280 _168 ] [280])
                (const_int 8 [0x8])) [1 _168->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":465:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 569 568 570 81 (set (reg:SI 3 r3 [orig:282 _170 ] [282])
        (and:SI (reg:SI 3 r3 [orig:281 _169 ] [281])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":465:9 90 {*arm_andsi3_insn}
     (nil))
(insn 570 569 571 81 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:282 _170 ] [282])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":465:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 571 570 572 81 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 692)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":465:8 273 {arm_cond_branch}
     (nil)
 -> 692)
;;  succ:       82 (FALLTHRU)
;;              97
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 283 377
(note 572 571 573 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 82 (set (reg/f:SI 3 r3 [377])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":467:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 574 573 575 82 (set (reg:SI 3 r3 [orig:283 _171 ] [283])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [377])
                (const_int 24 [0x18])) [1 RCC_OscInitStruct_248(D)->PLL.PLLState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":467:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 575 574 576 82 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:283 _171 ] [283])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":467:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 576 575 577 82 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 659)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":467:10 273 {arm_cond_branch}
     (nil)
 -> 659)
;;  succ:       83 (FALLTHRU)
;;              92
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 284 378
(note 577 576 578 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 579 83 (set (reg/f:SI 3 r3 [orig:284 _172 ] [284])
        (const_int 1111949408 [0x42470060])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":477:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 579 578 580 83 (set (reg:SI 2 r2 [378])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":477:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 580 579 581 83 (set (mem/v:SI (reg/f:SI 3 r3 [orig:284 _172 ] [284]) [1 *_172+0 S4 A32])
        (reg:SI 2 r2 [378])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":477:9 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 581 580 582 83 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":480:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 582 581 832 83 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":480:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 832 582 833 83 (set (pc)
        (label_ref 598)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":483:15 284 {*arm_jump}
     (nil)
 -> 598)
;;  succ:       86 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:483:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 833 832 603)
;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (RTL, MODIFIED)
;;  pred:       86
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 285 286 379
(code_label 603 833 585 84 51 (nil) [1 uses])
(note 585 603 586 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(call_insn 586 585 587 84 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":485:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 587 586 588 84 (set (reg:SI 2 r2 [orig:285 _173 ] [285])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":485:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 588 587 589 84 (set (reg:SI 3 r3 [379])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":485:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 589 588 592 84 (set (reg:SI 3 r3 [orig:286 _174 ] [286])
        (minus:SI (reg:SI 2 r2 [orig:285 _173 ] [285])
            (reg:SI 3 r3 [379]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":485:30 45 {*arm_subsi3_insn}
     (nil))
(insn 592 589 593 84 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:286 _174 ] [286])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":485:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 593 592 594 84 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 598)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":485:14 273 {arm_cond_branch}
     (nil)
 -> 598)
;;  succ:       85 (FALLTHRU)
;;              86 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 594 593 595 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 834 85 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":487:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 834 595 835 85 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":487:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:487:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 835 834 598)
;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (RTL, MODIFIED)
;;  pred:       84 (DFS_BACK)
;;              83 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:483:15
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 287 288 289
(code_label 598 835 599 86 50 (nil) [2 uses])
(note 599 598 600 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 86 (set (reg/f:SI 3 r3 [orig:287 _175 ] [287])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":483:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 601 600 602 86 (set (reg:SI 3 r3 [orig:288 _176 ] [288])
        (mem/v:SI (reg/f:SI 3 r3 [orig:287 _175 ] [287]) [1 _175->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":483:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 602 601 604 86 (set (reg:SI 3 r3 [orig:289 _177 ] [289])
        (and:SI (reg:SI 3 r3 [orig:288 _176 ] [288])
            (const_int 33554432 [0x2000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":483:16 90 {*arm_andsi3_insn}
     (nil))
(insn 604 602 605 86 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:289 _177 ] [289])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":483:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 605 604 606 86 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 603)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":483:52 273 {arm_cond_branch}
     (nil)
 -> 603)
;;  succ:       84
;;              87 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 380 381 382 383 384 385
(note 606 605 607 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 608 87 (set (reg/f:SI 3 r3 [380])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 608 607 609 87 (set (reg:SI 2 r2 [orig:290 _178 ] [290])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [380])
                (const_int 28 [0x1c])) [1 RCC_OscInitStruct_248(D)->PLL.PLLSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 609 608 610 87 (set (reg/f:SI 3 r3 [381])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 610 609 611 87 (set (reg:SI 3 r3 [orig:291 _179 ] [291])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [381])
                (const_int 32 [0x20])) [1 RCC_OscInitStruct_248(D)->PLL.PLLM+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 611 610 612 87 (set (reg:SI 2 r2 [orig:292 _180 ] [292])
        (ior:SI (reg:SI 2 r2 [orig:290 _178 ] [290])
            (reg:SI 3 r3 [orig:291 _179 ] [291]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 106 {*iorsi3_insn}
     (nil))
(insn 612 611 613 87 (set (reg/f:SI 3 r3 [382])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 613 612 614 87 (set (reg:SI 3 r3 [orig:293 _181 ] [293])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [382])
                (const_int 36 [0x24])) [1 RCC_OscInitStruct_248(D)->PLL.PLLN+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 614 613 615 87 (set (reg:SI 3 r3 [orig:294 _182 ] [294])
        (ashift:SI (reg:SI 3 r3 [orig:293 _181 ] [293])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 147 {*arm_shiftsi3}
     (nil))
(insn 615 614 616 87 (set (reg:SI 2 r2 [orig:295 _183 ] [295])
        (ior:SI (reg:SI 2 r2 [orig:292 _180 ] [292])
            (reg:SI 3 r3 [orig:294 _182 ] [294]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 106 {*iorsi3_insn}
     (nil))
(insn 616 615 617 87 (set (reg/f:SI 3 r3 [383])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 617 616 618 87 (set (reg:SI 3 r3 [orig:296 _184 ] [296])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [383])
                (const_int 40 [0x28])) [1 RCC_OscInitStruct_248(D)->PLL.PLLP+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 618 617 619 87 (set (reg:SI 3 r3 [orig:297 _185 ] [297])
        (lshiftrt:SI (reg:SI 3 r3 [orig:296 _184 ] [296])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 147 {*arm_shiftsi3}
     (nil))
(insn 619 618 620 87 (set (reg:SI 3 r3 [orig:298 _186 ] [298])
        (plus:SI (reg:SI 3 r3 [orig:297 _185 ] [297])
            (const_int -1 [0xffffffffffffffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 7 {*arm_addsi3}
     (nil))
(insn 620 619 621 87 (set (reg:SI 3 r3 [orig:299 _187 ] [299])
        (ashift:SI (reg:SI 3 r3 [orig:298 _186 ] [298])
            (const_int 16 [0x10]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 147 {*arm_shiftsi3}
     (nil))
(insn 621 620 622 87 (set (reg:SI 2 r2 [orig:300 _188 ] [300])
        (ior:SI (reg:SI 2 r2 [orig:295 _183 ] [295])
            (reg:SI 3 r3 [orig:299 _187 ] [299]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 106 {*iorsi3_insn}
     (nil))
(insn 622 621 623 87 (set (reg/f:SI 3 r3 [384])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 623 622 624 87 (set (reg:SI 3 r3 [orig:301 _189 ] [301])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [384])
                (const_int 44 [0x2c])) [1 RCC_OscInitStruct_248(D)->PLL.PLLQ+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 624 623 625 87 (set (reg:SI 3 r3 [orig:302 _190 ] [302])
        (ashift:SI (reg:SI 3 r3 [orig:301 _189 ] [301])
            (const_int 24 [0x18]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 147 {*arm_shiftsi3}
     (nil))
(insn 625 624 626 87 (set (reg/f:SI 1 r1 [orig:303 _191 ] [303])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 626 625 627 87 (set (reg:SI 3 r3 [orig:304 _192 ] [304])
        (ior:SI (reg:SI 3 r3 [orig:302 _190 ] [302])
            (reg:SI 2 r2 [orig:300 _188 ] [300]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 106 {*iorsi3_insn}
     (nil))
(insn 627 626 628 87 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:303 _191 ] [303])
                (const_int 4 [0x4])) [1 _191->PLLCFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:304 _192 ] [304])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":492:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 628 627 629 87 (set (reg/f:SI 3 r3 [orig:305 _193 ] [305])
        (const_int 1111949408 [0x42470060])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":498:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 629 628 630 87 (set (reg:SI 2 r2 [385])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":498:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 630 629 631 87 (set (mem/v:SI (reg/f:SI 3 r3 [orig:305 _193 ] [305]) [1 *_193+0 S4 A32])
        (reg:SI 2 r2 [385])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":498:9 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 631 630 632 87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":501:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 632 631 836 87 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":501:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 836 632 837 87 (set (pc)
        (label_ref 648)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":504:15 284 {*arm_jump}
     (nil)
 -> 648)
;;  succ:       90 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:504:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 837 836 653)
;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (RTL, MODIFIED)
;;  pred:       90
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 306 307 386
(code_label 653 837 635 88 53 (nil) [1 uses])
(note 635 653 636 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(call_insn 636 635 637 88 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":506:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 637 636 638 88 (set (reg:SI 2 r2 [orig:306 _194 ] [306])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":506:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 638 637 639 88 (set (reg:SI 3 r3 [386])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":506:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 639 638 642 88 (set (reg:SI 3 r3 [orig:307 _195 ] [307])
        (minus:SI (reg:SI 2 r2 [orig:306 _194 ] [306])
            (reg:SI 3 r3 [386]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":506:30 45 {*arm_subsi3_insn}
     (nil))
(insn 642 639 643 88 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:307 _195 ] [307])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":506:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 643 642 644 88 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":506:14 273 {arm_cond_branch}
     (nil)
 -> 648)
;;  succ:       89 (FALLTHRU)
;;              90 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 644 643 645 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 838 89 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":508:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 838 645 839 89 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":508:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:508:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 839 838 648)
;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (RTL, MODIFIED)
;;  pred:       88 (DFS_BACK)
;;              87 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:504:15
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 308 309 310
(code_label 648 839 649 90 52 (nil) [2 uses])
(note 649 648 650 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 90 (set (reg/f:SI 3 r3 [orig:308 _196 ] [308])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":504:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 651 650 652 90 (set (reg:SI 3 r3 [orig:309 _197 ] [309])
        (mem/v:SI (reg/f:SI 3 r3 [orig:308 _196 ] [308]) [1 _196->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":504:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 652 651 654 90 (set (reg:SI 3 r3 [orig:310 _198 ] [310])
        (and:SI (reg:SI 3 r3 [orig:309 _197 ] [309])
            (const_int 33554432 [0x2000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":504:16 90 {*arm_andsi3_insn}
     (nil))
(insn 654 652 655 90 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:310 _198 ] [310])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":504:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 655 654 840 90 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 653)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":504:52 273 {arm_cond_branch}
     (nil)
 -> 653)
;;  succ:       88
;;              91 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 840 655 841 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(jump_insn 841 840 842 91 (set (pc)
        (label_ref 757)) 284 {*arm_jump}
     (nil)
 -> 757)
;;  succ:       106 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 842 841 659)
;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (RTL, MODIFIED)
;;  pred:       82
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 311 387
(code_label 659 842 660 92 49 (nil) [1 uses])
(note 660 659 661 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 661 660 662 92 (set (reg/f:SI 3 r3 [orig:311 _199 ] [311])
        (const_int 1111949408 [0x42470060])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":515:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 662 661 663 92 (set (reg:SI 2 r2 [387])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":515:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 663 662 664 92 (set (mem/v:SI (reg/f:SI 3 r3 [orig:311 _199 ] [311]) [1 *_199+0 S4 A32])
        (reg:SI 2 r2 [387])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":515:9 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 664 663 665 92 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":518:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 665 664 843 92 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":518:21 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 843 665 844 92 (set (pc)
        (label_ref 681)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":521:15 284 {*arm_jump}
     (nil)
 -> 681)
;;  succ:       95 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:521:15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 844 843 686)
;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (RTL, MODIFIED)
;;  pred:       95
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 312 313 388
(code_label 686 844 668 93 55 (nil) [1 uses])
(note 668 686 669 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(call_insn 669 668 670 93 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":523:16 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 670 669 671 93 (set (reg:SI 2 r2 [orig:312 _200 ] [312])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":523:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 671 670 672 93 (set (reg:SI 3 r3 [388])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":523:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 672 671 675 93 (set (reg:SI 3 r3 [orig:313 _201 ] [313])
        (minus:SI (reg:SI 2 r2 [orig:312 _200 ] [312])
            (reg:SI 3 r3 [388]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":523:30 45 {*arm_subsi3_insn}
     (nil))
(insn 675 672 676 93 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:313 _201 ] [313])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":523:14 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 676 675 677 93 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 681)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":523:14 273 {arm_cond_branch}
     (nil)
 -> 681)
;;  succ:       94 (FALLTHRU)
;;              95 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 95, flags: (RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 677 676 678 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 845 94 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":525:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 845 678 846 94 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":525:20 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:525:20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 846 845 681)
;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 96, flags: (RTL, MODIFIED)
;;  pred:       93 (DFS_BACK)
;;              92 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:521:15
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 314 315 316
(code_label 681 846 682 95 54 (nil) [2 uses])
(note 682 681 683 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 683 682 684 95 (set (reg/f:SI 3 r3 [orig:314 _202 ] [314])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":521:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 684 683 685 95 (set (reg:SI 3 r3 [orig:315 _203 ] [315])
        (mem/v:SI (reg/f:SI 3 r3 [orig:314 _202 ] [314]) [1 _202->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":521:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 685 684 687 95 (set (reg:SI 3 r3 [orig:316 _204 ] [316])
        (and:SI (reg:SI 3 r3 [orig:315 _203 ] [315])
            (const_int 33554432 [0x2000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":521:16 90 {*arm_andsi3_insn}
     (nil))
(insn 687 685 688 95 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:316 _204 ] [316])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":521:52 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 688 687 847 95 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 686)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":521:52 273 {arm_cond_branch}
     (nil)
 -> 686)
;;  succ:       93
;;              96 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 96, loop depth 0, maybe hot
;;  prev block 95, next block 97, flags: (RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 847 688 848 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(jump_insn 848 847 849 96 (set (pc)
        (label_ref 757)) 284 {*arm_jump}
     (nil)
 -> 757)
;;  succ:       106 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 849 848 692)
;; basic block 97, loop depth 0, maybe hot
;;  prev block 96, next block 98, flags: (RTL, MODIFIED)
;;  pred:       81
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 317 389
(code_label 692 849 693 97 48 (nil) [1 uses])
(note 693 692 694 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 695 97 (set (reg/f:SI 3 r3 [389])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":533:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 695 694 696 97 (set (reg:SI 3 r3 [orig:317 _205 ] [317])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [389])
                (const_int 24 [0x18])) [1 RCC_OscInitStruct_248(D)->PLL.PLLState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":533:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 696 695 697 97 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:317 _205 ] [317])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":533:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 697 696 698 97 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 702)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":533:10 273 {arm_cond_branch}
     (nil)
 -> 702)
;;  succ:       98 (FALLTHRU)
;;              99
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 98, loop depth 0, maybe hot
;;  prev block 97, next block 99, flags: (RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(note 698 697 699 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 699 698 850 98 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":535:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 850 699 851 98 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":535:16 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:535:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 851 850 702)
;; basic block 99, loop depth 0, maybe hot
;;  prev block 98, next block 100, flags: (RTL, MODIFIED)
;;  pred:       97
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 318 319 390 391
(code_label 702 851 703 99 56 (nil) [1 uses])
(note 703 702 704 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 705 99 (set (reg/f:SI 3 r3 [orig:318 _206 ] [318])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":540:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 705 704 706 99 (set (reg:SI 3 r3 [390])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:318 _206 ] [318])
                (const_int 4 [0x4])) [1 _206->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":540:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 706 705 707 99 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pll_config+0 S4 A32])
        (reg:SI 3 r3 [390])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":540:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 707 706 708 99 (set (reg/f:SI 3 r3 [391])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":550:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 708 707 709 99 (set (reg:SI 3 r3 [orig:319 _207 ] [319])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [391])
                (const_int 24 [0x18])) [1 RCC_OscInitStruct_248(D)->PLL.PLLState+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":550:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 709 708 710 99 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:319 _207 ] [319])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":550:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 710 709 711 99 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":550:12 273 {arm_cond_branch}
     (nil)
 -> 752)
;;  succ:       105
;;              100 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 100, loop depth 0, maybe hot
;;  prev block 99, next block 101, flags: (RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 320 321 392 393
(note 711 710 712 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 712 711 713 100 (set (reg:SI 3 r3 [392])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pll_config+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":551:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 713 712 714 100 (set (reg:SI 2 r2 [orig:320 _208 ] [320])
        (and:SI (reg:SI 3 r3 [392])
            (const_int 4194304 [0x400000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":551:14 90 {*arm_andsi3_insn}
     (nil))
(insn 714 713 715 100 (set (reg/f:SI 3 r3 [393])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":551:80 749 {*thumb2_movsi_vfp}
     (nil))
(insn 715 714 716 100 (set (reg:SI 3 r3 [orig:321 _209 ] [321])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [393])
                (const_int 28 [0x1c])) [1 RCC_OscInitStruct_248(D)->PLL.PLLSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":551:80 749 {*thumb2_movsi_vfp}
     (nil))
(insn 716 715 717 100 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:320 _208 ] [320])
            (reg:SI 3 r3 [orig:321 _209 ] [321]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":550:64 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 717 716 718 100 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":550:64 273 {arm_cond_branch}
     (nil)
 -> 752)
;;  succ:       105
;;              101 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 102, flags: (RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 322 323 394 395
(note 718 717 719 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 719 718 720 101 (set (reg:SI 3 r3 [394])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pll_config+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":552:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 720 719 721 101 (set (reg:SI 2 r2 [orig:322 _210 ] [322])
        (and:SI (reg:SI 3 r3 [394])
            (const_int 63 [0x3f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":552:14 90 {*arm_andsi3_insn}
     (nil))
(insn 721 720 722 101 (set (reg/f:SI 3 r3 [395])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":552:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 722 721 723 101 (set (reg:SI 3 r3 [orig:323 _211 ] [323])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [395])
                (const_int 32 [0x20])) [1 RCC_OscInitStruct_248(D)->PLL.PLLM+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":552:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 723 722 724 101 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:322 _210 ] [322])
            (reg:SI 3 r3 [orig:323 _211 ] [323]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":551:92 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 724 723 725 101 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":551:92 273 {arm_cond_branch}
     (nil)
 -> 752)
;;  succ:       105
;;              102 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 324 325 326 396 397
(note 725 724 726 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 102 (set (reg:SI 2 r2 [396])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pll_config+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 727 726 728 102 (set (reg:SI 3 r3 [orig:324 _212 ] [324])
        (const_int 32704 [0x7fc0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 728 727 729 102 (set (reg:SI 3 r3 [orig:324 _212 ] [324])
        (and:SI (reg:SI 3 r3 [orig:324 _212 ] [324])
            (reg:SI 2 r2 [396]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:14 90 {*arm_andsi3_insn}
     (expr_list:REG_EQUAL (and:SI (reg:SI 2 r2 [396])
            (const_int 32704 [0x7fc0]))
        (nil)))
(insn 729 728 730 102 (set (reg/f:SI 2 r2 [397])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 730 729 731 102 (set (reg:SI 2 r2 [orig:325 _213 ] [325])
        (mem:SI (plus:SI (reg/f:SI 2 r2 [397])
                (const_int 36 [0x24])) [1 RCC_OscInitStruct_248(D)->PLL.PLLN+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 731 730 732 102 (set (reg:SI 2 r2 [orig:326 _214 ] [326])
        (ashift:SI (reg:SI 2 r2 [orig:325 _213 ] [325])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:86 147 {*arm_shiftsi3}
     (nil))
(insn 732 731 733 102 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:324 _212 ] [324])
            (reg:SI 2 r2 [orig:326 _214 ] [326]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":552:111 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 733 732 734 102 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":552:111 273 {arm_cond_branch}
     (nil)
 -> 752)
;;  succ:       105
;;              103 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 327 328 329 330 331 398 399
(note 734 733 735 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 735 734 736 103 (set (reg:SI 3 r3 [398])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pll_config+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 736 735 737 103 (set (reg:SI 2 r2 [orig:327 _215 ] [327])
        (and:SI (reg:SI 3 r3 [398])
            (const_int 196608 [0x30000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:14 90 {*arm_andsi3_insn}
     (nil))
(insn 737 736 738 103 (set (reg/f:SI 3 r3 [399])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:81 749 {*thumb2_movsi_vfp}
     (nil))
(insn 738 737 739 103 (set (reg:SI 3 r3 [orig:328 _216 ] [328])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [399])
                (const_int 40 [0x28])) [1 RCC_OscInitStruct_248(D)->PLL.PLLP+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:81 749 {*thumb2_movsi_vfp}
     (nil))
(insn 739 738 740 103 (set (reg:SI 3 r3 [orig:329 _217 ] [329])
        (lshiftrt:SI (reg:SI 3 r3 [orig:328 _216 ] [328])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:87 147 {*arm_shiftsi3}
     (nil))
(insn 740 739 741 103 (set (reg:SI 3 r3 [orig:330 _218 ] [330])
        (plus:SI (reg:SI 3 r3 [orig:329 _217 ] [329])
            (const_int -1 [0xffffffffffffffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:94 7 {*arm_addsi3}
     (nil))
(insn 741 740 742 103 (set (reg:SI 3 r3 [orig:331 _219 ] [331])
        (ashift:SI (reg:SI 3 r3 [orig:330 _218 ] [330])
            (const_int 16 [0x10]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:101 147 {*arm_shiftsi3}
     (nil))
(insn 742 741 743 103 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:327 _215 ] [327])
            (reg:SI 3 r3 [orig:331 _219 ] [331]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:111 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 743 742 744 103 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":553:111 273 {arm_cond_branch}
     (nil)
 -> 752)
;;  succ:       105
;;              104 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 105, flags: (RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 332 333 334 400 401
(note 744 743 745 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 745 744 746 104 (set (reg:SI 3 r3 [400])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 pll_config+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":555:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 746 745 747 104 (set (reg:SI 2 r2 [orig:332 _220 ] [332])
        (and:SI (reg:SI 3 r3 [400])
            (const_int 251658240 [0xf000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":555:14 90 {*arm_andsi3_insn}
     (nil))
(insn 747 746 748 104 (set (reg/f:SI 3 r3 [401])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":555:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 748 747 749 104 (set (reg:SI 3 r3 [orig:333 _221 ] [333])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [401])
                (const_int 44 [0x2c])) [1 RCC_OscInitStruct_248(D)->PLL.PLLQ+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":555:79 749 {*thumb2_movsi_vfp}
     (nil))
(insn 749 748 750 104 (set (reg:SI 3 r3 [orig:334 _222 ] [334])
        (ashift:SI (reg:SI 3 r3 [orig:333 _221 ] [333])
            (const_int 24 [0x18]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":555:85 147 {*arm_shiftsi3}
     (nil))
(insn 750 749 751 104 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:332 _220 ] [332])
            (reg:SI 3 r3 [orig:334 _222 ] [334]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:126 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 751 750 752 104 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 757)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":554:126 273 {arm_cond_branch}
     (nil)
 -> 757)
;;  succ:       105 (FALLTHRU)
;;              106
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (RTL, MODIFIED)
;;  pred:       99
;;              100
;;              101
;;              102
;;              103
;;              104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(code_label 752 751 753 105 57 (nil) [5 uses])
(note 753 752 754 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 852 105 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":558:18 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 852 754 853 105 (set (pc)
        (label_ref 760)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":558:18 284 {*arm_jump}
     (nil)
 -> 760)
;;  succ:       107 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:558:18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

(barrier 853 852 757)
;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (RTL, MODIFIED)
;;  pred:       80
;;              91 [always] 
;;              104
;;              96 [always] 
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 335
(code_label 757 853 758 106 47 (nil) [4 uses])
(note 758 757 759 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 759 758 760 106 (set (reg:SI 3 r3 [orig:335 _224 ] [335])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":563:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       107 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:563:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 1, flags: (RTL, MODIFIED)
;;  pred:       106 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:563:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:226:12
;;              10 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:242:16
;;              19 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:261:20
;;              24 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:275:20
;;              32 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:295:16
;;              37 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:320:20
;;              42 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:340:20
;;              48 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:366:18
;;              53 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:383:18
;;              61 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:416:18
;;              71 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:434:18
;;              76 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:448:18
;;              85 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:487:20
;;              89 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:508:20
;;              94 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:525:20
;;              98 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:535:16
;;              105 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:558:18
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 335
;; lr  def 	 0 [r0] 337
(code_label 760 759 761 107 5 (nil) [17 uses])
(note 761 760 766 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 766 761 767 107 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:337 <retval> ] [337])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":564:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 767 766 926 107 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":564:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 926 767 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_ClockConfig (HAL_RCC_ClockConfig, funcdef_no=136, decl_uid=6992, cgraph_uid=141, symbol_order=140)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 56:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 69:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 74:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 78
	 Choosing alt 1 in insn 78:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 79:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 93:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 95:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 104:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 105:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 109:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 115:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 116:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 117:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 141:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 143:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 144:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 145:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 146:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 147
	 Choosing alt 1 in insn 147:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 148:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 150:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 156:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 160:  (0) r  (1) j {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 169:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 171:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 172:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 173:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 180:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 181:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 183:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 187:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 188:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 191:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 192:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 193:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 194:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 195:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 204:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 205:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 210:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 211:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 212:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 213:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 214:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 215:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 216
	 Choosing alt 1 in insn 216:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 217:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 220:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 221:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 222:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 226:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 227:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 228:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 229:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 230:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 231:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 232:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 233
	 Choosing alt 1 in insn 233:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 234:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 239:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 240:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 242:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 243:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 246:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 247:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 249:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 250:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 253:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 7 8 9
EBB 10 11
EBB 12
EBB 13 14 15 16
EBB 17 18
EBB 19 20
EBB 21 22
EBB 23
EBB 24 25
EBB 26
EBB 27 28 29
EBB 30 31
EBB 32 33
EBB 34
EBB 35

********** Pseudo live ranges #1: **********

  BB 35
   Insn 261: point = 0, n_alt = -1
   Insn 260: point = 0, n_alt = -2
   Insn 256: point = 1, n_alt = -2
  BB 29
   Insn 277: point = 4, n_alt = -1
   Insn 199: point = 4, n_alt = 1
  BB 25
   Insn 275: point = 5, n_alt = -1
   Insn 164: point = 5, n_alt = 1
  BB 22
   Insn 271: point = 6, n_alt = -1
   Insn 136: point = 6, n_alt = 1
  BB 20
   Insn 269: point = 7, n_alt = -1
   Insn 121: point = 7, n_alt = 1
  BB 16
   Insn 267: point = 8, n_alt = -1
   Insn 99: point = 8, n_alt = 1
  BB 6
   Insn 265: point = 9, n_alt = -1
   Insn 35: point = 9, n_alt = 1
  BB 3
   Insn 263: point = 10, n_alt = -1
   Insn 11: point = 10, n_alt = 1
  BB 34
   Insn 253: point = 11, n_alt = 1
   Insn 252: point = 12, n_alt = -1
   Insn 251: point = 12, n_alt = -2
   Insn 250: point = 13, n_alt = 5
   Insn 249: point = 15, n_alt = 5
   Insn 248: point = 16, n_alt = 7
   Insn 247: point = 17, n_alt = 5
   Insn 246: point = 18, n_alt = 3
   Insn 245: point = 20, n_alt = -2
   Insn 244: point = 22, n_alt = 1
   Insn 243: point = 24, n_alt = 5
   Insn 242: point = 25, n_alt = 0
   Insn 241: point = 27, n_alt = 1
   Insn 240: point = 29, n_alt = 5
   Insn 239: point = 31, n_alt = 5
   Insn 238: point = 32, n_alt = -2
   Insn 237: point = 33, n_alt = -1
  BB 33
   Insn 234: point = 33, n_alt = 7
   Insn 233: point = 34, n_alt = 1
   Insn 232: point = 36, n_alt = 5
   Insn 231: point = 37, n_alt = 1
   Insn 230: point = 39, n_alt = 5
   Insn 229: point = 41, n_alt = 5
   Insn 228: point = 42, n_alt = 2
   Insn 227: point = 44, n_alt = 5
   Insn 226: point = 46, n_alt = 5
  BB 32
   Insn 224: point = 47, n_alt = -1
   Insn 223: point = 47, n_alt = 0
   Insn 222: point = 48, n_alt = 0
   Insn 221: point = 50, n_alt = 5
   Insn 220: point = 52, n_alt = 5
  BB 31
   Insn 217: point = 53, n_alt = 7
   Insn 216: point = 54, n_alt = 1
   Insn 215: point = 56, n_alt = 5
   Insn 214: point = 57, n_alt = 5
   Insn 213: point = 59, n_alt = 5
   Insn 212: point = 60, n_alt = 2
   Insn 211: point = 62, n_alt = 5
   Insn 210: point = 64, n_alt = 5
  BB 30
   Insn 208: point = 65, n_alt = -1
   Insn 207: point = 65, n_alt = 0
   Insn 206: point = 66, n_alt = 0
   Insn 205: point = 68, n_alt = 5
   Insn 204: point = 70, n_alt = 5
  BB 28
   Insn 197: point = 71, n_alt = -1
   Insn 196: point = 71, n_alt = 1
   Insn 195: point = 72, n_alt = 5
   Insn 194: point = 73, n_alt = 0
   Insn 193: point = 75, n_alt = 5
   Insn 192: point = 77, n_alt = 5
   Insn 191: point = 78, n_alt = 6
   Insn 190: point = 79, n_alt = 0
   Insn 189: point = 81, n_alt = 0
   Insn 188: point = 83, n_alt = 5
   Insn 187: point = 84, n_alt = 5
  BB 27
   Insn 185: point = 85, n_alt = -1
   Insn 184: point = 85, n_alt = 1
   Insn 183: point = 86, n_alt = 5
   Insn 182: point = 87, n_alt = 0
   Insn 181: point = 89, n_alt = 5
   Insn 180: point = 91, n_alt = 5
  BB 26
   Insn 177: point = 92, n_alt = -1
   Insn 176: point = 92, n_alt = 1
   Insn 174: point = 93, n_alt = 1
   Insn 173: point = 95, n_alt = 5
   Insn 172: point = 97, n_alt = 5
   Insn 171: point = 98, n_alt = 0
   Insn 170: point = 100, n_alt = 5
   Insn 169: point = 102, n_alt = 5
  BB 23
   Insn 273: point = 103, n_alt = -1
   Insn 150: point = 103, n_alt = 7
   Insn 149: point = 103, n_alt = -1
   Insn 148: point = 103, n_alt = 7
   Insn 147: point = 104, n_alt = 1
   Insn 146: point = 106, n_alt = 5
   Insn 145: point = 107, n_alt = 5
   Insn 144: point = 109, n_alt = 5
   Insn 143: point = 110, n_alt = 2
   Insn 142: point = 112, n_alt = 5
   Insn 141: point = 114, n_alt = 5
  BB 21
   Insn 134: point = 115, n_alt = -1
   Insn 133: point = 115, n_alt = 0
   Insn 132: point = 116, n_alt = 0
   Insn 131: point = 118, n_alt = 5
   Insn 130: point = 120, n_alt = 5
  BB 19
   Insn 119: point = 121, n_alt = -1
   Insn 118: point = 121, n_alt = 0
   Insn 117: point = 122, n_alt = 0
   Insn 116: point = 124, n_alt = 5
   Insn 115: point = 126, n_alt = 5
  BB 18
   Insn 112: point = 127, n_alt = -1
   Insn 111: point = 127, n_alt = 0
   Insn 110: point = 128, n_alt = 5
   Insn 109: point = 130, n_alt = 5
  BB 17
   Insn 107: point = 131, n_alt = -1
   Insn 106: point = 131, n_alt = 0
   Insn 105: point = 132, n_alt = 5
   Insn 104: point = 134, n_alt = 5
  BB 15
   Insn 97: point = 135, n_alt = -1
   Insn 96: point = 135, n_alt = 0
   Insn 95: point = 136, n_alt = 0
   Insn 94: point = 138, n_alt = 5
   Insn 93: point = 140, n_alt = 5
  BB 14
   Insn 91: point = 141, n_alt = -1
   Insn 90: point = 141, n_alt = 0
   Insn 89: point = 142, n_alt = 5
   Insn 88: point = 144, n_alt = 5
  BB 24
   Insn 162: point = 145, n_alt = -1
   Insn 161: point = 145, n_alt = 1
   Insn 160: point = 146, n_alt = 4
   Insn 157: point = 147, n_alt = 0
   Insn 156: point = 149, n_alt = 5
   Insn 155: point = 150, n_alt = -2
   Insn 154: point = 151, n_alt = -1
  BB 13
   Insn 86: point = 151, n_alt = -1
   Insn 85: point = 151, n_alt = 0
   Insn 84: point = 152, n_alt = 0
   Insn 83: point = 154, n_alt = 5
   Insn 82: point = 156, n_alt = 5
  BB 12
   Insn 79: point = 157, n_alt = 7
   Insn 78: point = 158, n_alt = 1
   Insn 77: point = 160, n_alt = 5
   Insn 76: point = 161, n_alt = 5
   Insn 75: point = 163, n_alt = 5
   Insn 74: point = 164, n_alt = 2
   Insn 73: point = 166, n_alt = 5
   Insn 72: point = 168, n_alt = 5
  BB 11
   Insn 69: point = 169, n_alt = 7
   Insn 68: point = 170, n_alt = 0
   Insn 67: point = 172, n_alt = 5
   Insn 66: point = 173, n_alt = 5
   Insn 65: point = 175, n_alt = 5
  BB 10
   Insn 63: point = 176, n_alt = -1
   Insn 62: point = 176, n_alt = 0
   Insn 61: point = 177, n_alt = 0
   Insn 60: point = 179, n_alt = 5
   Insn 59: point = 181, n_alt = 5
  BB 9
   Insn 56: point = 182, n_alt = 7
   Insn 55: point = 183, n_alt = 0
   Insn 54: point = 185, n_alt = 5
   Insn 53: point = 186, n_alt = 5
   Insn 52: point = 188, n_alt = 5
  BB 8
   Insn 50: point = 189, n_alt = -1
   Insn 49: point = 189, n_alt = 0
   Insn 48: point = 190, n_alt = 0
   Insn 47: point = 192, n_alt = 5
   Insn 46: point = 194, n_alt = 5
  BB 7
   Insn 44: point = 195, n_alt = -1
   Insn 43: point = 195, n_alt = 0
   Insn 42: point = 196, n_alt = 0
   Insn 41: point = 198, n_alt = 5
   Insn 40: point = 200, n_alt = 5
  BB 5
   Insn 33: point = 201, n_alt = -1
   Insn 32: point = 201, n_alt = 1
   Insn 31: point = 202, n_alt = 5
   Insn 30: point = 203, n_alt = 0
   Insn 29: point = 205, n_alt = 5
   Insn 28: point = 207, n_alt = 5
   Insn 27: point = 208, n_alt = 6
   Insn 26: point = 209, n_alt = 0
   Insn 25: point = 211, n_alt = 0
   Insn 24: point = 213, n_alt = 5
   Insn 23: point = 214, n_alt = 5
  BB 4
   Insn 21: point = 215, n_alt = -1
   Insn 20: point = 215, n_alt = 1
   Insn 19: point = 216, n_alt = 5
   Insn 18: point = 217, n_alt = 0
   Insn 17: point = 219, n_alt = 5
   Insn 16: point = 221, n_alt = 5
  BB 2
   Insn 9: point = 222, n_alt = -1
   Insn 8: point = 222, n_alt = 0
   Insn 7: point = 223, n_alt = 5
   Insn 3: point = 224, n_alt = 7
   Insn 2: point = 224, n_alt = 7
 r113: [220..221]
 r114: [218..219]
 r115: [215..217]
 r116: [208..214]
 r117: [210..211]
 r118: [206..207]
 r119: [204..205]
 r120: [201..203]
 r121: [197..198]
 r122: [195..196]
 r123: [191..192]
 r124: [189..190]
 r125: [187..188]
 r126: [184..186]
 r127: [182..185]
 r128: [182..183]
 r129: [178..179]
 r130: [176..177]
 r131: [174..175]
 r132: [171..173]
 r133: [169..172]
 r134: [169..170]
 r135: [167..168]
 r136: [165..166]
 r137: [159..164]
 r138: [159..161]
 r139: [157..160]
 r140: [157..158]
 r141: [153..154]
 r142: [151..152]
 r143: [141..142]
 r144: [139..140]
 r145: [137..138]
 r146: [135..136]
 r147: [131..132]
 r148: [127..128]
 r149: [125..126]
 r150: [123..124]
 r151: [121..122]
 r152: [119..120]
 r153: [117..118]
 r154: [115..116]
 r155: [113..114]
 r156: [111..112]
 r157: [105..110]
 r158: [105..107]
 r159: [103..106]
 r160: [103..104]
 r161: [148..150]
 r162: [145..147]
 r163: [101..102]
 r164: [99..100]
 r165: [92..98]
 r166: [94..95]
 r167: [92..93]
 r168: [90..91]
 r169: [88..89]
 r170: [85..87]
 r171: [78..84]
 r172: [80..81]
 r173: [76..77]
 r174: [74..75]
 r175: [71..73]
 r176: [67..68]
 r177: [65..66]
 r178: [63..64]
 r179: [61..62]
 r180: [55..60]
 r181: [55..57]
 r182: [53..56]
 r183: [53..54]
 r184: [49..50]
 r185: [47..48]
 r186: [45..46]
 r187: [43..44]
 r188: [35..42]
 r189: [38..39]
 r190: [35..37]
 r191: [33..36]
 r192: [33..34]
 r193: [19..32]
 r194: [30..31]
 r195: [28..29]
 r196: [26..27]
 r197: [23..25]
 r198: [21..22]
 r199: [19..20]
 r200: [16..18]
 r201: [12..13]
 r202: [2..11]
 r203: [0..1]
 r204: [222..223]
 r205: [215..216]
 r206: [212..213]
 r207: [208..209]
 r208: [201..202]
 r209: [199..200]
 r210: [193..194]
 r211: [180..181]
 r212: [162..163]
 r213: [155..156]
 r214: [143..144]
 r215: [133..134]
 r216: [129..130]
 r217: [108..109]
 r218: [148..149]
 r219: [145..146]
 r220: [96..97]
 r221: [85..86]
 r222: [82..83]
 r223: [78..79]
 r224: [71..72]
 r225: [69..70]
 r226: [58..59]
 r227: [51..52]
 r228: [40..41]
 r229: [23..24]
 r230: [16..17]
 r231: [14..15]
Compressing live ranges: from 224 to 194 - 86%
Ranges after the compression:
 r113: [190..191]
 r114: [188..189]
 r115: [186..187]
 r116: [180..185]
 r117: [182..183]
 r118: [178..179]
 r119: [176..177]
 r120: [174..175]
 r121: [170..171]
 r122: [168..169]
 r123: [164..165]
 r124: [162..163]
 r125: [160..161]
 r126: [158..159]
 r127: [156..159]
 r128: [156..157]
 r129: [152..153]
 r130: [150..151]
 r131: [148..149]
 r132: [146..147]
 r133: [144..147]
 r134: [144..145]
 r135: [142..143]
 r136: [140..141]
 r137: [136..139]
 r138: [136..137]
 r139: [134..137]
 r140: [134..135]
 r141: [130..131]
 r142: [128..129]
 r143: [120..121]
 r144: [118..119]
 r145: [116..117]
 r146: [114..115]
 r147: [110..111]
 r148: [106..107]
 r149: [104..105]
 r150: [102..103]
 r151: [100..101]
 r152: [98..99]
 r153: [96..97]
 r154: [94..95]
 r155: [92..93]
 r156: [90..91]
 r157: [86..89]
 r158: [86..87]
 r159: [84..87]
 r160: [84..85]
 r161: [126..127]
 r162: [124..125]
 r163: [82..83]
 r164: [80..81]
 r165: [74..79]
 r166: [76..77]
 r167: [74..75]
 r168: [72..73]
 r169: [70..71]
 r170: [68..69]
 r171: [62..67]
 r172: [64..65]
 r173: [60..61]
 r174: [58..59]
 r175: [56..57]
 r176: [52..53]
 r177: [50..51]
 r178: [48..49]
 r179: [46..47]
 r180: [42..45]
 r181: [42..43]
 r182: [40..43]
 r183: [40..41]
 r184: [36..37]
 r185: [34..35]
 r186: [32..33]
 r187: [30..31]
 r188: [24..29]
 r189: [26..27]
 r190: [24..25]
 r191: [22..25]
 r192: [22..23]
 r193: [10..21]
 r194: [20..21]
 r195: [18..19]
 r196: [16..17]
 r197: [14..15]
 r198: [12..13]
 r199: [10..11]
 r200: [8..9]
 r201: [4..5]
 r202: [2..3]
 r203: [0..1]
 r204: [192..193]
 r205: [186..187]
 r206: [184..185]
 r207: [180..181]
 r208: [174..175]
 r209: [172..173]
 r210: [166..167]
 r211: [154..155]
 r212: [138..139]
 r213: [132..133]
 r214: [122..123]
 r215: [112..113]
 r216: [108..109]
 r217: [88..89]
 r218: [126..127]
 r219: [124..125]
 r220: [78..79]
 r221: [68..69]
 r222: [66..67]
 r223: [62..63]
 r224: [56..57]
 r225: [54..55]
 r226: [44..45]
 r227: [38..39]
 r228: [28..29]
 r229: [14..15]
 r230: [8..9]
 r231: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 23
changing reg in insn 27
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 32
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 56
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 68
changing reg in insn 67
changing reg in insn 69
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 76
changing reg in insn 77
changing reg in insn 79
changing reg in insn 78
changing reg in insn 79
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 89
changing reg in insn 90
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 105
changing reg in insn 106
changing reg in insn 110
changing reg in insn 111
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 117
changing reg in insn 118
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 133
changing reg in insn 141
changing reg in insn 142
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 147
changing reg in insn 148
changing reg in insn 155
changing reg in insn 157
changing reg in insn 157
changing reg in insn 161
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 176
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 176
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 184
changing reg in insn 187
changing reg in insn 191
changing reg in insn 189
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 196
changing reg in insn 205
changing reg in insn 206
changing reg in insn 206
changing reg in insn 207
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 212
changing reg in insn 212
changing reg in insn 214
changing reg in insn 215
changing reg in insn 217
changing reg in insn 216
changing reg in insn 217
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 223
changing reg in insn 226
changing reg in insn 227
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 232
changing reg in insn 234
changing reg in insn 233
changing reg in insn 234
changing reg in insn 238
changing reg in insn 246
changing reg in insn 239
changing reg in insn 240
changing reg in insn 240
changing reg in insn 241
changing reg in insn 241
changing reg in insn 242
changing reg in insn 242
changing reg in insn 244
changing reg in insn 244
changing reg in insn 245
changing reg in insn 245
changing reg in insn 246
changing reg in insn 246
changing reg in insn 248
changing reg in insn 250
changing reg in insn 251
changing reg in insn 253
changing reg in insn 199
changing reg in insn 164
changing reg in insn 136
changing reg in insn 121
changing reg in insn 99
changing reg in insn 35
changing reg in insn 11
changing reg in insn 256
changing reg in insn 256
changing reg in insn 260
changing reg in insn 7
changing reg in insn 8
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 31
changing reg in insn 32
changing reg in insn 40
changing reg in insn 41
changing reg in insn 46
changing reg in insn 47
changing reg in insn 59
changing reg in insn 60
changing reg in insn 75
changing reg in insn 76
changing reg in insn 82
changing reg in insn 83
changing reg in insn 88
changing reg in insn 89
changing reg in insn 104
changing reg in insn 105
changing reg in insn 109
changing reg in insn 110
changing reg in insn 144
changing reg in insn 145
changing reg in insn 156
changing reg in insn 157
changing reg in insn 160
changing reg in insn 161
changing reg in insn 172
changing reg in insn 173
changing reg in insn 183
changing reg in insn 184
changing reg in insn 188
changing reg in insn 190
changing reg in insn 191
changing reg in insn 195
changing reg in insn 196
changing reg in insn 204
changing reg in insn 205
changing reg in insn 213
changing reg in insn 214
changing reg in insn 220
changing reg in insn 221
changing reg in insn 229
changing reg in insn 230
changing reg in insn 243
changing reg in insn 244
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 250
deleting insn with uid = 26.
deleting insn with uid = 190.
deleting insn with uid = 245.
deleting insn with uid = 256.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 252.


HAL_RCC_ClockConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={7d,7u} r1={10d,6u} r2={24d,19u} r3={103d,91u} r7={1d,60u} r12={8d} r13={1d,39u} r14={5d} r15={4d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={23d,19u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 733{491d,242u,0e} in 187{183 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 204
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])
        (reg:SI 0 r0 [ RCC_ClkInitStruct ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":592:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])
        (reg:SI 1 r1 [ FLatency ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":592:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [204])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":596:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [204])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":596:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":596:6 273 {arm_cond_branch}
     (nil)
 -> 14)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 263 3 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":598:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 263 11 264 3 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":598:12 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:598:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 264 263 14)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 205
(code_label 14 264 15 4 66 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":610:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 _1->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":610:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":610:18 90 {*arm_andsi3_insn}
     (nil))
(insn 19 18 20 4 (set (reg:SI 2 r2 [205])
        (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":610:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [205])
            (reg:SI 3 r3 [orig:115 _3 ] [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":610:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":610:6 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 116 117 118 119 120 206 207 208
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":613:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 5 (set (reg:SI 2 r2 [206])
        (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":613:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 27 5 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (zero_extend:SI (reg:QI 2 r2 [206]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":613:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 27 25 28 5 (set (mem/v:QI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [0 *_4+0 S1 A8])
        (reg:QI 2 r2 [207])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":613:5 263 {*arm_movqi_insn}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":617:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 5 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118]) [1 _6->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":617:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 5 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":617:9 90 {*arm_andsi3_insn}
     (nil))
(insn 31 30 32 5 (set (reg:SI 2 r2 [208])
        (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":617:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [208])
            (reg:SI 3 r3 [orig:120 _8 ] [120]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":617:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":617:8 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 265 6 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":619:14 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 265 35 266 6 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":619:14 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:619:14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 266 265 38)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 121 122 209
(code_label 38 266 39 7 68 (nil) [2 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 3 r3 [209])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":624:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 7 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem:SI (reg/f:SI 3 r3 [209]) [1 RCC_ClkInitStruct_101(D)->ClockType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":624:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 7 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (and:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":624:39 90 {*arm_andsi3_insn}
     (nil))
(insn 43 42 44 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":624:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":624:6 273 {arm_cond_branch}
     (nil)
 -> 80)
;;  succ:       8 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 123 124 210
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 3 r3 [210])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":628:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 8 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem:SI (reg/f:SI 3 r3 [210]) [1 RCC_ClkInitStruct_101(D)->ClockType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":628:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 8 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (and:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":628:41 90 {*arm_andsi3_insn}
     (nil))
(insn 49 48 50 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":628:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":628:8 273 {arm_cond_branch}
     (nil)
 -> 57)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126 127 128
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":630:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 9 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:125 _13 ] [125])
                (const_int 8 [0x8])) [1 _13->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":630:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 9 (set (reg/f:SI 2 r2 [orig:127 _15 ] [127])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":630:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 9 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (ior:SI (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 7168 [0x1c00]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":630:7 106 {*iorsi3_insn}
     (nil))
(insn 56 55 57 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:127 _15 ] [127])
                (const_int 8 [0x8])) [1 _15->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":630:7 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129 130 211
(code_label 57 56 58 10 70 (nil) [1 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg/f:SI 3 r3 [211])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":633:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 10 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem:SI (reg/f:SI 3 r3 [211]) [1 RCC_ClkInitStruct_101(D)->ClockType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":633:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 10 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (and:SI (reg:SI 3 r3 [orig:129 _17 ] [129])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":633:41 90 {*arm_andsi3_insn}
     (nil))
(insn 62 61 63 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:130 _18 ] [130])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":633:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 63 62 64 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":633:8 273 {arm_cond_branch}
     (nil)
 -> 70)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131 132 133 134
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg/f:SI 3 r3 [orig:131 _19 ] [131])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":635:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 11 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:131 _19 ] [131])
                (const_int 8 [0x8])) [1 _19->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":635:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 11 (set (reg/f:SI 2 r2 [orig:133 _21 ] [133])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":635:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 11 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (ior:SI (reg:SI 3 r3 [orig:132 _20 ] [132])
            (const_int 57344 [0xe000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":635:7 106 {*iorsi3_insn}
     (nil))
(insn 69 68 70 11 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:133 _21 ] [133])
                (const_int 8 [0x8])) [1 _21->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:134 _22 ] [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":635:7 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136 137 138 139 140 212
(code_label 70 69 71 12 71 (nil) [1 uses])
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg/f:SI 3 r3 [orig:135 _23 ] [135])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 12 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:135 _23 ] [135])
                (const_int 8 [0x8])) [1 _23->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 12 (set (reg:SI 2 r2 [orig:137 _25 ] [137])
        (and:SI (reg:SI 3 r3 [orig:136 _24 ] [136])
            (const_int -241 [0xffffffffffffff0f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 90 {*arm_andsi3_insn}
     (nil))
(insn 75 74 76 12 (set (reg/f:SI 3 r3 [212])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 12 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [212])
                (const_int 8 [0x8])) [1 RCC_ClkInitStruct_101(D)->AHBCLKDivider+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 12 (set (reg/f:SI 1 r1 [orig:139 _27 ] [139])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 12 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (ior:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (reg:SI 2 r2 [orig:137 _25 ] [137]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 106 {*iorsi3_insn}
     (nil))
(insn 79 78 80 12 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:139 _27 ] [139])
                (const_int 8 [0x8])) [1 _27->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:140 _28 ] [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":639:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       7
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 141 142 213
(code_label 80 79 81 13 69 (nil) [1 uses])
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg/f:SI 3 r3 [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":643:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 13 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (mem:SI (reg/f:SI 3 r3 [213]) [1 RCC_ClkInitStruct_101(D)->ClockType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":643:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 13 (set (reg:SI 3 r3 [orig:142 _30 ] [142])
        (and:SI (reg:SI 3 r3 [orig:141 _29 ] [141])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":643:39 90 {*arm_andsi3_insn}
     (nil))
(insn 85 84 86 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:142 _30 ] [142])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":643:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 86 85 87 13 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":643:6 273 {arm_cond_branch}
     (nil)
 -> 178)
;;  succ:       14 (FALLTHRU)
;;              27
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 143 214
(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 14 (set (reg/f:SI 3 r3 [214])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":648:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 14 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [214])
                (const_int 4 [0x4])) [1 RCC_ClkInitStruct_101(D)->SYSCLKSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":648:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 _31 ] [143])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":648:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 91 90 92 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":648:8 273 {arm_cond_branch}
     (nil)
 -> 102)
;;  succ:       15 (FALLTHRU)
;;              17
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 144 145 146
(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (set (reg/f:SI 3 r3 [orig:144 _32 ] [144])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":651:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 95 15 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (mem/v:SI (reg/f:SI 3 r3 [orig:144 _32 ] [144]) [1 _32->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":651:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 95 94 96 15 (set (reg:SI 3 r3 [orig:146 _34 ] [146])
        (and:SI (reg:SI 3 r3 [orig:145 _33 ] [145])
            (const_int 131072 [0x20000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":651:11 90 {*arm_andsi3_insn}
     (nil))
(insn 96 95 97 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:146 _34 ] [146])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":651:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 97 96 98 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":651:10 273 {arm_cond_branch}
     (nil)
 -> 139)
;;  succ:       16 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 98 97 99 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 267 16 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":653:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 267 99 268 16 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":653:16 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:653:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 268 267 102)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147 215
(code_label 102 268 103 17 73 (nil) [1 uses])
(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 17 (set (reg/f:SI 3 r3 [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":657:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 105 104 106 17 (set (reg:SI 3 r3 [orig:147 _35 ] [147])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [215])
                (const_int 4 [0x4])) [1 RCC_ClkInitStruct_101(D)->SYSCLKSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":657:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 106 105 107 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:147 _35 ] [147])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":657:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 107 106 108 17 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":657:13 273 {arm_cond_branch}
     (nil)
 -> 113)
;;  succ:       19
;;              18 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 148 216
(note 108 107 109 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 18 (set (reg/f:SI 3 r3 [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":658:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 110 109 111 18 (set (reg:SI 3 r3 [orig:148 _36 ] [148])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [216])
                (const_int 4 [0x4])) [1 RCC_ClkInitStruct_101(D)->SYSCLKSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":658:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 111 110 112 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 _36 ] [148])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":657:77 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 112 111 113 18 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":657:77 273 {arm_cond_branch}
     (nil)
 -> 128)
;;  succ:       19 (FALLTHRU)
;;              21
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 149 150 151
(code_label 113 112 114 19 75 (nil) [1 uses])
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg/f:SI 3 r3 [orig:149 _37 ] [149])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":661:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 116 115 117 19 (set (reg:SI 3 r3 [orig:150 _38 ] [150])
        (mem/v:SI (reg/f:SI 3 r3 [orig:149 _37 ] [149]) [1 _37->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":661:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 117 116 118 19 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (and:SI (reg:SI 3 r3 [orig:150 _38 ] [150])
            (const_int 33554432 [0x2000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":661:11 90 {*arm_andsi3_insn}
     (nil))
(insn 118 117 119 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:151 _39 ] [151])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":661:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 119 118 120 19 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 139)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":661:10 273 {arm_cond_branch}
     (nil)
 -> 139)
;;  succ:       20 (FALLTHRU)
;;              23 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:661:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 120 119 121 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 269 20 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":663:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 269 121 270 20 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":663:16 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:663:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 270 269 128)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 152 153 154
(code_label 128 270 129 21 76 (nil) [1 uses])
(note 129 128 130 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 21 (set (reg/f:SI 3 r3 [orig:152 _40 ] [152])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":670:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 132 21 (set (reg:SI 3 r3 [orig:153 _41 ] [153])
        (mem/v:SI (reg/f:SI 3 r3 [orig:152 _40 ] [152]) [1 _40->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":670:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 21 (set (reg:SI 3 r3 [orig:154 _42 ] [154])
        (and:SI (reg:SI 3 r3 [orig:153 _41 ] [153])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":670:11 90 {*arm_andsi3_insn}
     (nil))
(insn 133 132 134 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:154 _42 ] [154])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":670:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 134 133 135 21 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":670:10 273 {arm_cond_branch}
     (nil)
 -> 139)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 135 134 136 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 271 22 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":672:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 271 136 272 22 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":672:16 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:672:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 272 271 139)
;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       15
;;              19 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:661:10
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 155 156 157 158 159 160 217
(code_label 139 272 140 23 74 (nil) [3 uses])
(note 140 139 141 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 23 (set (reg/f:SI 3 r3 [orig:155 _43 ] [155])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 142 141 143 23 (set (reg:SI 3 r3 [orig:156 _44 ] [156])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:155 _43 ] [155])
                (const_int 8 [0x8])) [1 _43->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 143 142 144 23 (set (reg:SI 2 r2 [orig:157 _45 ] [157])
        (and:SI (reg:SI 3 r3 [orig:156 _44 ] [156])
            (const_int -4 [0xfffffffffffffffc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 90 {*arm_andsi3_insn}
     (nil))
(insn 144 143 145 23 (set (reg/f:SI 3 r3 [217])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 145 144 146 23 (set (reg:SI 3 r3 [orig:158 _46 ] [158])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [217])
                (const_int 4 [0x4])) [1 RCC_ClkInitStruct_101(D)->SYSCLKSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 146 145 147 23 (set (reg/f:SI 1 r1 [orig:159 _47 ] [159])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 147 146 148 23 (set (reg:SI 3 r3 [orig:160 _48 ] [160])
        (ior:SI (reg:SI 3 r3 [orig:158 _46 ] [158])
            (reg:SI 2 r2 [orig:157 _45 ] [157]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 106 {*iorsi3_insn}
     (nil))
(insn 148 147 149 23 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:159 _47 ] [159])
                (const_int 8 [0x8])) [1 _47->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:160 _48 ] [160])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":676:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 149 148 150 23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":679:17 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 150 149 273 23 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tickstart+0 S4 A32])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":679:17 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 273 150 274 23 (set (pc)
        (label_ref 167)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:11 284 {*arm_jump}
     (nil)
 -> 167)
;;  succ:       26 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:681:11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 274 273 175)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 161 162 218 219
(code_label 175 274 153 24 79 (nil) [1 uses])
(note 153 175 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(call_insn 154 153 155 24 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006829d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:12 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 155 154 156 24 (set (reg:SI 2 r2 [orig:161 _49 ] [161])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 156 155 157 24 (set (reg:SI 3 r3 [218])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tickstart+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 157 156 160 24 (set (reg:SI 3 r3 [orig:162 _50 ] [162])
        (minus:SI (reg:SI 2 r2 [orig:161 _49 ] [161])
            (reg:SI 3 r3 [218]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:26 45 {*arm_subsi3_insn}
     (nil))
(insn 160 157 161 24 (set (reg:SI 2 r2 [219])
        (const_int 5000 [0x1388])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 161 160 162 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:162 _50 ] [162])
            (reg:SI 2 r2 [219]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 162 161 163 24 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":683:10 273 {arm_cond_branch}
     (nil)
 -> 167)
;;  succ:       25 (FALLTHRU)
;;              26 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 163 162 164 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 275 25 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":685:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 275 164 276 25 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":685:16 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:685:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 276 275 167)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       24 (DFS_BACK)
;;              23 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:681:11
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 163 164 165 166 167 220
(code_label 167 276 168 26 78 (nil) [2 uses])
(note 168 167 169 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 26 (set (reg/f:SI 3 r3 [orig:163 _51 ] [163])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 170 169 171 26 (set (reg:SI 3 r3 [orig:164 _52 ] [164])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:163 _51 ] [163])
                (const_int 8 [0x8])) [1 _51->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 171 170 172 26 (set (reg:SI 2 r2 [orig:165 _53 ] [165])
        (and:SI (reg:SI 3 r3 [orig:164 _52 ] [164])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:12 90 {*arm_andsi3_insn}
     (nil))
(insn 172 171 173 26 (set (reg/f:SI 3 r3 [220])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:63 749 {*thumb2_movsi_vfp}
     (nil))
(insn 173 172 174 26 (set (reg:SI 3 r3 [orig:166 _54 ] [166])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [220])
                (const_int 4 [0x4])) [1 RCC_ClkInitStruct_101(D)->SYSCLKSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:63 749 {*thumb2_movsi_vfp}
     (nil))
(insn 174 173 176 26 (set (reg:SI 3 r3 [orig:167 _55 ] [167])
        (ashift:SI (reg:SI 3 r3 [orig:166 _54 ] [166])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:78 147 {*arm_shiftsi3}
     (nil))
(insn 176 174 177 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [orig:165 _53 ] [165])
            (reg:SI 3 r3 [orig:167 _55 ] [167]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:42 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 177 176 178 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 175)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":681:42 273 {arm_cond_branch}
     (nil)
 -> 175)
;;  succ:       24
;;              27 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       13
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 168 169 170 221
(code_label 178 177 179 27 72 (nil) [1 uses])
(note 179 178 180 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 27 (set (reg/f:SI 3 r3 [orig:168 _56 ] [168])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":691:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 181 180 182 27 (set (reg:SI 3 r3 [orig:169 _57 ] [169])
        (mem/v:SI (reg/f:SI 3 r3 [orig:168 _56 ] [168]) [1 _56->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":691:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 182 181 183 27 (set (reg:SI 3 r3 [orig:170 _58 ] [170])
        (and:SI (reg:SI 3 r3 [orig:169 _57 ] [169])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":691:18 90 {*arm_andsi3_insn}
     (nil))
(insn 183 182 184 27 (set (reg:SI 2 r2 [221])
        (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":691:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 184 183 185 27 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [221])
            (reg:SI 3 r3 [orig:170 _58 ] [170]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":691:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 185 184 186 27 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":691:6 273 {arm_cond_branch}
     (nil)
 -> 202)
;;  succ:       28 (FALLTHRU)
;;              30
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 171 172 173 174 175 222 223 224
(note 186 185 187 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 28 (set (reg/f:SI 3 r3 [orig:171 _59 ] [171])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":694:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 188 187 189 28 (set (reg:SI 2 r2 [222])
        (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":694:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 189 188 191 28 (set (reg:SI 2 r2 [orig:172 _60 ] [172])
        (zero_extend:SI (reg:QI 2 r2 [222]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":694:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 191 189 192 28 (set (mem/v:QI (reg/f:SI 3 r3 [orig:171 _59 ] [171]) [0 *_59+0 S1 A8])
        (reg:QI 2 r2 [223])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":694:5 263 {*arm_movqi_insn}
     (nil))
(insn 192 191 193 28 (set (reg/f:SI 3 r3 [orig:173 _61 ] [173])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":698:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 193 192 194 28 (set (reg:SI 3 r3 [orig:174 _62 ] [174])
        (mem/v:SI (reg/f:SI 3 r3 [orig:173 _61 ] [173]) [1 _61->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":698:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 194 193 195 28 (set (reg:SI 3 r3 [orig:175 _63 ] [175])
        (and:SI (reg:SI 3 r3 [orig:174 _62 ] [174])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":698:9 90 {*arm_andsi3_insn}
     (nil))
(insn 195 194 196 28 (set (reg:SI 2 r2 [224])
        (mem/c:SI (reg/f:SI 7 r7) [1 FLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":698:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 196 195 197 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [224])
            (reg:SI 3 r3 [orig:175 _63 ] [175]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":698:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 197 196 198 28 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":698:8 273 {arm_cond_branch}
     (nil)
 -> 202)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 202
(note 198 197 199 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 277 29 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":700:14 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 277 199 278 29 (set (pc)
        (label_ref 254)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":700:14 284 {*arm_jump}
     (nil)
 -> 254)
;;  succ:       35 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:700:14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

(barrier 278 277 202)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       27
;;              28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 176 177 225
(code_label 202 278 203 30 80 (nil) [2 uses])
(note 203 202 204 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 30 (set (reg/f:SI 3 r3 [225])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":705:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 205 204 206 30 (set (reg:SI 3 r3 [orig:176 _64 ] [176])
        (mem:SI (reg/f:SI 3 r3 [225]) [1 RCC_ClkInitStruct_101(D)->ClockType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":705:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 206 205 207 30 (set (reg:SI 3 r3 [orig:177 _65 ] [177])
        (and:SI (reg:SI 3 r3 [orig:176 _64 ] [176])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":705:39 90 {*arm_andsi3_insn}
     (nil))
(insn 207 206 208 30 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:177 _65 ] [177])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":705:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 208 207 209 30 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":705:6 273 {arm_cond_branch}
     (nil)
 -> 218)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 178 179 180 181 182 183 226
(note 209 208 210 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 31 (set (reg/f:SI 3 r3 [orig:178 _66 ] [178])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 211 210 212 31 (set (reg:SI 3 r3 [orig:179 _67 ] [179])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:178 _66 ] [178])
                (const_int 8 [0x8])) [1 _66->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 212 211 213 31 (set (reg:SI 2 r2 [orig:180 _68 ] [180])
        (and:SI (reg:SI 3 r3 [orig:179 _67 ] [179])
            (const_int -7169 [0xffffffffffffe3ff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 90 {*arm_andsi3_insn}
     (nil))
(insn 213 212 214 31 (set (reg/f:SI 3 r3 [226])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 214 213 215 31 (set (reg:SI 3 r3 [orig:181 _69 ] [181])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [226])
                (const_int 12 [0xc])) [1 RCC_ClkInitStruct_101(D)->APB1CLKDivider+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 215 214 216 31 (set (reg/f:SI 1 r1 [orig:182 _70 ] [182])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 216 215 217 31 (set (reg:SI 3 r3 [orig:183 _71 ] [183])
        (ior:SI (reg:SI 3 r3 [orig:181 _69 ] [181])
            (reg:SI 2 r2 [orig:180 _68 ] [180]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 106 {*iorsi3_insn}
     (nil))
(insn 217 216 218 31 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:182 _70 ] [182])
                (const_int 8 [0x8])) [1 _70->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:183 _71 ] [183])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":708:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       32 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       30
;;              31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 184 185 227
(code_label 218 217 219 32 81 (nil) [1 uses])
(note 219 218 220 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 32 (set (reg/f:SI 3 r3 [227])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":712:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 221 220 222 32 (set (reg:SI 3 r3 [orig:184 _72 ] [184])
        (mem:SI (reg/f:SI 3 r3 [227]) [1 RCC_ClkInitStruct_101(D)->ClockType+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":712:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 222 221 223 32 (set (reg:SI 3 r3 [orig:185 _73 ] [185])
        (and:SI (reg:SI 3 r3 [orig:184 _72 ] [184])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":712:39 90 {*arm_andsi3_insn}
     (nil))
(insn 223 222 224 32 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:185 _73 ] [185])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":712:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 224 223 225 32 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":712:6 273 {arm_cond_branch}
     (nil)
 -> 235)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 186 187 188 189 190 191 192 228
(note 225 224 226 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 33 (set (reg/f:SI 3 r3 [orig:186 _74 ] [186])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 227 226 228 33 (set (reg:SI 3 r3 [orig:187 _75 ] [187])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:186 _74 ] [186])
                (const_int 8 [0x8])) [1 _74->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 228 227 229 33 (set (reg:SI 2 r2 [orig:188 _76 ] [188])
        (and:SI (reg:SI 3 r3 [orig:187 _75 ] [187])
            (const_int -57345 [0xffffffffffff1fff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 90 {*arm_andsi3_insn}
     (nil))
(insn 229 228 230 33 (set (reg/f:SI 3 r3 [228])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 230 229 231 33 (set (reg:SI 3 r3 [orig:189 _77 ] [189])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [228])
                (const_int 16 [0x10])) [1 RCC_ClkInitStruct_101(D)->APB2CLKDivider+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 231 230 232 33 (set (reg:SI 3 r3 [orig:190 _78 ] [190])
        (ashift:SI (reg:SI 3 r3 [orig:189 _77 ] [189])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 147 {*arm_shiftsi3}
     (nil))
(insn 232 231 233 33 (set (reg/f:SI 1 r1 [orig:191 _79 ] [191])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 233 232 234 33 (set (reg:SI 3 r3 [orig:192 _80 ] [192])
        (ior:SI (reg:SI 3 r3 [orig:190 _78 ] [190])
            (reg:SI 2 r2 [orig:188 _76 ] [188]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 106 {*iorsi3_insn}
     (nil))
(insn 234 233 235 33 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:191 _79 ] [191])
                (const_int 8 [0x8])) [1 _79->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:192 _80 ] [192])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":715:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       32
;;              33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 193 194 195 196 197 198 199 200 201 202 229 230 231
(code_label 235 234 236 34 82 (nil) [1 uses])
(note 236 235 237 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(call_insn 237 236 238 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref/i:SI ("HAL_RCC_GetSysClockFreq") [flags 0x3]  <function_decl 000000000668e900 HAL_RCC_GetSysClockFreq>) [0 HAL_RCC_GetSysClockFreq S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:21 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 238 237 239 34 (set (reg:SI 2 r2 [orig:193 _81 ] [193])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 239 238 240 34 (set (reg/f:SI 3 r3 [orig:194 _82 ] [194])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:68 749 {*thumb2_movsi_vfp}
     (nil))
(insn 240 239 241 34 (set (reg:SI 3 r3 [orig:195 _83 ] [195])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:194 _82 ] [194])
                (const_int 8 [0x8])) [1 _82->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:68 749 {*thumb2_movsi_vfp}
     (nil))
(insn 241 240 242 34 (set (reg:SI 3 r3 [orig:196 _84 ] [196])
        (lshiftrt:SI (reg:SI 3 r3 [orig:195 _83 ] [195])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:92 147 {*arm_shiftsi3}
     (nil))
(insn 242 241 243 34 (set (reg:SI 3 r3 [orig:197 _85 ] [197])
        (and:SI (reg:SI 3 r3 [orig:196 _84 ] [196])
            (const_int 15 [0xf]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:92 90 {*arm_andsi3_insn}
     (nil))
(insn 243 242 244 34 (set (reg/f:SI 1 r1 [229])
        (symbol_ref:SI ("AHBPrescTable") [flags 0x40]  <var_decl 0000000006305e10 AHBPrescTable>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:63 749 {*thumb2_movsi_vfp}
     (nil))
(insn 244 243 246 34 (set (reg:SI 3 r3 [orig:198 _86 ] [198])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1 r1 [229])
                    (reg:SI 3 r3 [orig:197 _85 ] [197])) [0 AHBPrescTable[_85]+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:63 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 246 244 247 34 (set (reg:SI 3 r3 [orig:200 _88 ] [200])
        (lshiftrt:SI (reg:SI 2 r2 [orig:193 _81 ] [193])
            (reg:SI 3 r3 [orig:199 _87 ] [199]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:47 147 {*arm_shiftsi3}
     (nil))
(insn 247 246 248 34 (set (reg/f:SI 2 r2 [230])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x40]  <var_decl 0000000006305d80 SystemCoreClock>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 248 247 249 34 (set (mem/c:SI (reg/f:SI 2 r2 [230]) [1 SystemCoreClock+0 S4 A32])
        (reg:SI 3 r3 [orig:200 _88 ] [200])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":719:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 249 248 250 34 (set (reg/f:SI 3 r3 [231])
        (symbol_ref:SI ("uwTickPrio") [flags 0x40]  <var_decl 00000000067b0750 uwTickPrio>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":722:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 250 249 251 34 (set (reg:SI 3 r3 [orig:201 uwTickPrio.1_89 ] [201])
        (mem/c:SI (reg/f:SI 3 r3 [231]) [1 uwTickPrio+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":722:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 251 250 252 34 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:201 uwTickPrio.1_89 ] [201])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":722:3 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 252 251 253 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_InitTick") [flags 0x41]  <function_decl 0000000006829a00 HAL_InitTick>) [0 HAL_InitTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":722:3 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 253 252 254 34 (set (reg:SI 3 r3 [orig:202 _90 ] [202])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":724:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       35 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:724:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 1, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:724:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:598:12
;;              6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:619:14
;;              16 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:653:16
;;              20 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:663:16
;;              22 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:672:16
;;              25 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:685:16
;;              29 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:700:14
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 202
;; lr  def 	 0 [r0] 203
(code_label 254 253 255 35 67 (nil) [7 uses])
(note 255 254 260 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 260 255 261 35 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:203 <retval> ] [203])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":725:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 261 260 303 35 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":725:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 303 261 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_MCOConfig (HAL_RCC_MCOConfig, funcdef_no=137, decl_uid=6996, cgraph_uid=142, symbol_order=141)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=56, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=0)
Can't eliminate 102 to 13 (offset=48, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 22:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 25:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 27:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 29:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 31:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 33:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 34:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 40:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 43
	 Choosing alt 1 in insn 43:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 45
	 Choosing alt 1 in insn 45:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 46:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 52:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 66:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 68:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=19,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=2,overall=10,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 73:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=15,losers=2,rld_nregs=2
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 79:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 83
	 Choosing alt 1 in insn 83:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 85
	 Choosing alt 1 in insn 85:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 86:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 94: point = 0, n_alt = -1
  BB 3
   Insn 91: point = 0, n_alt = -1
   Insn 46: point = 0, n_alt = 7
   Insn 45: point = 1, n_alt = 1
   Insn 44: point = 3, n_alt = 5
   Insn 43: point = 4, n_alt = 1
   Insn 42: point = 6, n_alt = 5
   Insn 41: point = 7, n_alt = 5
   Insn 40: point = 8, n_alt = 2
   Insn 39: point = 10, n_alt = 5
   Insn 38: point = 12, n_alt = 5
   Insn 37: point = 13, n_alt = -1
   Insn 36: point = 13, n_alt = 5
   Insn 35: point = 13, n_alt = -2
   Insn 34: point = 14, n_alt = 4
   Insn 33: point = 15, n_alt = 7
   Insn 32: point = 16, n_alt = 1
   Insn 31: point = 17, n_alt = 7
   Insn 30: point = 18, n_alt = 1
   Insn 29: point = 19, n_alt = 7
   Insn 28: point = 20, n_alt = 1
   Insn 27: point = 21, n_alt = 7
   Insn 26: point = 22, n_alt = 1
   Insn 25: point = 23, n_alt = 7
   Insn 24: point = 24, n_alt = 1
   Insn 23: point = 25, n_alt = 5
   Insn 22: point = 26, n_alt = 7
   Insn 21: point = 27, n_alt = 0
   Insn 20: point = 29, n_alt = 5
   Insn 19: point = 31, n_alt = 5
   Insn 18: point = 32, n_alt = 7
   Insn 17: point = 33, n_alt = 0
   Insn 16: point = 35, n_alt = 5
   Insn 15: point = 36, n_alt = 5
   Insn 14: point = 38, n_alt = 5
   Insn 13: point = 39, n_alt = 7
   Insn 12: point = 40, n_alt = 1
  BB 4
   Insn 86: point = 41, n_alt = 7
   Insn 85: point = 42, n_alt = 1
   Insn 84: point = 44, n_alt = 5
   Insn 83: point = 45, n_alt = 1
   Insn 82: point = 47, n_alt = 5
   Insn 81: point = 48, n_alt = 1
   Insn 80: point = 50, n_alt = 5
   Insn 79: point = 51, n_alt = 2
   Insn 78: point = 53, n_alt = 5
   Insn 77: point = 55, n_alt = 5
   Insn 76: point = 56, n_alt = -1
   Insn 75: point = 56, n_alt = 5
   Insn 74: point = 56, n_alt = -2
   Insn 73: point = 57, n_alt = 4
   Insn 72: point = 58, n_alt = 7
   Insn 71: point = 59, n_alt = 1
   Insn 70: point = 60, n_alt = 7
   Insn 69: point = 61, n_alt = 1
   Insn 68: point = 62, n_alt = 7
   Insn 67: point = 63, n_alt = 1
   Insn 66: point = 64, n_alt = 7
   Insn 65: point = 65, n_alt = 1
   Insn 64: point = 66, n_alt = 7
   Insn 63: point = 67, n_alt = 1
   Insn 62: point = 68, n_alt = 5
   Insn 61: point = 69, n_alt = 7
   Insn 60: point = 70, n_alt = 0
   Insn 59: point = 72, n_alt = 5
   Insn 58: point = 74, n_alt = 5
   Insn 57: point = 75, n_alt = 7
   Insn 56: point = 76, n_alt = 0
   Insn 55: point = 78, n_alt = 5
   Insn 54: point = 79, n_alt = 5
   Insn 53: point = 81, n_alt = 5
   Insn 52: point = 82, n_alt = 7
   Insn 51: point = 83, n_alt = 1
  BB 2
   Insn 10: point = 84, n_alt = -1
   Insn 9: point = 84, n_alt = 0
   Insn 8: point = 85, n_alt = 5
   Insn 4: point = 86, n_alt = 7
   Insn 3: point = 86, n_alt = 7
   Insn 2: point = 86, n_alt = 7
 r113: [37..38]
 r114: [34..36]
 r115: [32..35]
 r116: [32..33]
 r117: [30..31]
 r118: [28..29]
 r119: [26..27]
 r120: [11..12]
 r121: [9..10]
 r122: [2..8]
 r123: [2..4]
 r124: [0..3]
 r125: [0..1]
 r126: [80..81]
 r127: [77..79]
 r128: [75..78]
 r129: [75..76]
 r130: [73..74]
 r131: [71..72]
 r132: [69..70]
 r133: [54..55]
 r134: [52..53]
 r135: [43..51]
 r136: [46..48]
 r137: [43..45]
 r138: [41..44]
 r139: [41..42]
 r140: [68..68]
 r141: [25..25]
 r142: [84..85]
 r143: [39..40]
 r144: [23..24]
 r145: [21..22]
 r146: [19..20]
 r147: [17..18]
 r148: [15..16]
 r149: [13..14]
 r150: [5..7]
 r151: [5..6]
 r152: [82..83]
 r153: [66..67]
 r154: [64..65]
 r155: [62..63]
 r156: [60..61]
 r157: [58..59]
 r158: [56..57]
 r159: [49..50]
 r160: [46..47]
Compressing live ranges: from 86 to 78 - 90%
Ranges after the compression:
 r113: [33..34]
 r114: [31..32]
 r115: [29..32]
 r116: [29..30]
 r117: [27..28]
 r118: [25..26]
 r119: [23..24]
 r120: [8..9]
 r121: [6..7]
 r122: [2..5]
 r123: [2..3]
 r124: [0..3]
 r125: [0..1]
 r126: [72..73]
 r127: [70..71]
 r128: [68..71]
 r129: [68..69]
 r130: [66..67]
 r131: [64..65]
 r132: [62..63]
 r133: [47..48]
 r134: [45..46]
 r135: [39..44]
 r136: [41..42]
 r137: [39..40]
 r138: [37..40]
 r139: [37..38]
 r140: [61..61]
 r141: [22..22]
 r142: [76..77]
 r143: [35..36]
 r144: [20..21]
 r145: [18..19]
 r146: [16..17]
 r147: [14..15]
 r148: [12..13]
 r149: [10..11]
 r150: [4..5]
 r151: [4..5]
 r152: [74..75]
 r153: [59..60]
 r154: [57..58]
 r155: [55..56]
 r156: [53..54]
 r157: [51..52]
 r158: [49..50]
 r159: [43..44]
 r160: [41..42]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=56, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=56, prev_offset=56)
Can't eliminate 102 to 13 (offset=48, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=48, prev_offset=48)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 45
changing reg in insn 46
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 81
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 62
changing reg in insn 23
changing reg in insn 8
changing reg in insn 9
changing reg in insn 12
changing reg in insn 13
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 41
changing reg in insn 42
changing reg in insn 51
changing reg in insn 52
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 76.


HAL_RCC_MCOConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={5d,3u} r1={9d,7u} r2={7d,5u} r3={43d,38u} r7={1d,32u} r12={4d} r13={1d,8u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 334{239d,95u,0e} in 79{77 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 142
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 RCC_MCOx+0 S4 A32])
        (reg:SI 0 r0 [ RCC_MCOx ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":776:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 RCC_MCOSource+0 S4 A32])
        (reg:SI 1 r1 [ RCC_MCOSource ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":776:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RCC_MCODiv+0 S4 A32])
        (reg:SI 2 r2 [ RCC_MCODiv ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":776:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 RCC_MCOx+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":782:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [142])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":782:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":782:6 273 {arm_cond_branch}
     (nil)
 -> 49)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122 123 124 125 141 143 144 145 146 147 148 149 150 151
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 3 r3 [143])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 3 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 tmpreg+0 S4 A64])
        (reg:SI 3 r3 [143])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 48 [0x30])) [1 _1->AHB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ior:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 106 {*iorsi3_insn}
     (nil))
(insn 18 17 19 3 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 48 [0x30])) [1 _3->AHB1ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 48 [0x30])) [1 _5->AHB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 90 {*arm_andsi3_insn}
     (nil))
(insn 22 21 23 3 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 tmpreg+0 S4 A64])
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 3 r3 [orig:141 vol.2_47 ] [141])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 tmpreg+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":787:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 3 (set (reg:SI 3 r3 [144])
        (const_int 256 [0x100])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":790:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 GPIO_InitStruct.Pin+0 S4 A32])
        (reg:SI 3 r3 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":790:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 3 (set (reg:SI 3 r3 [145])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":791:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 GPIO_InitStruct.Mode+0 S4 A32])
        (reg:SI 3 r3 [145])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":791:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 3 (set (reg:SI 3 r3 [146])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":792:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [1 GPIO_InitStruct.Speed+0 S4 A32])
        (reg:SI 3 r3 [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":792:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 3 (set (reg:SI 3 r3 [147])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":793:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [1 GPIO_InitStruct.Pull+0 S4 A32])
        (reg:SI 3 r3 [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":793:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 3 (set (reg:SI 3 r3 [148])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":794:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [1 GPIO_InitStruct.Alternate+0 S4 A32])
        (reg:SI 3 r3 [148])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":794:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 3 (set (reg:SI 3 r3 [149])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 28 [0x1c]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":795:5 7 {*arm_addsi3}
     (nil))
(insn 35 34 36 3 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [149])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":795:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 3 (set (reg:SI 0 r0)
        (const_int 1073872896 [0x40020000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":795:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 37 36 38 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_GPIO_Init") [flags 0x41]  <function_decl 000000000669c900 HAL_GPIO_Init>) [0 HAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":795:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 38 37 39 3 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 3 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120])
                (const_int 8 [0x8])) [1 _8->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 3 (set (reg:SI 2 r2 [orig:122 _10 ] [122])
        (and:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int -123731969 [0xfffffffff89fffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 90 {*arm_andsi3_insn}
     (nil))
(insn 41 40 42 3 (set (reg:SI 1 r1 [150])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 RCC_MCOSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 3 (set (reg:SI 3 r3 [151])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RCC_MCODiv+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 3 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (ior:SI (reg:SI 3 r3 [151])
            (reg:SI 1 r1 [150]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 106 {*iorsi3_insn}
     (nil))
(insn 44 43 45 3 (set (reg/f:SI 1 r1 [orig:124 _12 ] [124])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 3 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (ior:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (reg:SI 2 r2 [orig:122 _10 ] [122]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 106 {*iorsi3_insn}
     (nil))
(insn 46 45 91 3 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:124 _12 ] [124])
                (const_int 8 [0x8])) [1 _12->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:125 _13 ] [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":798:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 91 46 92 3 (set (pc)
        (label_ref:SI 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":830:1 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:830:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 92 91 49)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 152 153 154 155 156 157 158 159 160
(code_label 49 92 50 4 86 (nil) [1 uses])
(note 50 49 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 4 (set (reg:SI 3 r3 [152])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 4 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmpreg+0 S4 A32])
        (reg:SI 3 r3 [152])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 4 (set (reg/f:SI 3 r3 [orig:126 _14 ] [126])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 4 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:126 _14 ] [126])
                (const_int 48 [0x30])) [1 _14->AHB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 4 (set (reg/f:SI 2 r2 [orig:128 _16 ] [128])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 4 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (ior:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 106 {*iorsi3_insn}
     (nil))
(insn 57 56 58 4 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:128 _16 ] [128])
                (const_int 48 [0x30])) [1 _16->AHB1ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:129 _17 ] [129])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 4 (set (reg/f:SI 3 r3 [orig:130 _18 ] [130])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 4 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:130 _18 ] [130])
                (const_int 48 [0x30])) [1 _18->AHB1ENR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 4 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (and:SI (reg:SI 3 r3 [orig:131 _19 ] [131])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 90 {*arm_andsi3_insn}
     (nil))
(insn 61 60 62 4 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmpreg+0 S4 A32])
        (reg:SI 3 r3 [orig:132 _20 ] [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 4 (set (reg:SI 3 r3 [orig:140 vol.3_34 ] [140])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmpreg+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":811:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 4 (set (reg:SI 3 r3 [153])
        (const_int 512 [0x200])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":814:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [1 GPIO_InitStruct.Pin+0 S4 A32])
        (reg:SI 3 r3 [153])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":814:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 4 (set (reg:SI 3 r3 [154])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":815:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 GPIO_InitStruct.Mode+0 S4 A32])
        (reg:SI 3 r3 [154])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":815:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 4 (set (reg:SI 3 r3 [155])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":816:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [1 GPIO_InitStruct.Speed+0 S4 A32])
        (reg:SI 3 r3 [155])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":816:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 4 (set (reg:SI 3 r3 [156])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":817:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [1 GPIO_InitStruct.Pull+0 S4 A32])
        (reg:SI 3 r3 [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":817:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 4 (set (reg:SI 3 r3 [157])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":818:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [1 GPIO_InitStruct.Alternate+0 S4 A32])
        (reg:SI 3 r3 [157])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":818:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 4 (set (reg:SI 3 r3 [158])
        (plus:SI (reg/f:SI 7 r7)
            (const_int 28 [0x1c]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":819:5 7 {*arm_addsi3}
     (nil))
(insn 74 73 75 4 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [158])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":819:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 4 (set (reg:SI 0 r0)
        (const_int 1073874944 [0x40020800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":819:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 76 75 77 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("HAL_GPIO_Init") [flags 0x41]  <function_decl 000000000669c900 HAL_GPIO_Init>) [0 HAL_GPIO_Init S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":819:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (nil)))))
(insn 77 76 78 4 (set (reg/f:SI 3 r3 [orig:133 _21 ] [133])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 4 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:133 _21 ] [133])
                (const_int 8 [0x8])) [1 _21->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 4 (set (reg:SI 2 r2 [orig:135 _23 ] [135])
        (and:SI (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 134217727 [0x7ffffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 90 {*arm_andsi3_insn}
     (nil))
(insn 80 79 81 4 (set (reg:SI 3 r3 [159])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 RCC_MCODiv+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 81 80 82 4 (set (reg:SI 1 r1 [orig:136 _24 ] [136])
        (ashift:SI (reg:SI 3 r3 [159])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 147 {*arm_shiftsi3}
     (nil))
(insn 82 81 83 4 (set (reg:SI 3 r3 [160])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 RCC_MCOSource+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 4 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (ior:SI (reg:SI 3 r3 [160])
            (reg:SI 1 r1 [orig:136 _24 ] [136]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 106 {*iorsi3_insn}
     (nil))
(insn 84 83 85 4 (set (reg/f:SI 1 r1 [orig:138 _26 ] [138])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 4 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (ior:SI (reg:SI 3 r3 [orig:137 _25 ] [137])
            (reg:SI 2 r2 [orig:135 _23 ] [135]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 106 {*iorsi3_insn}
     (nil))
(insn 86 85 95 4 (set (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:138 _26 ] [138])
                (const_int 8 [0x8])) [1 _26->CFGR+0 S4 A32])
        (reg:SI 3 r3 [orig:139 _27 ] [139])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":822:5 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       6 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:830:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:830:1
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:830:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 95 86 93 6 88 (nil) [1 uses])
(note 93 95 94 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 89 6 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":830:1 313 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 89 94 90 5 85 (nil) [0 uses])
(note 90 89 108 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 108 90 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_EnableCSS (HAL_RCC_EnableCSS, funcdef_no=138, decl_uid=6998, cgraph_uid=143, symbol_order=142)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 7
   Insn 6: point = 1, n_alt = 1
   Insn 5: point = 2, n_alt = 5
 r113: [0..2]
 r114: [0..1]
Compressing live ranges: from 3 to 2 - 66%
Ranges after the compression:
 r113: [0..1]
 r114: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_EnableCSS

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={2d,1u} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1111949388 [0x4247004c])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":843:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 r2 [114])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":843:38 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 10 2 (set (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S4 A32])
        (reg:SI 2 r2 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":843:38 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:844:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:844:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":844:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 13 11 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_DisableCSS (HAL_RCC_DisableCSS, funcdef_no=139, decl_uid=7000, cgraph_uid=144, symbol_order=143)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 7
   Insn 6: point = 1, n_alt = 1
   Insn 5: point = 2, n_alt = 5
 r113: [0..2]
 r114: [0..1]
Compressing live ranges: from 3 to 2 - 66%
Ranges after the compression:
 r113: [0..1]
 r114: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_DisableCSS

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={2d,1u} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 35{26d,9u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1111949388 [0x4247004c])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":852:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 r2 [114])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":852:38 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 10 2 (set (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 *_1+0 S4 A32])
        (reg:SI 2 r2 [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":852:38 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:853:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:853:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":853:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 13 11 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_GetSysClockFreq (HAL_RCC_GetSysClockFreq, funcdef_no=140, decl_uid=7002, cgraph_uid=145, symbol_order=144)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=48, prev_offset=0)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 49:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 60:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 190:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
      Creating newreg=196, assigning class GENERAL_REGS to r196
  190: r125:DI#0=zero_extract(r196:SI,0x9,0)
      REG_DEAD r124:DI
    Inserting insn reload before:
  199: r196:SI=r124:DI#0

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 199:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r196 for output r196:SI, change to class LO_REGS for r196
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) r  (2) r {*mul}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 67
	 Choosing alt 0 in insn 67:  (0) =l  (1) %0  (2) l {*mul}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 68
	 Choosing alt 0 in insn 68:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            1 Non input pseudo reload: reject++
          alt=0,overall=14,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Non input pseudo reload: reject++
          alt=0,overall=14,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 70:  (0) =r  (1) =r  (2) %r  (3) r {umull}
      Creating newreg=197, assigning class GENERAL_REGS to r197
      Creating newreg=198, assigning class GENERAL_REGS to r198
   70: {r197:SI=r125:DI#0*r157:SI;r198:SI=trunc(zero_extend(r125:DI#0)*zero_extend(r157:SI) 0>>0x20);}
      REG_DEAD r157:SI
      REG_DEAD r125:DI
    Inserting insn reload after:
  201: r126:DI#4=r198:SI
  200: r126:DI#0=r197:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 201:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=199 from oldreg=198, assigning class LO_REGS to r199
  201: r126:DI#4=r199:SI
    Inserting insn reload before:
  202: r199:SI=r198:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 200:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=200 from oldreg=197, assigning class LO_REGS to r200
  200: r126:DI#0=r200:SI
    Inserting insn reload before:
  203: r200:SI=r197:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15: Bad operand -- refuse
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=6,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
            alt=10: Bad operand -- refuse
            alt=11: Bad operand -- refuse
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=15,overall=12,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
      Creating newreg=201, assigning class CORE_REGS to r201
   71: r158:SI=r156:SI+r201:SI
      REG_DEAD r156:SI
    Inserting insn reload before:
  204: r201:SI=r126:DI#4

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 204:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r201 for output r201:SI, change to class LO_REGS for r201
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 76:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=606,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) r  (1) mi {*movdi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=606,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) r  (1) mi {*movdi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 84:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 93:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 94:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 188:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
      Creating newreg=202, assigning class GENERAL_REGS to r202
  188: r133:DI#0=zero_extract(r202:SI,0x9,0)
      REG_DEAD r132:DI
    Inserting insn reload before:
  205: r202:SI=r132:DI#0

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 205:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r202 for output r202:SI, change to class LO_REGS for r202
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) rDa {*movdi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) r  (2) r {subsi3_compare1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) r  (2) r {subsi3_carryin}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) rDa {*movdi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 108:  (0) r  (1) r  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 110:  (0) r  (1) r  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) r  (2) r {subsi3_compare1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) r  (2) r {subsi3_carryin}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) rDa {*movdi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=1,overall=15,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=2,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            alt=3,overall=15,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
	 Choosing alt 4 in insn 122:  (0) rk  (1) rk  (2) rkI {addsi3_compare_op1}
      Creating newreg=203, assigning class CORE_REGS to r203
  122: {cc:CC_C=cmp(r174:DI#0+r133:DI#0,r174:DI#0);r203:SI=r174:DI#0+r133:DI#0;}
    Inserting insn reload after:
  206: r178:DI#0=r203:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 206:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=204 from oldreg=203, assigning class LO_REGS to r204
  206: r178:DI#0=r204:SI
    Inserting insn reload before:
  207: r204:SI=r203:SI

            0 Non input pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=0,overall=13,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
	 Choosing alt 1 in insn 123:  (0) r  (1) r  (2) rI {addsi3_carryin}
      Creating newreg=205, assigning class GENERAL_REGS to r205
  123: r205:SI=r174:DI#4+r133:DI#4+ltu(cc:CC_C,0)
      REG_DEAD r174:DI
      REG_DEAD r133:DI
      REG_DEAD cc:CC_C
    Inserting insn reload after:
  208: r178:DI#4=r205:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=617,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
          alt=7,overall=4,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Super set class reg: reject-=3
            1 Costly loser: reject++
            alt=8,overall=5,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=10,overall=7,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=13,overall=8,losers=1 -- refuse
	 Choosing alt 7 in insn 208:  (0) m  (1) l {*thumb2_movsi_vfp}
      Creating newreg=206 from oldreg=205, assigning class LO_REGS to r206
  208: r178:DI#4=r206:SI
    Inserting insn reload before:
  209: r206:SI=r205:SI

            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) rDa {*movdi_vfp}
            1 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=15,losers=2 -- refuse
	 Choosing alt 1 in insn 125:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=207, assigning class LO_REGS to r207
  125: r179:DI#4=r207:SI<<0xa
    Inserting insn reload before:
  210: r207:SI=r178:DI#4

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 210:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 126:  (0) r  (1) r  (3) r  (4) M {*orr_shiftsi}
      Creating newreg=208, assigning class GENERAL_REGS to r208
  126: r179:DI#4=r208:SI 0>>0x16|r179:DI#4
    Inserting insn reload before:
  211: r208:SI=r178:DI#0

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Super set class reg: reject-=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=5,losers=1,rld_nregs=1
            0 Super set class reg: reject-=3
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            alt=6,overall=6,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=11,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=12,overall=8,losers=1 -- refuse
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
	 Choosing alt 5 in insn 211:  (0) l  (1) mi {*thumb2_movsi_vfp}
	 Reuse r208 for output r208:SI, change to class LO_REGS for r208
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=3,overall=15,losers=2 -- refuse
	 Choosing alt 1 in insn 127:  (0) l  (1) l  (2) M {*arm_shiftsi3}
      Creating newreg=209, assigning class LO_REGS to r209
  127: r179:DI#0=r209:SI<<0xa
      REG_DEAD r178:DI
    Inserting insn reload before:
  212: r209:SI=r178:DI#0

            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 212:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=607,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 128:  (0) m  (1) r {*movdi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=606,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) r  (1) mi {*movdi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=619,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=620,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 133:  (0) m  (1) l {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=606,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) r  (1) mi {*movdi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 140:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 143:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 144:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 147:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 149:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) r  (2) r {udivsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 153:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 158:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 159:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 162:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7
EBB 8
EBB 9 10
EBB 11
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=210 from oldreg=178, assigning class GENERAL_REGS to inheritance r210
    Original reg change 178->210 (bb11):
  128: r210:DI=r179:DI
      REG_DEAD r179:DI
    Add original<-inheritance after:
  213: r178:DI=r210:DI

    Inheritance reuse change 178->210 (bb11):
  129: r134:DI=r210:DI
      REG_DEAD r210:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=211 from oldreg=178, assigning class GENERAL_REGS to inheritance r211
    Original reg change 178->211 (bb11):
  211: r208:SI=r211:DI#0
    Add inheritance<-original before:
  214: r211:DI=r178:DI

    Inheritance reuse change 178->211 (bb11):
  212: r209:SI=r211:DI#0
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=212 from oldreg=178, assigning class GENERAL_REGS to inheritance r212
    Original reg change 178->212 (bb11):
  210: r207:SI=r212:DI#4
    Add inheritance<-original before:
  215: r212:DI=r178:DI

    Inheritance reuse change 178->212 (bb11):
  214: r211:DI=r212:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   213: r178:DI=r210:DI
deleting insn with uid = 213.
EBB 12
EBB 13 15
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 170: point = 0, n_alt = -1
   Insn 169: point = 0, n_alt = -2
   Insn 165: point = 1, n_alt = -2
   Insn 162: point = 3, n_alt = 5
  BB 12
   Insn 181: point = 4, n_alt = -1
   Insn 153: point = 4, n_alt = 7
   Insn 152: point = 5, n_alt = 0
   Insn 151: point = 7, n_alt = 5
   Insn 150: point = 8, n_alt = 5
   Insn 149: point = 9, n_alt = 7
   Insn 148: point = 10, n_alt = 1
   Insn 147: point = 12, n_alt = 2
   Insn 146: point = 14, n_alt = 0
   Insn 145: point = 16, n_alt = 1
   Insn 144: point = 18, n_alt = 5
   Insn 143: point = 20, n_alt = 5
  BB 10
   Insn 179: point = 21, n_alt = -1
   Insn 84: point = 21, n_alt = 7
   Insn 83: point = 22, n_alt = 0
   Insn 82: point = 24, n_alt = -2
   Insn 81: point = 26, n_alt = -2
   Insn 80: point = 27, n_alt = -1
   Insn 79: point = 27, n_alt = 5
   Insn 78: point = 28, n_alt = 5
   Insn 77: point = 29, n_alt = 7
   Insn 76: point = 30, n_alt = 7
   Insn 75: point = 31, n_alt = 1
   Insn 74: point = 32, n_alt = 5
   Insn 72: point = 33, n_alt = 7
   Insn 71: point = 34, n_alt = 0
   Insn 204: point = 36, n_alt = 5
   Insn 200: point = 37, n_alt = 7
   Insn 203: point = 38, n_alt = -2
	   Creating copy r197->r200@1000
   Insn 201: point = 40, n_alt = 7
   Insn 202: point = 41, n_alt = -2
	   Creating copy r198->r199@1000
   Insn 70: point = 43, n_alt = 0
   Insn 69: point = 45, n_alt = 5
   Insn 68: point = 46, n_alt = 0
   Insn 67: point = 48, n_alt = 0
   Insn 66: point = 50, n_alt = 1
   Insn 65: point = 51, n_alt = 1
   Insn 64: point = 53, n_alt = 5
   Insn 63: point = 54, n_alt = 1
   Insn 190: point = 54, n_alt = 0
   Insn 199: point = 55, n_alt = 5
   Insn 61: point = 57, n_alt = 7
   Insn 60: point = 58, n_alt = 7
   Insn 59: point = 59, n_alt = 1
   Insn 58: point = 60, n_alt = 1
   Insn 57: point = 62, n_alt = 5
   Insn 56: point = 64, n_alt = 5
  BB 11
   Insn 140: point = 66, n_alt = 7
   Insn 139: point = 67, n_alt = 0
   Insn 138: point = 69, n_alt = -2
   Insn 137: point = 71, n_alt = -2
   Insn 136: point = 72, n_alt = -1
   Insn 135: point = 72, n_alt = -2
   Insn 134: point = 73, n_alt = 5
   Insn 133: point = 74, n_alt = 7
   Insn 132: point = 75, n_alt = 7
   Insn 131: point = 76, n_alt = 1
   Insn 130: point = 77, n_alt = 5
   Insn 129: point = 78, n_alt = 5
	Hard reg 0 is preferable by r210 with profit 1000
   Insn 128: point = 80, n_alt = 6
	Hard reg 0 is preferable by r210 with profit 1000
	Hard reg 2 is preferable by r210 with profit 1000
   Insn 127: point = 82, n_alt = 1
   Insn 212: point = 83, n_alt = 5
   Insn 126: point = 85, n_alt = 1
   Insn 211: point = 86, n_alt = 5
   Insn 214: point = 87, n_alt = -1
	   Creating copy r211<-r212@1000
   Insn 125: point = 89, n_alt = 1
   Insn 210: point = 90, n_alt = 5
   Insn 215: point = 91, n_alt = -1
   Insn 124: point = 93, n_alt = 1
   Insn 208: point = 94, n_alt = 7
   Insn 209: point = 95, n_alt = -2
	   Creating copy r205->r206@1000
   Insn 123: point = 97, n_alt = 1
   Insn 206: point = 99, n_alt = 7
   Insn 207: point = 100, n_alt = -2
	   Creating copy r203->r204@1000
   Insn 122: point = 102, n_alt = 4
   Insn 119: point = 103, n_alt = -2
   Insn 118: point = 105, n_alt = 1
   Insn 117: point = 106, n_alt = 1
   Insn 116: point = 106, n_alt = 1
   Insn 115: point = 106, n_alt = 1
   Insn 114: point = 107, n_alt = 0
   Insn 113: point = 108, n_alt = 0
   Insn 110: point = 108, n_alt = 2
   Insn 109: point = 108, n_alt = 1
   Insn 108: point = 108, n_alt = 2
   Insn 107: point = 108, n_alt = 1
   Insn 106: point = 109, n_alt = 0
   Insn 105: point = 110, n_alt = 0
   Insn 102: point = 110, n_alt = -2
   Insn 101: point = 112, n_alt = 1
   Insn 100: point = 113, n_alt = 1
   Insn 99: point = 113, n_alt = 1
   Insn 98: point = 113, n_alt = 1
   Insn 97: point = 114, n_alt = -2
   Insn 96: point = 115, n_alt = 1
   Insn 188: point = 115, n_alt = 0
   Insn 205: point = 116, n_alt = 5
   Insn 94: point = 118, n_alt = 7
   Insn 93: point = 119, n_alt = 7
   Insn 92: point = 120, n_alt = 1
   Insn 91: point = 121, n_alt = 1
   Insn 90: point = 123, n_alt = 5
   Insn 89: point = 125, n_alt = 5
  BB 9
   Insn 54: point = 127, n_alt = -1
   Insn 53: point = 127, n_alt = 0
   Insn 52: point = 128, n_alt = 0
   Insn 51: point = 130, n_alt = 5
   Insn 50: point = 132, n_alt = 5
   Insn 49: point = 133, n_alt = 7
   Insn 48: point = 134, n_alt = 0
   Insn 47: point = 136, n_alt = 5
   Insn 46: point = 138, n_alt = 5
  BB 8
   Insn 177: point = 140, n_alt = -1
   Insn 41: point = 140, n_alt = 7
   Insn 40: point = 141, n_alt = 5
  BB 7
   Insn 175: point = 142, n_alt = -1
   Insn 35: point = 142, n_alt = 7
   Insn 34: point = 143, n_alt = 5
  BB 15
   Insn 184: point = 144, n_alt = -1
  BB 13
   Insn 159: point = 144, n_alt = 7
   Insn 158: point = 145, n_alt = 5
  BB 6
   Insn 173: point = 146, n_alt = -1
  BB 5
   Insn 28: point = 146, n_alt = -1
   Insn 27: point = 146, n_alt = 0
  BB 4
   Insn 25: point = 148, n_alt = -1
   Insn 24: point = 148, n_alt = 0
  BB 3
   Insn 22: point = 149, n_alt = -1
   Insn 21: point = 149, n_alt = 0
  BB 2
   Insn 17: point = 150, n_alt = -1
   Insn 16: point = 150, n_alt = 0
   Insn 15: point = 150, n_alt = 0
   Insn 14: point = 152, n_alt = 5
   Insn 13: point = 154, n_alt = 5
   Insn 12: point = 155, n_alt = 7
   Insn 11: point = 156, n_alt = 1
   Insn 10: point = 157, n_alt = 7
   Insn 9: point = 158, n_alt = 1
   Insn 8: point = 159, n_alt = 7
   Insn 7: point = 160, n_alt = 1
   Insn 6: point = 161, n_alt = 7
   Insn 5: point = 162, n_alt = 1
 r113: [153..154]
 r114: [151..152]
 r115: [146..150]
 r116: [137..138]
 r117: [135..136]
 r118: [131..132]
 r119: [129..130]
 r120: [127..128]
 r121: [63..64]
 r122: [61..62]
 r123: [58..60]
 r124: [150..163] [127..139] [56..65]
 r125: [150..163] [127..139] [44..65]
 r126: [150..163] [127..139] [27..65]
 r127: [150..163] [127..139] [28..65]
 r128: [23..24]
 r129: [124..125]
 r130: [122..123]
 r131: [119..121]
 r132: [150..163] [117..139]
 r133: [150..163] [98..139]
 r134: [72..78]
 r135: [150..163] [73..139]
 r136: [68..69]
 r137: [19..20]
 r138: [17..18]
 r139: [15..16]
 r140: [13..14]
 r141: [11..12]
 r142: [2..3]
 r143: [0..1]
 r144: [161..162]
 r145: [159..160]
 r146: [157..158]
 r147: [155..156]
 r148: [142..143]
 r149: [140..141]
 r150: [133..134]
 r151: [57..59]
 r152: [47..51]
 r153: [52..53]
 r154: [47..48]
 r155: [49..50]
 r156: [35..46]
 r157: [44..45]
 r158: [33..34]
 r159: [30..32]
 r160: [29..31]
 r163: [25..26]
 r164: [21..22]
 r165: [118..120]
 r166: [112..114] [109..110]
 r167: [111..113]
 r170: [150..163] [107..139]
 r171: [107..108]
 r174: [150..163] [105..139] [98..103]
 r175: [104..106]
 r178: [150..163] [92..139]
 r179: [81..93]
 r182: [75..77]
 r183: [74..76]
 r186: [70..71]
 r187: [66..67]
 r188: [9..10]
 r190: [4..5]
 r191: [6..8]
 r192: [6..7]
 r193: [144..145]
 r196: [54..55]
 r197: [39..43]
 r198: [42..43]
 r199: [40..41]
 r200: [37..38]
 r201: [35..36]
 r202: [115..116]
 r203: [101..102]
 r204: [99..100]
 r205: [96..97]
 r206: [94..95]
 r207: [89..90]
 r208: [85..86]
 r209: [82..83]
 r210: [79..80]
 r211: [84..87]
 r212: [88..91]
Compressing live ranges: from 164 to 128 - 78%
Ranges after the compression:
 r113: [118..119]
 r114: [116..117]
 r115: [114..115]
 r116: [106..107]
 r117: [104..105]
 r118: [100..101]
 r119: [98..99]
 r120: [96..97]
 r121: [52..53]
 r122: [50..51]
 r123: [48..49]
 r124: [115..127] [96..107] [48..53]
 r125: [115..127] [96..107] [38..53]
 r126: [115..127] [96..107] [26..53]
 r127: [115..127] [96..107] [26..53]
 r128: [22..23]
 r129: [94..95]
 r130: [92..93]
 r131: [90..91]
 r132: [115..127] [90..107]
 r133: [115..127] [76..107]
 r134: [60..61]
 r135: [115..127] [60..107]
 r136: [56..57]
 r137: [18..19]
 r138: [16..17]
 r139: [14..15]
 r140: [12..13]
 r141: [10..11]
 r142: [2..3]
 r143: [0..1]
 r144: [126..127]
 r145: [124..125]
 r146: [122..123]
 r147: [120..121]
 r148: [110..111]
 r149: [108..109]
 r150: [102..103]
 r151: [48..49]
 r152: [40..43]
 r153: [44..45]
 r154: [40..41]
 r155: [42..43]
 r156: [30..39]
 r157: [38..39]
 r158: [28..29]
 r159: [26..27]
 r160: [26..27]
 r163: [24..25]
 r164: [20..21]
 r165: [90..91]
 r166: [84..87]
 r167: [86..87]
 r170: [115..127] [82..107]
 r171: [82..83]
 r174: [115..127] [76..107]
 r175: [80..81]
 r178: [115..127] [70..107]
 r179: [64..71]
 r182: [60..61]
 r183: [60..61]
 r186: [58..59]
 r187: [54..55]
 r188: [8..9]
 r190: [4..5]
 r191: [6..7]
 r192: [6..7]
 r193: [112..113]
 r196: [46..47]
 r197: [34..37]
 r198: [36..37]
 r199: [34..35]
 r200: [32..33]
 r201: [30..31]
 r202: [88..89]
 r203: [78..79]
 r204: [76..77]
 r205: [74..75]
 r206: [72..73]
 r207: [68..69]
 r208: [66..67]
 r209: [64..65]
 r210: [62..63]
 r211: [66..67]
 r212: [68..69]

********** Assignment #1: **********

	 Assigning to 196 (cl=LO_REGS, orig=196, freq=2000, tfirst=196, tfreq=2000)...
	   Assign 3 to reload r196 (freq=2000)
	 Assigning to 199 (cl=LO_REGS, orig=198, freq=2000, tfirst=199, tfreq=2000)...
	   Assign 2 to reload r199 (freq=2000)
	Hard reg 2 is preferable by r198 with profit 1000
	 Assigning to 200 (cl=LO_REGS, orig=197, freq=2000, tfirst=200, tfreq=2000)...
	   Assign 2 to reload r200 (freq=2000)
	Hard reg 2 is preferable by r197 with profit 1000
	 Assigning to 201 (cl=LO_REGS, orig=201, freq=2000, tfirst=201, tfreq=2000)...
	   Assign 2 to reload r201 (freq=2000)
	 Assigning to 202 (cl=LO_REGS, orig=202, freq=2000, tfirst=202, tfreq=2000)...
	   Assign 3 to reload r202 (freq=2000)
	 Assigning to 204 (cl=LO_REGS, orig=203, freq=2000, tfirst=204, tfreq=2000)...
	   Assign 3 to reload r204 (freq=2000)
	Hard reg 3 is preferable by r203 with profit 1000
	 Assigning to 206 (cl=LO_REGS, orig=205, freq=2000, tfirst=206, tfreq=2000)...
	   Assign 3 to reload r206 (freq=2000)
	Hard reg 3 is preferable by r205 with profit 1000
	 Assigning to 207 (cl=LO_REGS, orig=207, freq=2000, tfirst=207, tfreq=2000)...
	   Assign 1 to reload r207 (freq=2000)
	 Assigning to 208 (cl=LO_REGS, orig=208, freq=2000, tfirst=208, tfreq=2000)...
	   Assign 1 to reload r208 (freq=2000)
	 Assigning to 209 (cl=LO_REGS, orig=209, freq=2000, tfirst=209, tfreq=2000)...
	   Assign 1 to reload r209 (freq=2000)
	 Assigning to 211 (cl=GENERAL_REGS, orig=178, freq=3000, tfirst=211, tfreq=4000)...
	   Assign 4 to inheritance r211 (freq=3000)
	Hard reg 4 is preferable by r212 with profit 1000
	 Assigning to 212 (cl=GENERAL_REGS, orig=178, freq=3000, tfirst=211, tfreq=4000)...
	   Assign 4 to inheritance r212 (freq=3000)
	 Assigning to 210 (cl=GENERAL_REGS, orig=178, freq=2000, tfirst=210, tfreq=2000)...
	   Assign 2 to inheritance r210 (freq=2000)
	 Assigning to 197 (cl=GENERAL_REGS, orig=197, freq=2000, tfirst=197, tfreq=2000)...
	   Assign 1 to reload r197 (freq=2000)
	 Assigning to 198 (cl=GENERAL_REGS, orig=198, freq=2000, tfirst=198, tfreq=2000)...
	   Assign 2 to reload r198 (freq=2000)
	 Assigning to 203 (cl=CORE_REGS, orig=203, freq=2000, tfirst=203, tfreq=2000)...
	   Assign 3 to reload r203 (freq=2000)
	 Assigning to 205 (cl=GENERAL_REGS, orig=205, freq=2000, tfirst=205, tfreq=2000)...
	   Assign 3 to reload r205 (freq=2000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 3 out of 3 (100.00%)

********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =rk  (1) rk {*thumb2_movsi_vfp}
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=606,losers=1,rld_nregs=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=606,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 215:  (0) r  (1) mi {*movdi_vfp}
	   Spilling non-eliminable hard regs: 7
  Slot 0 regnos (width = 0):	 126
  Slot 1 regnos (width = 0):	 124
  Slot 2 regnos (width = 0):	 127
  Slot 3 regnos (width = 0):	 132
  Slot 4 regnos (width = 0):	 135
  Slot 5 regnos (width = 0):	 178
Memory subreg was simplified in insn #60
Changing spilled pseudos to memory in insn #60
Memory subreg was simplified in insn #61
Changing spilled pseudos to memory in insn #61
Memory subreg was simplified in insn #199
Changing spilled pseudos to memory in insn #199
Memory subreg was simplified in insn #201
Changing spilled pseudos to memory in insn #201
Memory subreg was simplified in insn #200
Changing spilled pseudos to memory in insn #200
Memory subreg was simplified in insn #204
Changing spilled pseudos to memory in insn #204
Memory subreg was simplified in insn #72
Changing spilled pseudos to memory in insn #72
Memory subreg was simplified in insn #76
Changing spilled pseudos to memory in insn #76
Memory subreg was simplified in insn #77
Changing spilled pseudos to memory in insn #77
Changing spilled pseudos to memory in insn #78
Changing spilled pseudos to memory in insn #79
Memory subreg was simplified in insn #93
Changing spilled pseudos to memory in insn #93
Memory subreg was simplified in insn #94
Changing spilled pseudos to memory in insn #94
Memory subreg was simplified in insn #205
Changing spilled pseudos to memory in insn #205
Memory subreg was simplified in insn #206
Changing spilled pseudos to memory in insn #206
Memory subreg was simplified in insn #208
Changing spilled pseudos to memory in insn #208
Changing spilled pseudos to memory in insn #215
Memory subreg was simplified in insn #132
Changing spilled pseudos to memory in insn #132
Memory subreg was simplified in insn #133
Changing spilled pseudos to memory in insn #133
Changing spilled pseudos to memory in insn #134
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=96, prev_offset=0)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=96, prev_offset=48)
Can't eliminate 102 to 13 (offset=64, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=64, prev_offset=16)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 7
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 162:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 159:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 153:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 149:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 140:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 84:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 49:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) r  (1) mi {*movdi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 133:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 215:  (0) r  (1) mi {*movdi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 208:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 206:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 205:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 94:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 93:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) r  (1) mi {*movdi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=2
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) r  (1) mi {*movdi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 76:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 204:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 200:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 201:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 199:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 60:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=96, prev_offset=0)
Can't eliminate 103 to 102 (offset=32, prev_offset=0)
Can't eliminate 103 to 11 (offset=32, prev_offset=0)
Can eliminate 103 to 7 (offset=96, prev_offset=96)
Can't eliminate 102 to 13 (offset=64, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=64, prev_offset=64)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 27
changing reg in insn 24
changing reg in insn 21
changing reg in insn 16
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 60
changing reg in insn 63
changing reg in insn 190
changing reg in insn 82
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 93
changing reg in insn 97
changing reg in insn 96
changing reg in insn 188
changing reg in insn 119
changing reg in insn 102
changing reg in insn 129
changing reg in insn 135
changing reg in insn 138
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 146
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 148
changing reg in insn 162
changing reg in insn 165
changing reg in insn 165
changing reg in insn 169
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 48
changing reg in insn 49
changing reg in insn 59
changing reg in insn 61
changing reg in insn 65
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 68
changing reg in insn 71
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 77
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 92
changing reg in insn 94
changing reg in insn 102
changing reg in insn 97
changing reg in insn 98
changing reg in insn 102
changing reg in insn 101
changing reg in insn 100
changing reg in insn 99
changing reg in insn 106
changing reg in insn 105
changing reg in insn 107
changing reg in insn 110
changing reg in insn 109
changing reg in insn 108
changing reg in insn 119
changing reg in insn 114
changing reg in insn 113
changing reg in insn 115
changing reg in insn 119
changing reg in insn 118
changing reg in insn 117
changing reg in insn 116
changing reg in insn 124
changing reg in insn 128
changing reg in insn 127
changing reg in insn 126
changing reg in insn 125
changing reg in insn 130
changing reg in insn 132
changing reg in insn 131
changing reg in insn 133
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 148
changing reg in insn 149
changing reg in insn 152
changing reg in insn 153
changing reg in insn 150
changing reg in insn 152
changing reg in insn 151
changing reg in insn 152
changing reg in insn 158
changing reg in insn 159
deleting insn with uid = 202.
deleting insn with uid = 82.
deleting insn with uid = 207.
deleting insn with uid = 209.
deleting insn with uid = 214.
deleting insn with uid = 128.
deleting insn with uid = 135.
deleting insn with uid = 138.
deleting insn with uid = 165.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 136.


HAL_RCC_GetSysClockFreq

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [r10] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={9d,10u} r1={15d,11u} r2={25d,23u} r3={62d,57u} r4={3d,7u} r5={3d,3u} r7={1d,52u} r8={1d,4u} r9={1d,2u} r10={1d,5u,2e} r11={1d,3u,2e} r12={4d} r13={1d,17u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={10d,8u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 510{303d,203u,4e} in 136{134 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 133 170 174
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 144 145 146 147
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 r3 [144])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":887:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 52 [0x34])) [1 pllm+0 S4 A32])
        (reg:SI 3 r3 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":887:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [145])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":888:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 60 [0x3c])) [1 pllvco+0 S4 A32])
        (reg:SI 3 r3 [145])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":888:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [146])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":889:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 48 [0x30])) [1 pllp+0 S4 A64])
        (reg:SI 3 r3 [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":889:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [147])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":890:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 56 [0x38])) [1 sysclockfreq+0 S4 A64])
        (reg:SI 3 r3 [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":890:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 8 [0x8])) [1 _1->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 12 [0xc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:21 90 {*arm_andsi3_insn}
     (nil))
(insn 16 15 17 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 273 {arm_cond_branch}
     (nil)
 -> 44)
;;  succ:       3 (FALLTHRU)
;;              9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115 125 133 170 174

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115
;; lr  def 	 100 [cc]
(note 18 17 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 18 22 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 273 {arm_cond_branch}
     (nil)
 -> 156)
;;  succ:       4 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115
;; lr  def 	 100 [cc]
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 273 {arm_cond_branch}
     (nil)
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 115
;; lr  def 	 100 [cc]
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 28 27 172 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 172 28 173 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 173 172 174 6 (set (pc)
        (label_ref 156)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":893:3 284 {*arm_jump}
     (nil)
 -> 156)
;;  succ:       13 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:893:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 174 173 32)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 148
(code_label 32 174 33 7 100 (nil) [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:SI 3 r3 [148])
        (const_int 16000000 [0xf42400])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":897:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 175 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 56 [0x38])) [1 sysclockfreq+0 S4 A64])
        (reg:SI 3 r3 [148])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":897:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 175 35 176 7 (set (pc)
        (label_ref 160)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":898:7 284 {*arm_jump}
     (nil)
 -> 160)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:898:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 176 175 38)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 149
(code_label 38 176 39 8 101 (nil) [1 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:SI 3 r3 [149])
        (const_int 25000000 [0x17d7840])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":902:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 177 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 56 [0x38])) [1 sysclockfreq+0 S4 A64])
        (reg:SI 3 r3 [149])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":902:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 177 41 178 8 (set (pc)
        (label_ref 160)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":903:7 284 {*arm_jump}
     (nil)
 -> 160)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:903:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 178 177 44)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 133 170 174
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 116 117 118 119 120 150
(code_label 44 178 45 9 98 (nil) [1 uses])
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":909:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 9 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116])
                (const_int 4 [0x4])) [1 _4->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":909:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 9 (set (reg:SI 3 r3 [150])
        (and:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 63 [0x3f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":909:12 90 {*arm_andsi3_insn}
     (nil))
(insn 49 48 50 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 52 [0x34])) [1 pllm+0 S4 A32])
        (reg:SI 3 r3 [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":909:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":910:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 9 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118])
                (const_int 4 [0x4])) [1 _6->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":910:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 9 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 4194304 [0x400000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":910:11 90 {*arm_andsi3_insn}
     (nil))
(insn 53 52 54 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":910:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":910:10 273 {arm_cond_branch}
     (nil)
 -> 87)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125 133 170 174

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 124 125 126 127
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 121 122 123 124 125 126 127 128 151 152 153 154 155 156 157 158 159 160 163 164
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 10 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 4 [0x4])) [1 _9->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 10 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (lshiftrt:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:100 147 {*arm_shiftsi3}
     (nil))
(insn 59 58 60 10 (set (reg:SI 2 r2 [151])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [12 %sfp+-32 S4 A64])
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 199 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [12 %sfp+-28 S4 A32])
        (reg:SI 2 r2 [151])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 199 61 190 10 (set (reg:SI 3 r3 [196])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [12 %sfp+-32 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 190 199 63 10 (set (reg:SI 0 r0 [orig:125 _13 ] [125])
        (zero_extract:SI (reg:SI 3 r3 [196])
            (const_int 9 [0x9])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:55 161 {extzv_t2}
     (nil))
(insn 63 190 64 10 (set (reg:SI 1 r1 [ _13+4 ])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 10 (set (reg:SI 3 r3 [153])
        (const_int 25000000 [0x17d7840])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 10 (set (reg:SI 2 r2 [152])
        (mult:SI (reg:SI 3 r3 [153])
            (reg:SI 1 r1 [ _13+4 ]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 56 {*mul}
     (nil))
(insn 66 65 67 10 (set (reg:SI 3 r3 [155])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 10 (set (reg:SI 3 r3 [154])
        (mult:SI (reg:SI 0 r0 [orig:125 _13 ] [125])
            (reg:SI 3 r3 [155]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 56 {*mul}
     (nil))
(insn 68 67 69 10 (set (reg:SI 3 r3 [156])
        (plus:SI (reg:SI 3 r3 [154])
            (reg:SI 2 r2 [152]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 7 {*arm_addsi3}
     (nil))
(insn 69 68 70 10 (set (reg:SI 2 r2 [157])
        (const_int 25000000 [0x17d7840])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 201 10 (parallel [
            (set (reg:SI 1 r1 [197])
                (mult:SI (reg:SI 0 r0 [orig:125 _13 ] [125])
                    (reg:SI 2 r2 [157])))
            (set (reg:SI 2 r2 [198])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:125 _13 ] [125]))
                            (zero_extend:DI (reg:SI 2 r2 [157])))
                        (const_int 32 [0x20]))))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 68 {umull}
     (nil))
(insn 201 70 203 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [12 %sfp+-20 S4 A32])
        (reg:SI 2 r2 [198])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 203 201 200 10 (set (reg:SI 2 r2 [197])
        (reg:SI 1 r1 [197])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 200 203 204 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [12 %sfp+-24 S4 A64])
        (reg:SI 2 r2 [197])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 204 200 71 10 (set (reg:SI 2 r2 [201])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [12 %sfp+-20 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 204 72 10 (set (reg:SI 3 r3 [158])
        (plus:SI (reg:SI 3 r3 [156])
            (reg:SI 2 r2 [201]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 7 {*arm_addsi3}
     (nil))
(insn 72 71 74 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 44 [0x2c])) [12 %sfp+-20 S4 A32])
        (reg:SI 3 r3 [158])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 74 72 75 10 (set (reg:SI 3 r3 [159])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 52 [0x34])) [1 pllm+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 10 (set (reg:SI 2 r2 [160])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [12 %sfp+-40 S4 A64])
        (reg:SI 3 r3 [159])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 28 [0x1c])) [12 %sfp+-36 S4 A32])
        (reg:SI 2 r2 [160])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 10 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [12 %sfp+-40 S8 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:128 750 {*movdi_vfp}
     (nil))
(insn 79 78 80 10 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 7 r7)
                (const_int 40 [0x28])) [12 %sfp+-24 S8 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:128 750 {*movdi_vfp}
     (nil))
(call_insn/u 80 79 81 10 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uldivmod") [flags 0x41]  <function_decl 0000000005f70400 __aeabi_uldivmod>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:128 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DI 2 r2))
            (expr_list (use (reg:DI 0 r0))
                (nil)))))
(insn 81 80 83 10 (set (reg:DI 2 r2 [163])
        (reg:DI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:128 750 {*movdi_vfp}
     (nil))
(insn 83 81 84 10 (set (reg:SI 3 r3 [164])
        (reg:SI 2 r2 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 179 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 60 [0x3c])) [1 pllvco+0 S4 A32])
        (reg:SI 3 r3 [164])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":913:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 179 84 180 10 (set (pc)
        (label_ref 141)) 284 {*arm_jump}
     (nil)
 -> 141)
;;  succ:       12 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 180 179 87)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 133 170 174
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 132 133 135 170 174 178
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 129 130 131 132 133 134 135 136 165 166 167 170 171 174 175 178 179 182 183 186 187
(code_label 87 180 88 11 103 (nil) [1 uses])
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 11 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129])
                (const_int 4 [0x4])) [1 _17->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:70 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 11 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (lshiftrt:SI (reg:SI 3 r3 [orig:130 _18 ] [130])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:100 147 {*arm_shiftsi3}
     (nil))
(insn 92 91 93 11 (set (reg:SI 2 r2 [165])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 94 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [12 %sfp+-48 S4 A64])
        (reg:SI 3 r3 [orig:131 _19 ] [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 205 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [12 %sfp+-44 S4 A32])
        (reg:SI 2 r2 [165])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 205 94 188 11 (set (reg:SI 3 r3 [202])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [12 %sfp+-48 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 188 205 96 11 (set (reg:SI 10 r10 [orig:133 _21 ] [133])
        (zero_extract:SI (reg:SI 3 r3 [202])
            (const_int 9 [0x9])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:55 161 {extzv_t2}
     (nil))
(insn 96 188 97 11 (set (reg:SI 11 fp [ _21+4 ])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 97 96 98 11 (set (reg:DI 2 r2 [166])
        (reg:DI 10 r10 [orig:133 _21 ] [133])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 98 97 99 11 (set (reg:DI 0 r0 [167])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 99 98 100 11 (set (reg:SI 1 r1 [+4 ])
        (ashift:SI (reg:SI 3 r3 [+4 ])
            (const_int 5 [0x5]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 100 99 101 11 (set (reg:SI 1 r1 [+4 ])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [166])
                (const_int 27 [0x1b]))
            (reg:SI 1 r1 [+4 ]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 322 {*orr_shiftsi}
     (nil))
(insn 101 100 102 11 (set (reg:SI 0 r0 [167])
        (ashift:SI (reg:SI 2 r2 [166])
            (const_int 5 [0x5]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 102 101 105 11 (set (reg:DI 2 r2 [166])
        (reg:DI 0 r0 [167])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 10 r10 [orig:133 _21 ] [133])
            (const_int 32 [0x20]))
        (nil)))
(insn 105 102 106 11 (parallel [
            (set (reg:CC 100 cc)
                (compare:CC (reg:SI 2 r2 [166])
                    (reg:SI 10 r10 [orig:133 _21 ] [133])))
            (set (reg:SI 8 r8 [170])
                (minus:SI (reg:SI 2 r2 [166])
                    (reg:SI 10 r10 [orig:133 _21 ] [133])))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 26 {subsi3_compare1}
     (nil))
(insn 106 105 107 11 (set (reg:SI 9 r9 [+4 ])
        (minus:SI (minus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 11 fp [ _21+4 ]))
            (ltu:SI (reg:CC 100 cc)
                (const_int 0 [0])))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 29 {subsi3_carryin}
     (nil))
(insn 107 106 108 11 (set (reg:DI 2 r2 [171])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 108 107 109 11 (set (reg:SI 3 r3 [+4 ])
        (ashift:SI (reg:SI 9 r9 [+4 ])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 109 108 110 11 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (lshiftrt:SI (reg:SI 8 r8 [170])
                (const_int 26 [0x1a]))
            (reg:SI 3 r3 [+4 ]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 322 {*orr_shiftsi}
     (nil))
(insn 110 109 113 11 (set (reg:SI 2 r2 [171])
        (ashift:SI (reg:SI 8 r8 [170])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 113 110 114 11 (parallel [
            (set (reg:CC 100 cc)
                (compare:CC (reg:SI 2 r2 [171])
                    (reg:SI 8 r8 [170])))
            (set (reg:SI 4 r4 [174])
                (minus:SI (reg:SI 2 r2 [171])
                    (reg:SI 8 r8 [170])))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 26 {subsi3_compare1}
     (nil))
(insn 114 113 115 11 (set (reg:SI 5 r5 [+4 ])
        (minus:SI (minus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 9 r9 [+4 ]))
            (ltu:SI (reg:CC 100 cc)
                (const_int 0 [0])))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 29 {subsi3_carryin}
     (nil))
(insn 115 114 116 11 (set (reg:DI 2 r2 [175])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 116 115 117 11 (set (reg:SI 3 r3 [+4 ])
        (ashift:SI (reg:SI 5 r5 [+4 ])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 117 116 118 11 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (lshiftrt:SI (reg:SI 4 r4 [174])
                (const_int 29 [0x1d]))
            (reg:SI 3 r3 [+4 ]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 322 {*orr_shiftsi}
     (nil))
(insn 118 117 119 11 (set (reg:SI 2 r2 [175])
        (ashift:SI (reg:SI 4 r4 [174])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 119 118 122 11 (set (reg:DI 4 r4 [174])
        (reg:DI 2 r2 [175])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 10 r10 [orig:133 _21 ] [133])
            (const_int 15624 [0x3d08]))
        (nil)))
(insn 122 119 206 11 (parallel [
            (set (reg:CC_C 100 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [174])
                        (reg:SI 10 r10 [orig:133 _21 ] [133]))
                    (reg:SI 4 r4 [174])))
            (set (reg:SI 3 r3 [203])
                (plus:SI (reg:SI 4 r4 [174])
                    (reg:SI 10 r10 [orig:133 _21 ] [133])))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 17 {addsi3_compare_op1}
     (nil))
(insn 206 122 123 11 (set (mem/c:SI (reg/f:SI 7 r7) [12 %sfp+-64 S4 A64])
        (reg:SI 3 r3 [203])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 123 206 208 11 (set (reg:SI 3 r3 [205])
        (plus:SI (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 11 fp [ _21+4 ]))
            (ltu:SI (reg:CC_C 100 cc)
                (const_int 0 [0])))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 21 {addsi3_carryin}
     (nil))
(insn 208 123 124 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [12 %sfp+-60 S4 A32])
        (reg:SI 3 r3 [205])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 124 208 215 11 (set (reg:DI 2 r2 [179])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 215 124 210 11 (set (reg:DI 4 r4 [178])
        (mem/c:DI (reg/f:SI 7 r7) [12 %sfp+-64 S8 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 210 215 125 11 (set (reg:SI 1 r1 [207])
        (reg:SI 5 r5 [+4 ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 125 210 211 11 (set (reg:SI 3 r3 [+4 ])
        (ashift:SI (reg:SI 1 r1 [207])
            (const_int 10 [0xa]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(insn 211 125 126 11 (set (reg:SI 1 r1 [208])
        (reg:SI 4 r4 [178])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 126 211 212 11 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (lshiftrt:SI (reg:SI 1 r1 [208])
                (const_int 22 [0x16]))
            (reg:SI 3 r3 [+4 ]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 322 {*orr_shiftsi}
     (nil))
(insn 212 126 127 11 (set (reg:SI 1 r1 [209])
        (reg:SI 4 r4 [178])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 127 212 213 11 (set (reg:SI 2 r2 [179])
        (ashift:SI (reg:SI 1 r1 [209])
            (const_int 10 [0xa]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 147 {*arm_shiftsi3}
     (nil))
(note 213 127 129 11 NOTE_INSN_DELETED)
(insn 129 213 130 11 (set (reg:DI 0 r0 [orig:134 _22 ] [134])
        (reg:DI 2 r2 [178])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:52 750 {*movdi_vfp}
     (nil))
(insn 130 129 131 11 (set (reg:SI 3 r3 [182])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 52 [0x34])) [1 pllm+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 132 11 (set (reg:SI 2 r2 [183])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [12 %sfp+-56 S4 A64])
        (reg:SI 3 r3 [182])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 133 132 134 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [12 %sfp+-52 S4 A32])
        (reg:SI 2 r2 [183])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:130 749 {*thumb2_movsi_vfp}
     (nil))
(insn 134 133 136 11 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [12 %sfp+-56 S8 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:128 750 {*movdi_vfp}
     (nil))
(call_insn/u 136 134 137 11 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uldivmod") [flags 0x41]  <function_decl 0000000005f70400 __aeabi_uldivmod>) [0  S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:128 291 {*call_value_symbol}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list (use (reg:DI 2 r2))
            (expr_list (use (reg:DI 0 r0))
                (nil)))))
(insn 137 136 139 11 (set (reg:DI 2 r2 [186])
        (reg:DI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:128 750 {*movdi_vfp}
     (nil))
(insn 139 137 140 11 (set (reg:SI 3 r3 [187])
        (reg:SI 2 r2 [orig:136 _24 ] [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 140 139 141 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 60 [0x3c])) [1 pllvco+0 S4 A32])
        (reg:SI 3 r3 [187])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":918:16 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              10 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137 138 139 140 141 188 190 191 192
(code_label 141 140 142 12 104 (nil) [1 uses])
(note 142 141 143 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 12 (set (reg/f:SI 3 r3 [orig:137 _25 ] [137])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 144 143 145 12 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:137 _25 ] [137])
                (const_int 4 [0x4])) [1 _25->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 145 144 146 12 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (lshiftrt:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 16 [0x10]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:51 147 {*arm_shiftsi3}
     (nil))
(insn 146 145 147 12 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (and:SI (reg:SI 3 r3 [orig:139 _27 ] [139])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:51 90 {*arm_andsi3_insn}
     (nil))
(insn 147 146 148 12 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (plus:SI (reg:SI 3 r3 [orig:140 _28 ] [140])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:76 7 {*arm_addsi3}
     (nil))
(insn 148 147 149 12 (set (reg:SI 3 r3 [188])
        (ashift:SI (reg:SI 3 r3 [orig:141 _29 ] [141])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:12 147 {*arm_shiftsi3}
     (nil))
(insn 149 148 150 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 48 [0x30])) [1 pllp+0 S4 A64])
        (reg:SI 3 r3 [188])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":920:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 150 149 151 12 (set (reg:SI 2 r2 [191])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 60 [0x3c])) [1 pllvco+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":922:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 151 150 152 12 (set (reg:SI 3 r3 [192])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 48 [0x30])) [1 pllp+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":922:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 152 151 153 12 (set (reg:SI 3 r3 [190])
        (udiv:SI (reg:SI 2 r2 [191])
            (reg:SI 3 r3 [192]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":922:20 163 {udivsi3}
     (nil))
(insn 153 152 181 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 56 [0x38])) [1 sysclockfreq+0 S4 A64])
        (reg:SI 3 r3 [190])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":922:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 181 153 182 12 (set (pc)
        (label_ref 160)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":923:7 284 {*arm_jump}
     (nil)
 -> 160)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:923:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 182 181 156)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 15, flags: (RTL, MODIFIED)
;;  pred:       3
;;              6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:893:3
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 193
(code_label 156 182 157 13 99 (nil) [2 uses])
(note 157 156 158 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 13 (set (reg:SI 3 r3 [193])
        (const_int 16000000 [0xf42400])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":927:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 159 158 183 13 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 56 [0x38])) [1 sysclockfreq+0 S4 A64])
        (reg:SI 3 r3 [193])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":927:20 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       15 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:928:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:928:7
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 183 159 184 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 160 15 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":928:7 313 {nop}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 15, next block 1, flags: (RTL, MODIFIED)
;;  pred:       15 [always]  (FALLTHRU)
;;              7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:898:7
;;              8 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:903:7
;;              12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:923:7
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 142 143
(code_label 160 184 161 14 102 (nil) [3 uses])
(note 161 160 162 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 169 14 (set (reg:SI 3 r3 [orig:142 _45 ] [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 56 [0x38])) [1 sysclockfreq+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":931:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 169 162 170 14 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:143 <retval> ] [143])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":932:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 170 169 198 14 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":932:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 198 170 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_GetHCLKFreq (HAL_RCC_GetHCLKFreq, funcdef_no=141, decl_uid=7004, cgraph_uid=146, symbol_order=145)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 14: point = 0, n_alt = -1
   Insn 13: point = 0, n_alt = -2
   Insn 9: point = 1, n_alt = -2
   Insn 6: point = 3, n_alt = 5
   Insn 5: point = 5, n_alt = 5
 r113: [2..3]
 r114: [0..1]
 r115: [4..5]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]
 r115: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 9
changing reg in insn 9
changing reg in insn 13
changing reg in insn 5
changing reg in insn 6
deleting insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_GetHCLKFreq

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={3d,2u} r7={1d,2u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 36{27d,9u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [115])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x40]  <var_decl 0000000006305d80 SystemCoreClock>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":945:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 13 2 (set (reg:SI 3 r3 [orig:113 _2 ] [113])
        (mem/c:SI (reg/f:SI 3 r3 [115]) [1 SystemCoreClock+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":945:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 6 14 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":946:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 16 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":946:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 16 14 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_GetPCLK1Freq (HAL_RCC_GetPCLK1Freq, funcdef_no=142, decl_uid=7006, cgraph_uid=147, symbol_order=146)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) r  (2) r {*arm_shiftsi3}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -2
   Insn 17: point = 1, n_alt = -2
   Insn 14: point = 3, n_alt = 3
   Insn 13: point = 5, n_alt = -2
   Insn 12: point = 7, n_alt = 1
   Insn 11: point = 9, n_alt = 5
   Insn 10: point = 10, n_alt = 0
   Insn 9: point = 12, n_alt = 1
   Insn 8: point = 14, n_alt = 5
   Insn 7: point = 16, n_alt = 5
   Insn 6: point = 17, n_alt = -2
   Insn 5: point = 18, n_alt = -1
 r113: [4..17]
 r114: [15..16]
 r115: [13..14]
 r116: [11..12]
 r117: [8..10]
 r118: [6..7]
 r119: [4..5]
 r120: [2..3]
 r121: [0..1]
 r122: [8..9]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r113: [4..15]
 r114: [14..15]
 r115: [12..13]
 r116: [10..11]
 r117: [8..9]
 r118: [6..7]
 r119: [4..5]
 r120: [2..3]
 r121: [0..1]
 r122: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 14
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 17
changing reg in insn 17
changing reg in insn 21
changing reg in insn 11
changing reg in insn 12
deleting insn with uid = 13.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.


HAL_RCC_GetPCLK1Freq

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={3d,1u} r3={8d,6u} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 131{114d,17u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_RCC_GetHCLKFreq") [flags 0x3]  <function_decl 000000000668ea00 HAL_RCC_GetHCLKFreq>) [0 HAL_RCC_GetHCLKFreq S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 6 5 7 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114])
                (const_int 8 [0x8])) [1 _2->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (lshiftrt:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 10 [0xa]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:79 147 {*arm_shiftsi3}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (and:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:79 90 {*arm_andsi3_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 1 r1 [122])
        (symbol_ref:SI ("APBPrescTable") [flags 0x40]  <var_decl 0000000006305ea0 APBPrescTable>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:49 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 14 2 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1 r1 [122])
                    (reg:SI 3 r3 [orig:117 _5 ] [117])) [0 APBPrescTable[_5]+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:49 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 14 12 21 2 (set (reg:SI 3 r3 [orig:120 _10 ] [120])
        (lshiftrt:SI (reg:SI 2 r2 [orig:113 _1 ] [113])
            (reg:SI 3 r3 [orig:119 _7 ] [119]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":957:33 147 {*arm_shiftsi3}
     (nil))
(insn 21 14 22 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:121 <retval> ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":958:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 25 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":958:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 25 22 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_GetPCLK2Freq (HAL_RCC_GetPCLK2Freq, funcdef_no=143, decl_uid=7008, cgraph_uid=148, symbol_order=147)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) r  (2) r {*arm_shiftsi3}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = -2
   Insn 17: point = 1, n_alt = -2
   Insn 14: point = 3, n_alt = 3
   Insn 13: point = 5, n_alt = -2
   Insn 12: point = 7, n_alt = 1
   Insn 11: point = 9, n_alt = 5
   Insn 10: point = 10, n_alt = 0
   Insn 9: point = 12, n_alt = 1
   Insn 8: point = 14, n_alt = 5
   Insn 7: point = 16, n_alt = 5
   Insn 6: point = 17, n_alt = -2
   Insn 5: point = 18, n_alt = -1
 r113: [4..17]
 r114: [15..16]
 r115: [13..14]
 r116: [11..12]
 r117: [8..10]
 r118: [6..7]
 r119: [4..5]
 r120: [2..3]
 r121: [0..1]
 r122: [8..9]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r113: [4..15]
 r114: [14..15]
 r115: [12..13]
 r116: [10..11]
 r117: [8..9]
 r118: [6..7]
 r119: [4..5]
 r120: [2..3]
 r121: [0..1]
 r122: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 14
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 17
changing reg in insn 17
changing reg in insn 21
changing reg in insn 11
changing reg in insn 12
deleting insn with uid = 13.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.


HAL_RCC_GetPCLK2Freq

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={3d,1u} r3={8d,6u} r7={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 131{114d,17u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 115 116 117 118 119 120 121 122
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_RCC_GetHCLKFreq") [flags 0x3]  <function_decl 000000000668ea00 HAL_RCC_GetHCLKFreq>) [0 HAL_RCC_GetHCLKFreq S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 6 5 7 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114])
                (const_int 8 [0x8])) [1 _2->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (lshiftrt:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 13 [0xd]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:79 147 {*arm_shiftsi3}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (and:SI (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:79 90 {*arm_andsi3_insn}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 1 r1 [122])
        (symbol_ref:SI ("APBPrescTable") [flags 0x40]  <var_decl 0000000006305ea0 APBPrescTable>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:49 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 14 2 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (zero_extend:SI (mem/u:QI (plus:SI (reg/f:SI 1 r1 [122])
                    (reg:SI 3 r3 [orig:117 _5 ] [117])) [0 APBPrescTable[_5]+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:49 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 14 12 21 2 (set (reg:SI 3 r3 [orig:120 _10 ] [120])
        (lshiftrt:SI (reg:SI 2 r2 [orig:113 _1 ] [113])
            (reg:SI 3 r3 [orig:119 _7 ] [119]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":969:33 147 {*arm_shiftsi3}
     (nil))
(insn 21 14 22 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:121 <retval> ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":970:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 25 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":970:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 25 22 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_GetOscConfig (HAL_RCC_GetOscConfig, funcdef_no=144, decl_uid=7010, cgraph_uid=149, symbol_order=148)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 17:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 30:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 37:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 48:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 55:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 63:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 79:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 85:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 92:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 96:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 103:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 108:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 110:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 115:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 121:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 126:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 128:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 132:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 135:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 139:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 140:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 141:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) r  (2) n  (3) n {extzv_t2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 145:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 146:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 147:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 148:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 150:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 152:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 153:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 154:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 155:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 156:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 159:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 160:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9
EBB 10 11
EBB 12 13
EBB 14
EBB 15 16
EBB 17
EBB 18 19
EBB 20
EBB 21 22

********** Pseudo live ranges #1: **********

  BB 22
   Insn 178: point = 0, n_alt = -1
  BB 21
   Insn 160: point = 0, n_alt = 7
   Insn 159: point = 1, n_alt = 5
   Insn 158: point = 2, n_alt = 0
   Insn 157: point = 4, n_alt = 1
   Insn 156: point = 6, n_alt = 5
   Insn 155: point = 8, n_alt = 5
   Insn 154: point = 9, n_alt = 7
   Insn 153: point = 10, n_alt = 5
   Insn 152: point = 11, n_alt = 1
   Insn 151: point = 13, n_alt = 1
   Insn 150: point = 15, n_alt = 4
   Insn 149: point = 17, n_alt = 0
   Insn 148: point = 19, n_alt = 5
   Insn 147: point = 21, n_alt = 5
   Insn 146: point = 22, n_alt = 7
   Insn 145: point = 23, n_alt = 5
   Insn 144: point = 24, n_alt = 0
   Insn 143: point = 26, n_alt = 1
   Insn 142: point = 28, n_alt = 5
   Insn 141: point = 30, n_alt = 5
   Insn 140: point = 31, n_alt = 7
   Insn 139: point = 32, n_alt = 5
   Insn 138: point = 33, n_alt = 0
   Insn 137: point = 35, n_alt = 5
   Insn 136: point = 37, n_alt = 5
   Insn 135: point = 38, n_alt = 7
   Insn 134: point = 39, n_alt = 5
   Insn 133: point = 40, n_alt = 0
   Insn 132: point = 42, n_alt = 5
   Insn 131: point = 44, n_alt = 5
  BB 19
   Insn 175: point = 45, n_alt = -1
   Insn 121: point = 45, n_alt = 7
   Insn 120: point = 46, n_alt = 1
   Insn 119: point = 47, n_alt = 5
  BB 20
   Insn 128: point = 48, n_alt = 7
   Insn 127: point = 49, n_alt = 1
   Insn 126: point = 50, n_alt = 5
  BB 18
   Insn 117: point = 51, n_alt = -1
   Insn 116: point = 51, n_alt = 3
   Insn 115: point = 52, n_alt = 0
   Insn 114: point = 54, n_alt = 5
   Insn 113: point = 56, n_alt = 5
  BB 16
   Insn 173: point = 57, n_alt = -1
   Insn 103: point = 57, n_alt = 7
   Insn 102: point = 58, n_alt = 1
   Insn 101: point = 59, n_alt = 5
  BB 17
   Insn 110: point = 60, n_alt = 7
   Insn 109: point = 61, n_alt = 1
   Insn 108: point = 62, n_alt = 5
  BB 15
   Insn 99: point = 63, n_alt = -1
   Insn 98: point = 63, n_alt = 0
   Insn 97: point = 64, n_alt = 0
   Insn 96: point = 66, n_alt = 5
   Insn 95: point = 68, n_alt = 5
  BB 13
   Insn 171: point = 69, n_alt = -1
   Insn 85: point = 69, n_alt = 7
   Insn 84: point = 70, n_alt = 1
   Insn 83: point = 71, n_alt = 5
  BB 11
   Insn 169: point = 72, n_alt = -1
   Insn 72: point = 72, n_alt = 7
   Insn 71: point = 73, n_alt = 1
   Insn 70: point = 74, n_alt = 5
  BB 14
   Insn 92: point = 75, n_alt = 7
   Insn 91: point = 76, n_alt = 1
   Insn 90: point = 77, n_alt = 5
  BB 12
   Insn 81: point = 78, n_alt = -1
   Insn 80: point = 78, n_alt = 0
   Insn 79: point = 79, n_alt = 0
   Insn 78: point = 81, n_alt = 5
   Insn 77: point = 83, n_alt = 5
  BB 10
   Insn 68: point = 84, n_alt = -1
   Insn 67: point = 84, n_alt = 0
   Insn 66: point = 85, n_alt = 0
   Insn 65: point = 87, n_alt = 5
   Insn 64: point = 89, n_alt = 5
   Insn 63: point = 90, n_alt = 7
   Insn 62: point = 91, n_alt = 5
   Insn 61: point = 92, n_alt = 0
   Insn 60: point = 94, n_alt = 1
   Insn 59: point = 96, n_alt = 5
   Insn 58: point = 98, n_alt = 5
  BB 8
   Insn 167: point = 99, n_alt = -1
   Insn 48: point = 99, n_alt = 7
   Insn 47: point = 100, n_alt = 1
   Insn 46: point = 101, n_alt = 5
  BB 9
   Insn 55: point = 102, n_alt = 7
   Insn 54: point = 103, n_alt = 1
   Insn 53: point = 104, n_alt = 5
  BB 7
   Insn 44: point = 105, n_alt = -1
   Insn 43: point = 105, n_alt = 0
   Insn 42: point = 106, n_alt = 0
   Insn 41: point = 108, n_alt = 5
   Insn 40: point = 110, n_alt = 5
  BB 5
   Insn 165: point = 111, n_alt = -1
   Insn 30: point = 111, n_alt = 7
   Insn 29: point = 112, n_alt = 1
   Insn 28: point = 113, n_alt = 5
  BB 3
   Insn 163: point = 114, n_alt = -1
   Insn 17: point = 114, n_alt = 7
   Insn 16: point = 115, n_alt = 1
   Insn 15: point = 116, n_alt = 5
  BB 6
   Insn 37: point = 117, n_alt = 7
   Insn 36: point = 118, n_alt = 1
   Insn 35: point = 119, n_alt = 5
  BB 4
   Insn 26: point = 120, n_alt = -1
   Insn 25: point = 120, n_alt = 3
   Insn 24: point = 121, n_alt = 0
   Insn 23: point = 123, n_alt = 5
   Insn 22: point = 125, n_alt = 5
  BB 2
   Insn 13: point = 126, n_alt = -1
   Insn 12: point = 126, n_alt = 3
   Insn 11: point = 127, n_alt = 0
   Insn 10: point = 129, n_alt = 5
   Insn 9: point = 131, n_alt = 5
   Insn 8: point = 132, n_alt = 7
   Insn 7: point = 133, n_alt = 1
   Insn 6: point = 134, n_alt = 5
   Insn 2: point = 135, n_alt = 7
 r113: [130..131]
 r114: [128..129]
 r115: [126..127]
 r116: [124..125]
 r117: [122..123]
 r118: [120..121]
 r119: [109..110]
 r120: [107..108]
 r121: [105..106]
 r122: [97..98]
 r123: [95..96]
 r124: [93..94]
 r125: [90..92]
 r126: [88..89]
 r127: [86..87]
 r128: [84..85]
 r129: [82..83]
 r130: [80..81]
 r131: [78..79]
 r132: [67..68]
 r133: [65..66]
 r134: [63..64]
 r135: [55..56]
 r136: [53..54]
 r137: [51..52]
 r138: [43..44]
 r139: [41..42]
 r140: [38..40]
 r141: [36..37]
 r142: [34..35]
 r143: [31..33]
 r144: [29..30]
 r145: [27..28]
 r146: [25..26]
 r147: [22..24]
 r148: [20..21]
 r149: [18..19]
 r150: [16..17]
 r151: [14..15]
 r152: [12..13]
 r153: [9..11]
 r154: [7..8]
 r155: [5..6]
 r156: [3..4]
 r157: [0..2]
 r158: [132..134]
 r159: [132..133]
 r160: [114..116]
 r161: [114..115]
 r162: [111..113]
 r163: [111..112]
 r164: [117..119]
 r165: [117..118]
 r166: [99..101]
 r167: [99..100]
 r168: [102..104]
 r169: [102..103]
 r170: [90..91]
 r171: [72..74]
 r172: [72..73]
 r173: [69..71]
 r174: [69..70]
 r175: [75..77]
 r176: [75..76]
 r177: [57..59]
 r178: [57..58]
 r179: [60..62]
 r180: [60..61]
 r181: [45..47]
 r182: [45..46]
 r183: [48..50]
 r184: [48..49]
 r185: [38..39]
 r186: [31..32]
 r187: [22..23]
 r188: [9..10]
 r189: [0..1]
Compressing live ranges: from 135 to 116 - 85%
Ranges after the compression:
 r113: [112..113]
 r114: [110..111]
 r115: [108..109]
 r116: [106..107]
 r117: [104..105]
 r118: [102..103]
 r119: [94..95]
 r120: [92..93]
 r121: [90..91]
 r122: [84..85]
 r123: [82..83]
 r124: [80..81]
 r125: [78..79]
 r126: [76..77]
 r127: [74..75]
 r128: [72..73]
 r129: [70..71]
 r130: [68..69]
 r131: [66..67]
 r132: [58..59]
 r133: [56..57]
 r134: [54..55]
 r135: [48..49]
 r136: [46..47]
 r137: [44..45]
 r138: [38..39]
 r139: [36..37]
 r140: [34..35]
 r141: [32..33]
 r142: [30..31]
 r143: [28..29]
 r144: [26..27]
 r145: [24..25]
 r146: [22..23]
 r147: [20..21]
 r148: [18..19]
 r149: [16..17]
 r150: [14..15]
 r151: [12..13]
 r152: [10..11]
 r153: [8..9]
 r154: [6..7]
 r155: [4..5]
 r156: [2..3]
 r157: [0..1]
 r158: [114..115]
 r159: [114..115]
 r160: [98..99]
 r161: [98..99]
 r162: [96..97]
 r163: [96..97]
 r164: [100..101]
 r165: [100..101]
 r166: [86..87]
 r167: [86..87]
 r168: [88..89]
 r169: [88..89]
 r170: [78..79]
 r171: [62..63]
 r172: [62..63]
 r173: [60..61]
 r174: [60..61]
 r175: [64..65]
 r176: [64..65]
 r177: [50..51]
 r178: [50..51]
 r179: [52..53]
 r180: [52..53]
 r181: [40..41]
 r182: [40..41]
 r183: [42..43]
 r184: [42..43]
 r185: [34..35]
 r186: [28..29]
 r187: [20..21]
 r188: [8..9]
 r189: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 116
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 140
changing reg in insn 141
changing reg in insn 142
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 158
changing reg in insn 158
changing reg in insn 160
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 28
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 35
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 62
changing reg in insn 63
changing reg in insn 70
changing reg in insn 72
changing reg in insn 71
changing reg in insn 72
changing reg in insn 83
changing reg in insn 85
changing reg in insn 84
changing reg in insn 85
changing reg in insn 90
changing reg in insn 92
changing reg in insn 91
changing reg in insn 92
changing reg in insn 101
changing reg in insn 103
changing reg in insn 102
changing reg in insn 103
changing reg in insn 108
changing reg in insn 110
changing reg in insn 109
changing reg in insn 110
changing reg in insn 119
changing reg in insn 121
changing reg in insn 120
changing reg in insn 121
changing reg in insn 126
changing reg in insn 128
changing reg in insn 127
changing reg in insn 128
changing reg in insn 134
changing reg in insn 135
changing reg in insn 139
changing reg in insn 140
changing reg in insn 145
changing reg in insn 146
changing reg in insn 153
changing reg in insn 154
changing reg in insn 159
changing reg in insn 160
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_GetOscConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={20d,19u} r3={59d,58u} r7={1d,42u} r13={1d,22u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={7d,7u} r102={1d,1u} 
;;    total ref usage 258{108d,150u,0e} in 119{119 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 158 159
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])
        (reg:SI 0 r0 [ RCC_OscInitStruct ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":980:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":982:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2 [159])
        (const_int 15 [0xf])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":982:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:SI 3 r3 [158]) [1 RCC_OscInitStruct_52(D)->OscillatorType+0 S4 A32])
        (reg:SI 2 r2 [159])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":982:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":985:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 _1->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":985:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 262144 [0x40000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":985:16 90 {*arm_andsi3_insn}
     (nil))
(insn 12 11 13 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 262144 [0x40000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":985:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":985:6 273 {arm_cond_branch}
     (nil)
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 160 161
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 3 r3 [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":987:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 3 (set (reg:SI 2 r2 [161])
        (const_int 327680 [0x50000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":987:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 163 3 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [160])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_52(D)->HSEState+0 S4 A32])
        (reg:SI 2 r2 [161])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":987:33 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 163 17 164 3 (set (pc)
        (label_ref 38)) 284 {*arm_jump}
     (nil)
 -> 38)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 164 163 20)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 116 117 118
(code_label 20 164 21 4 121 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":989:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 4 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem/v:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [1 _4->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":989:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 4 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (and:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":989:21 90 {*arm_andsi3_insn}
     (nil))
(insn 25 24 26 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":989:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":989:11 273 {arm_cond_branch}
     (nil)
 -> 33)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 162 163
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 3 r3 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":991:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 5 (set (reg:SI 2 r2 [163])
        (const_int 65536 [0x10000])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":991:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 165 5 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [162])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_52(D)->HSEState+0 S4 A32])
        (reg:SI 2 r2 [163])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":991:33 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 165 30 166 5 (set (pc)
        (label_ref 38)) 284 {*arm_jump}
     (nil)
 -> 38)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 166 165 33)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 164 165
(code_label 33 166 34 6 123 (nil) [1 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":995:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 6 (set (reg:SI 2 r2 [165])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":995:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 6 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [164])
                (const_int 4 [0x4])) [1 RCC_OscInitStruct_52(D)->HSEState+0 S4 A32])
        (reg:SI 2 r2 [165])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":995:33 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [always] 
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 119 120 121
(code_label 38 37 39 7 122 (nil) [2 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 3 r3 [orig:119 _7 ] [119])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":999:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 7 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (mem/v:SI (reg/f:SI 3 r3 [orig:119 _7 ] [119]) [1 _7->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":999:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 7 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":999:16 90 {*arm_andsi3_insn}
     (nil))
(insn 43 42 44 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":999:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":999:6 273 {arm_cond_branch}
     (nil)
 -> 51)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 166 167
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1001:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 8 (set (reg:SI 2 r2 [167])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1001:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 167 8 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [166])
                (const_int 12 [0xc])) [1 RCC_OscInitStruct_52(D)->HSIState+0 S4 A32])
        (reg:SI 2 r2 [167])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1001:33 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 167 48 168 8 (set (pc)
        (label_ref 56)) 284 {*arm_jump}
     (nil)
 -> 56)
;;  succ:       10 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 168 167 51)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 168 169
(code_label 51 168 52 9 124 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg/f:SI 3 r3 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1005:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 9 (set (reg:SI 2 r2 [169])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1005:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 9 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [168])
                (const_int 12 [0xc])) [1 RCC_OscInitStruct_52(D)->HSIState+0 S4 A32])
        (reg:SI 2 r2 [169])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1005:33 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              8 [always] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 122 123 124 125 126 127 128 170
(code_label 56 55 57 10 125 (nil) [1 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1008:59 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 10 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem/v:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122]) [1 _10->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1008:59 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 10 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (lshiftrt:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1008:44 147 {*arm_shiftsi3}
     (nil))
(insn 61 60 62 10 (set (reg:SI 2 r2 [orig:125 _13 ] [125])
        (and:SI (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 31 [0x1f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1008:44 90 {*arm_andsi3_insn}
     (nil))
(insn 62 61 63 10 (set (reg/f:SI 3 r3 [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1008:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 10 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [170])
                (const_int 16 [0x10])) [1 RCC_OscInitStruct_52(D)->HSICalibrationValue+0 S4 A32])
        (reg:SI 2 r2 [orig:125 _13 ] [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1008:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 10 (set (reg/f:SI 3 r3 [orig:126 _14 ] [126])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1011:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 10 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:126 _14 ] [126])
                (const_int 112 [0x70])) [1 _14->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1011:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 10 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (and:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1011:18 90 {*arm_andsi3_insn}
     (nil))
(insn 67 66 68 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:128 _16 ] [128])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1011:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 68 67 69 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1011:6 273 {arm_cond_branch}
     (nil)
 -> 75)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 171 172
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (reg/f:SI 3 r3 [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1013:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 11 (set (reg:SI 2 r2 [172])
        (const_int 5 [0x5])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1013:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 169 11 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [171])
                (const_int 8 [0x8])) [1 RCC_OscInitStruct_52(D)->LSEState+0 S4 A32])
        (reg:SI 2 r2 [172])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1013:33 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 169 72 170 11 (set (pc)
        (label_ref 93)) 284 {*arm_jump}
     (nil)
 -> 93)
;;  succ:       15 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 170 169 75)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129 130 131
(code_label 75 170 76 12 126 (nil) [1 uses])
(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 12 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1015:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 12 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129])
                (const_int 112 [0x70])) [1 _17->BDCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1015:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 12 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (and:SI (reg:SI 3 r3 [orig:130 _18 ] [130])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1015:23 90 {*arm_andsi3_insn}
     (nil))
(insn 80 79 81 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:131 _19 ] [131])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1015:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 81 80 82 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1015:11 273 {arm_cond_branch}
     (nil)
 -> 88)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 173 174
(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 13 (set (reg/f:SI 3 r3 [173])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1017:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 13 (set (reg:SI 2 r2 [174])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1017:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 171 13 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [173])
                (const_int 8 [0x8])) [1 RCC_OscInitStruct_52(D)->LSEState+0 S4 A32])
        (reg:SI 2 r2 [174])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1017:33 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 171 85 172 13 (set (pc)
        (label_ref 93)) 284 {*arm_jump}
     (nil)
 -> 93)
;;  succ:       15 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 172 171 88)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 175 176
(code_label 88 172 89 14 128 (nil) [1 uses])
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 14 (set (reg/f:SI 3 r3 [175])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1021:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 14 (set (reg:SI 2 r2 [176])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1021:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 92 91 93 14 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [175])
                (const_int 8 [0x8])) [1 RCC_OscInitStruct_52(D)->LSEState+0 S4 A32])
        (reg:SI 2 r2 [176])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1021:33 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              11 [always] 
;;              13 [always] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 132 133 134
(code_label 93 92 94 15 127 (nil) [2 uses])
(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 15 (set (reg/f:SI 3 r3 [orig:132 _20 ] [132])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1025:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 15 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:132 _20 ] [132])
                (const_int 116 [0x74])) [1 _20->CSR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1025:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 97 96 98 15 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (and:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1025:17 90 {*arm_andsi3_insn}
     (nil))
(insn 98 97 99 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1025:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 99 98 100 15 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1025:6 273 {arm_cond_branch}
     (nil)
 -> 106)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 177 178
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 16 (set (reg/f:SI 3 r3 [177])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1027:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 102 101 103 16 (set (reg:SI 2 r2 [178])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1027:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 173 16 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [177])
                (const_int 20 [0x14])) [1 RCC_OscInitStruct_52(D)->LSIState+0 S4 A32])
        (reg:SI 2 r2 [178])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1027:33 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 173 103 174 16 (set (pc)
        (label_ref 111)) 284 {*arm_jump}
     (nil)
 -> 111)
;;  succ:       18 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 174 173 106)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 179 180
(code_label 106 174 107 17 129 (nil) [1 uses])
(note 107 106 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 17 (set (reg/f:SI 3 r3 [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1031:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 109 108 110 17 (set (reg:SI 2 r2 [180])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1031:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 110 109 111 17 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [179])
                (const_int 20 [0x14])) [1 RCC_OscInitStruct_52(D)->LSIState+0 S4 A32])
        (reg:SI 2 r2 [180])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1031:33 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              16 [always] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 135 136 137
(code_label 111 110 112 18 130 (nil) [1 uses])
(note 112 111 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 18 (set (reg/f:SI 3 r3 [orig:135 _23 ] [135])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1035:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 114 113 115 18 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 _23 ] [135]) [1 _23->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1035:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 115 114 116 18 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (and:SI (reg:SI 3 r3 [orig:136 _24 ] [136])
            (const_int 16777216 [0x1000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1035:16 90 {*arm_andsi3_insn}
     (nil))
(insn 116 115 117 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 _25 ] [137])
            (const_int 16777216 [0x1000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1035:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 117 116 118 18 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1035:6 273 {arm_cond_branch}
     (nil)
 -> 124)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 181 182
(note 118 117 119 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 19 (set (reg/f:SI 3 r3 [181])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1037:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 120 119 121 19 (set (reg:SI 2 r2 [182])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1037:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 121 120 175 19 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [181])
                (const_int 24 [0x18])) [1 RCC_OscInitStruct_52(D)->PLL.PLLState+0 S4 A32])
        (reg:SI 2 r2 [182])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1037:37 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 175 121 176 19 (set (pc)
        (label_ref 129)) 284 {*arm_jump}
     (nil)
 -> 129)
;;  succ:       21 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 176 175 124)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 183 184
(code_label 124 176 125 20 131 (nil) [1 uses])
(note 125 124 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 20 (set (reg/f:SI 3 r3 [183])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1041:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 127 126 128 20 (set (reg:SI 2 r2 [184])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1041:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 128 127 129 20 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [183])
                (const_int 24 [0x18])) [1 RCC_OscInitStruct_52(D)->PLL.PLLState+0 S4 A32])
        (reg:SI 2 r2 [184])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1041:37 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              19 [always] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 185 186 187 188 189
(code_label 129 128 130 21 132 (nil) [1 uses])
(note 130 129 131 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 21 (set (reg/f:SI 3 r3 [orig:138 _26 ] [138])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1043:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 21 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:138 _26 ] [138])
                (const_int 4 [0x4])) [1 _26->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1043:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 133 132 134 21 (set (reg:SI 2 r2 [orig:140 _28 ] [140])
        (and:SI (reg:SI 3 r3 [orig:139 _27 ] [139])
            (const_int 4194304 [0x400000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1043:38 90 {*arm_andsi3_insn}
     (nil))
(insn 134 133 135 21 (set (reg/f:SI 3 r3 [185])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1043:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 135 134 136 21 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [185])
                (const_int 28 [0x1c])) [1 RCC_OscInitStruct_52(D)->PLL.PLLSource+0 S4 A32])
        (reg:SI 2 r2 [orig:140 _28 ] [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1043:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 136 135 137 21 (set (reg/f:SI 3 r3 [orig:141 _29 ] [141])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1044:47 749 {*thumb2_movsi_vfp}
     (nil))
(insn 137 136 138 21 (set (reg:SI 3 r3 [orig:142 _30 ] [142])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:141 _29 ] [141])
                (const_int 4 [0x4])) [1 _29->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1044:47 749 {*thumb2_movsi_vfp}
     (nil))
(insn 138 137 139 21 (set (reg:SI 2 r2 [orig:143 _31 ] [143])
        (and:SI (reg:SI 3 r3 [orig:142 _30 ] [142])
            (const_int 63 [0x3f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1044:33 90 {*arm_andsi3_insn}
     (nil))
(insn 139 138 140 21 (set (reg/f:SI 3 r3 [186])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1044:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 140 139 141 21 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [186])
                (const_int 32 [0x20])) [1 RCC_OscInitStruct_52(D)->PLL.PLLM+0 S4 A32])
        (reg:SI 2 r2 [orig:143 _31 ] [143])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1044:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 141 140 142 21 (set (reg/f:SI 3 r3 [orig:144 _32 ] [144])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1045:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 142 141 143 21 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:144 _32 ] [144])
                (const_int 4 [0x4])) [1 _32->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1045:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 143 142 144 21 (set (reg:SI 3 r3 [orig:146 _34 ] [146])
        (lshiftrt:SI (reg:SI 3 r3 [orig:145 _33 ] [145])
            (const_int 6 [0x6]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1045:33 147 {*arm_shiftsi3}
     (nil))
(insn 144 143 145 21 (set (reg:SI 2 r2 [orig:147 _35 ] [147])
        (zero_extract:SI (reg:SI 3 r3 [orig:146 _34 ] [146])
            (const_int 9 [0x9])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1045:33 161 {extzv_t2}
     (nil))
(insn 145 144 146 21 (set (reg/f:SI 3 r3 [187])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1045:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 146 145 147 21 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [187])
                (const_int 36 [0x24])) [1 RCC_OscInitStruct_52(D)->PLL.PLLN+0 S4 A32])
        (reg:SI 2 r2 [orig:147 _35 ] [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1045:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 147 146 148 21 (set (reg/f:SI 3 r3 [orig:148 _36 ] [148])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:50 749 {*thumb2_movsi_vfp}
     (nil))
(insn 148 147 149 21 (set (reg:SI 3 r3 [orig:149 _37 ] [149])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:148 _36 ] [148])
                (const_int 4 [0x4])) [1 _36->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:50 749 {*thumb2_movsi_vfp}
     (nil))
(insn 149 148 150 21 (set (reg:SI 3 r3 [orig:150 _38 ] [150])
        (and:SI (reg:SI 3 r3 [orig:149 _37 ] [149])
            (const_int 196608 [0x30000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:60 90 {*arm_andsi3_insn}
     (nil))
(insn 150 149 151 21 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (plus:SI (reg:SI 3 r3 [orig:150 _38 ] [150])
            (const_int 65536 [0x10000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:80 7 {*arm_addsi3}
     (nil))
(insn 151 150 152 21 (set (reg:SI 3 r3 [orig:152 _40 ] [152])
        (ashift:SI (reg:SI 3 r3 [orig:151 _39 ] [151])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:102 147 {*arm_shiftsi3}
     (nil))
(insn 152 151 153 21 (set (reg:SI 2 r2 [orig:153 _41 ] [153])
        (lshiftrt:SI (reg:SI 3 r3 [orig:152 _40 ] [152])
            (const_int 16 [0x10]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:33 147 {*arm_shiftsi3}
     (nil))
(insn 153 152 154 21 (set (reg/f:SI 3 r3 [188])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 154 153 155 21 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 40 [0x28])) [1 RCC_OscInitStruct_52(D)->PLL.PLLP+0 S4 A32])
        (reg:SI 2 r2 [orig:153 _41 ] [153])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1046:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 155 154 156 21 (set (reg/f:SI 3 r3 [orig:154 _42 ] [154])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1047:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 156 155 157 21 (set (reg:SI 3 r3 [orig:155 _43 ] [155])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:154 _42 ] [154])
                (const_int 4 [0x4])) [1 _42->PLLCFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1047:48 749 {*thumb2_movsi_vfp}
     (nil))
(insn 157 156 158 21 (set (reg:SI 3 r3 [orig:156 _44 ] [156])
        (lshiftrt:SI (reg:SI 3 r3 [orig:155 _43 ] [155])
            (const_int 24 [0x18]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1047:33 147 {*arm_shiftsi3}
     (nil))
(insn 158 157 159 21 (set (reg:SI 2 r2 [orig:157 _45 ] [157])
        (and:SI (reg:SI 3 r3 [orig:156 _44 ] [156])
            (const_int 15 [0xf]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1047:33 90 {*arm_andsi3_insn}
     (nil))
(insn 159 158 160 21 (set (reg/f:SI 3 r3 [189])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [9 RCC_OscInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1047:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 160 159 177 21 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [189])
                (const_int 44 [0x2c])) [1 RCC_OscInitStruct_52(D)->PLL.PLLQ+0 S4 A32])
        (reg:SI 2 r2 [orig:157 _45 ] [157])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1047:31 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       22 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1048:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 1, flags: (RTL, MODIFIED)
;;  pred:       21 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1048:1
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 177 160 178 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 192 22 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1048:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 192 178 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_GetClockConfig (HAL_RCC_GetClockConfig, funcdef_no=145, decl_uid=7013, cgraph_uid=150, symbol_order=149)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 9:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 19:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 24:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) l  (1) l  (2) M {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 30:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 39: point = 0, n_alt = -1
  BB 2
   Insn 35: point = 0, n_alt = 7
   Insn 34: point = 1, n_alt = 5
   Insn 33: point = 2, n_alt = 0
   Insn 32: point = 4, n_alt = 5
   Insn 31: point = 6, n_alt = 5
   Insn 30: point = 7, n_alt = 7
   Insn 29: point = 8, n_alt = 5
   Insn 28: point = 9, n_alt = 0
   Insn 27: point = 11, n_alt = 1
   Insn 26: point = 13, n_alt = 5
   Insn 25: point = 15, n_alt = 5
   Insn 24: point = 16, n_alt = 7
   Insn 23: point = 17, n_alt = 5
   Insn 22: point = 18, n_alt = 0
   Insn 21: point = 20, n_alt = 5
   Insn 20: point = 22, n_alt = 5
   Insn 19: point = 23, n_alt = 7
   Insn 18: point = 24, n_alt = 5
   Insn 17: point = 25, n_alt = 0
   Insn 16: point = 27, n_alt = 5
   Insn 15: point = 29, n_alt = 5
   Insn 14: point = 30, n_alt = 7
   Insn 13: point = 31, n_alt = 5
   Insn 12: point = 32, n_alt = 0
   Insn 11: point = 34, n_alt = 5
   Insn 10: point = 36, n_alt = 5
   Insn 9: point = 37, n_alt = 7
   Insn 8: point = 38, n_alt = 1
   Insn 7: point = 39, n_alt = 5
   Insn 3: point = 40, n_alt = 7
   Insn 2: point = 40, n_alt = 7
 r113: [35..36]
 r114: [33..34]
 r115: [30..32]
 r116: [28..29]
 r117: [26..27]
 r118: [23..25]
 r119: [21..22]
 r120: [19..20]
 r121: [16..18]
 r122: [14..15]
 r123: [12..13]
 r124: [10..11]
 r125: [7..9]
 r126: [5..6]
 r127: [3..4]
 r128: [0..2]
 r129: [37..39]
 r130: [37..38]
 r131: [30..31]
 r132: [23..24]
 r133: [16..17]
 r134: [7..8]
 r135: [0..1]
Compressing live ranges: from 40 to 34 - 85%
Ranges after the compression:
 r113: [30..31]
 r114: [28..29]
 r115: [26..27]
 r116: [24..25]
 r117: [22..23]
 r118: [20..21]
 r119: [18..19]
 r120: [16..17]
 r121: [14..15]
 r122: [12..13]
 r123: [10..11]
 r124: [8..9]
 r125: [6..7]
 r126: [4..5]
 r127: [2..3]
 r128: [0..1]
 r129: [32..33]
 r130: [32..33]
 r131: [26..27]
 r132: [20..21]
 r133: [14..15]
 r134: [6..7]
 r135: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_GetClockConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={7d,6u} r3={18d,17u} r7={1d,11u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 87{47d,40u,0e} in 32{32 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])
        (reg:SI 0 r0 [ RCC_ClkInitStruct ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1059:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (reg/f:SI 7 r7) [13 pFLatency+0 S4 A32])
        (reg:SI 1 r1 [ pFLatency ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1059:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1061:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 r2 [130])
        (const_int 15 [0xf])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1061:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 3 r3 [129]) [1 RCC_ClkInitStruct_18(D)->ClockType+0 S4 A32])
        (reg:SI 2 r2 [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1061:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1064:51 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 8 [0x8])) [1 _1->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1064:51 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1064:37 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1064:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 4 [0x4])) [1 RCC_ClkInitStruct_18(D)->SYSCLKSource+0 S4 A32])
        (reg:SI 2 r2 [orig:115 _3 ] [115])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1064:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1067:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116])
                (const_int 8 [0x8])) [1 _4->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1067:52 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (and:SI (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 240 [0xf0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1067:38 90 {*arm_andsi3_insn}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1067:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [132])
                (const_int 8 [0x8])) [1 RCC_ClkInitStruct_18(D)->AHBCLKDivider+0 S4 A32])
        (reg:SI 2 r2 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1067:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [orig:119 _7 ] [119])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1070:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:119 _7 ] [119])
                (const_int 8 [0x8])) [1 _7->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1070:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 2 (set (reg:SI 2 r2 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 7168 [0x1c00]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1070:39 90 {*arm_andsi3_insn}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1070:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 12 [0xc])) [1 RCC_ClkInitStruct_18(D)->APB1CLKDivider+0 S4 A32])
        (reg:SI 2 r2 [orig:121 _9 ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1070:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 2 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1073:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 2 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122])
                (const_int 8 [0x8])) [1 _10->CFGR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1073:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 2 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (lshiftrt:SI (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1073:39 147 {*arm_shiftsi3}
     (nil))
(insn 28 27 29 2 (set (reg:SI 2 r2 [orig:125 _13 ] [125])
        (and:SI (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 7168 [0x1c00]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1073:39 90 {*arm_andsi3_insn}
     (nil))
(insn 29 28 30 2 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [11 RCC_ClkInitStruct+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1073:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [134])
                (const_int 16 [0x10])) [1 RCC_ClkInitStruct_18(D)->APB2CLKDivider+0 S4 A32])
        (reg:SI 2 r2 [orig:125 _13 ] [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1073:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 3 r3 [orig:126 _14 ] [126])
        (const_int 1073888256 [0x40023c00])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1076:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 2 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem/v:SI (reg/f:SI 3 r3 [orig:126 _14 ] [126]) [1 _14->ACR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1076:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 2 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (and:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (const_int 7 [0x7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1076:16 90 {*arm_andsi3_insn}
     (nil))
(insn 34 33 35 2 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (reg/f:SI 7 r7) [13 pFLatency+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1076:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 38 2 (set (mem:SI (reg/f:SI 3 r3 [135]) [1 *pFLatency_24(D)+0 S4 A32])
        (reg:SI 2 r2 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1076:14 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1077:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1077:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 38 35 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 45 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1077:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 45 39 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_NMI_IRQHandler (HAL_RCC_NMI_IRQHandler, funcdef_no=146, decl_uid=7015, cgraph_uid=151, symbol_order=150)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 7:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) Uu  (1) l {*arm_movqi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 24: point = 0, n_alt = -1
  BB 3
   Insn 15: point = 0, n_alt = 6
   Insn 14: point = 1, n_alt = 0
   Insn 13: point = 3, n_alt = 1
   Insn 12: point = 4, n_alt = 5
   Insn 11: point = 5, n_alt = -1
  BB 2
   Insn 9: point = 5, n_alt = -1
   Insn 8: point = 5, n_alt = 0
   Insn 7: point = 6, n_alt = 0
   Insn 6: point = 8, n_alt = 5
   Insn 5: point = 10, n_alt = 5
 r113: [9..10]
 r114: [7..8]
 r115: [5..6]
 r116: [0..4]
 r117: [2..3]
 r118: [0..1]
Compressing live ranges: from 11 to 10 - 90%
Ranges after the compression:
 r113: [8..9]
 r114: [6..7]
 r115: [4..5]
 r116: [0..3]
 r117: [2..3]
 r118: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=8, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=8, prev_offset=8)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 15
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
deleting insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.


HAL_RCC_NMI_IRQHandler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={2d} r1={2d} r2={3d,1u} r3={6d,4u} r7={1d,5u} r12={2d} r13={1d,6u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={2d,1u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 129{111d,18u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073887232 [0x40023800])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1087:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 12 [0xc])) [1 _1->CIR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1087:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 128 [0x80]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1087:7 90 {*arm_andsi3_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 128 [0x80]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1087:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 23)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1087:6 273 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              5 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1095:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 116 117 118
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 3 (parallel [
            (call (mem:SI (symbol_ref/i:SI ("HAL_RCC_CSSCallback") [flags 0x3]  <function_decl 000000000669c000 HAL_RCC_CSSCallback>) [0 HAL_RCC_CSSCallback S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1090:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 12 11 13 3 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1073887246 [0x4002380e])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1093:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 15 3 (set (reg:SI 2 r2 [117])
        (const_int 128 [0x80])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1093:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 13 23 3 (set (mem/v:QI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [0 *_4+0 S1 A8])
        (reg:QI 2 r2 [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1093:5 263 {*arm_movqi_insn}
     (nil))
;;  succ:       5 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1095:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1095:1
;;              3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1095:1
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 23 15 22 5 140 (nil) [1 uses])
(note 22 23 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 22 18 5 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1095:1 313 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 18 24 19 4 138 (nil) [0 uses])
(note 19 18 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 27 19 0 NOTE_INSN_DELETED)

;; Function HAL_RCC_CSSCallback (HAL_RCC_CSSCallback, funcdef_no=147, decl_uid=7017, cgraph_uid=152, symbol_order=151)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********


********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=4, prev_offset=0)
Can't eliminate 103 to 102 (offset=4, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=4, prev_offset=4)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


HAL_RCC_CSSCallback

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 7 [r7]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r7={1d,3u} r13={1d,3u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 31{24d,7u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1106:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c:1106:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 7 2 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c":1106:1 313 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 9 8 0 NOTE_INSN_DELETED)
