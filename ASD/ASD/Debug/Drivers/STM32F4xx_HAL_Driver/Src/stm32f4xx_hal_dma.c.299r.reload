
;; Function HAL_DMA_Init (HAL_DMA_Init, funcdef_no=134, decl_uid=7170, cgraph_uid=139, symbol_order=138)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 9:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 29:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 35:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 36:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 51:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 55:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 75
	 Choosing alt 1 in insn 75:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 76:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 85:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 91:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 92:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 99
	 Choosing alt 1 in insn 99:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 101
	 Choosing alt 1 in insn 101:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 102:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 104:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 108:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 109:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 111:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 112
	 Choosing alt 1 in insn 112:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 114
	 Choosing alt 1 in insn 114:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 120:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 121:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 122:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 124:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 125:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 126:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 127:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 128:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 132
	 Choosing alt 1 in insn 132:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 133:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 139:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 140:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 141:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 142
	 Choosing alt 1 in insn 142:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 143:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 144:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 145:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 149:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 156:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 158:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 159:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 162:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 169:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 171:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 172:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 175:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 176:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 177:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 180:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 181:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 184:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 185:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 188:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 189:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7 8 9
EBB 10 11 12 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 197: point = 0, n_alt = -1
   Insn 196: point = 0, n_alt = -2
   Insn 192: point = 1, n_alt = -2
  BB 13
   Insn 205: point = 4, n_alt = -1
   Insn 163: point = 4, n_alt = 1
   Insn 162: point = 5, n_alt = 8
   Insn 161: point = 6, n_alt = 0
   Insn 160: point = 8, n_alt = 1
   Insn 159: point = 9, n_alt = 5
   Insn 158: point = 10, n_alt = 7
   Insn 157: point = 11, n_alt = 1
   Insn 156: point = 12, n_alt = 5
  BB 6
   Insn 203: point = 13, n_alt = -1
   Insn 56: point = 13, n_alt = 1
   Insn 55: point = 14, n_alt = 8
   Insn 54: point = 15, n_alt = 0
   Insn 53: point = 17, n_alt = 1
   Insn 52: point = 18, n_alt = 5
   Insn 51: point = 19, n_alt = 7
   Insn 50: point = 20, n_alt = 1
   Insn 49: point = 21, n_alt = 5
  BB 3
   Insn 199: point = 22, n_alt = -1
   Insn 14: point = 22, n_alt = 1
  BB 14
   Insn 189: point = 23, n_alt = 1
   Insn 188: point = 24, n_alt = 8
   Insn 187: point = 25, n_alt = 0
   Insn 186: point = 27, n_alt = 1
   Insn 185: point = 28, n_alt = 5
   Insn 184: point = 29, n_alt = 7
   Insn 183: point = 30, n_alt = 1
   Insn 182: point = 31, n_alt = 5
   Insn 181: point = 32, n_alt = 7
   Insn 180: point = 33, n_alt = 5
   Insn 179: point = 34, n_alt = 0
   Insn 178: point = 36, n_alt = 1
   Insn 177: point = 37, n_alt = 5
   Insn 176: point = 39, n_alt = 5
   Insn 175: point = 40, n_alt = 7
   Insn 174: point = 41, n_alt = -2
   Insn 173: point = 42, n_alt = -1
   Insn 172: point = 42, n_alt = 5
   Insn 171: point = 42, n_alt = 7
   Insn 170: point = 43, n_alt = 5
   Insn 169: point = 44, n_alt = 5
   Insn 168: point = 46, n_alt = 5
  BB 12
   Insn 154: point = 47, n_alt = -1
   Insn 153: point = 47, n_alt = 0
   Insn 152: point = 48, n_alt = -2
   Insn 151: point = 50, n_alt = -2
   Insn 150: point = 51, n_alt = -1
   Insn 149: point = 51, n_alt = 5
  BB 11
   Insn 147: point = 51, n_alt = -1
   Insn 146: point = 51, n_alt = 0
   Insn 145: point = 52, n_alt = 5
   Insn 144: point = 54, n_alt = 5
   Insn 143: point = 55, n_alt = 7
   Insn 142: point = 56, n_alt = 1
   Insn 141: point = 58, n_alt = 5
   Insn 140: point = 59, n_alt = 5
   Insn 139: point = 61, n_alt = 5
  BB 10
   Insn 137: point = 62, n_alt = -1
   Insn 136: point = 62, n_alt = 0
   Insn 135: point = 63, n_alt = 5
   Insn 134: point = 65, n_alt = 5
   Insn 133: point = 66, n_alt = 7
   Insn 132: point = 67, n_alt = 1
   Insn 131: point = 69, n_alt = 5
   Insn 130: point = 70, n_alt = 5
   Insn 129: point = 72, n_alt = 5
   Insn 128: point = 73, n_alt = 7
   Insn 127: point = 74, n_alt = 2
   Insn 126: point = 76, n_alt = 5
   Insn 125: point = 77, n_alt = 7
   Insn 124: point = 78, n_alt = 5
   Insn 123: point = 80, n_alt = 5
   Insn 122: point = 82, n_alt = 5
   Insn 121: point = 83, n_alt = 7
   Insn 120: point = 84, n_alt = 5
   Insn 119: point = 85, n_alt = 5
   Insn 118: point = 87, n_alt = 5
  BB 9
   Insn 115: point = 88, n_alt = 7
   Insn 114: point = 89, n_alt = 1
   Insn 113: point = 91, n_alt = 5
   Insn 112: point = 92, n_alt = 1
   Insn 111: point = 94, n_alt = 5
   Insn 110: point = 96, n_alt = 5
   Insn 109: point = 97, n_alt = 5
   Insn 108: point = 99, n_alt = 5
  BB 8
   Insn 106: point = 100, n_alt = -1
   Insn 105: point = 100, n_alt = 0
   Insn 104: point = 101, n_alt = 5
   Insn 103: point = 103, n_alt = 5
   Insn 102: point = 104, n_alt = 7
   Insn 101: point = 105, n_alt = 1
   Insn 100: point = 107, n_alt = 5
   Insn 99: point = 108, n_alt = 1
   Insn 98: point = 110, n_alt = 5
   Insn 97: point = 112, n_alt = 5
   Insn 96: point = 113, n_alt = 1
   Insn 95: point = 115, n_alt = 5
   Insn 94: point = 117, n_alt = 5
   Insn 93: point = 118, n_alt = 1
   Insn 92: point = 120, n_alt = 5
   Insn 91: point = 122, n_alt = 5
   Insn 90: point = 123, n_alt = 1
   Insn 89: point = 125, n_alt = 5
   Insn 88: point = 127, n_alt = 5
   Insn 87: point = 128, n_alt = 1
   Insn 86: point = 130, n_alt = 5
   Insn 85: point = 132, n_alt = 5
   Insn 84: point = 133, n_alt = 1
   Insn 83: point = 135, n_alt = 5
   Insn 82: point = 137, n_alt = 5
   Insn 81: point = 138, n_alt = 1
   Insn 80: point = 140, n_alt = 5
   Insn 79: point = 142, n_alt = 5
   Insn 78: point = 143, n_alt = 5
   Insn 77: point = 145, n_alt = 5
   Insn 76: point = 146, n_alt = 7
   Insn 75: point = 147, n_alt = 1
   Insn 74: point = 149, n_alt = 5
   Insn 73: point = 150, n_alt = 5
   Insn 72: point = 151, n_alt = 7
   Insn 71: point = 152, n_alt = 5
   Insn 70: point = 154, n_alt = 5
   Insn 69: point = 156, n_alt = 5
  BB 7
   Insn 67: point = 157, n_alt = -1
   Insn 66: point = 157, n_alt = 0
   Insn 64: point = 158, n_alt = 0
   Insn 63: point = 160, n_alt = 5
   Insn 62: point = 162, n_alt = 5
   Insn 61: point = 164, n_alt = 5
  BB 4
   Insn 201: point = 165, n_alt = -1
   Insn 36: point = 165, n_alt = 7
   Insn 35: point = 166, n_alt = 2
   Insn 34: point = 168, n_alt = 5
   Insn 33: point = 170, n_alt = 5
   Insn 32: point = 171, n_alt = 5
   Insn 31: point = 173, n_alt = 5
   Insn 30: point = 175, n_alt = 5
   Insn 29: point = 176, n_alt = 8
   Insn 28: point = 177, n_alt = 0
   Insn 27: point = 179, n_alt = 1
   Insn 26: point = 180, n_alt = 5
   Insn 25: point = 181, n_alt = 8
   Insn 24: point = 182, n_alt = 0
   Insn 23: point = 184, n_alt = 1
   Insn 22: point = 185, n_alt = 5
  BB 2
   Insn 12: point = 186, n_alt = -1
   Insn 11: point = 186, n_alt = 0
   Insn 10: point = 187, n_alt = 5
   Insn 9: point = 188, n_alt = 7
   Insn 8: point = 188, n_alt = -1
   Insn 7: point = 188, n_alt = 7
   Insn 6: point = 189, n_alt = 1
   Insn 2: point = 190, n_alt = 7
  BB 5
   Insn 47: point = 190, n_alt = -1
   Insn 46: point = 190, n_alt = 0
   Insn 43: point = 191, n_alt = 0
   Insn 42: point = 193, n_alt = 5
   Insn 41: point = 194, n_alt = -2
   Insn 40: point = 195, n_alt = -1
 r114: [172..173]
 r115: [167..171]
 r116: [165..168]
 r117: [165..166]
 r118: [192..194]
 r119: [190..191]
 r120: [161..162]
 r121: [159..160]
 r122: [157..158]
 r123: [153..154]
 r124: [139..143]
 r125: [139..140]
 r126: [134..138]
 r127: [134..135]
 r128: [129..133]
 r129: [129..130]
 r130: [124..128]
 r131: [124..125]
 r132: [119..123]
 r133: [119..120]
 r134: [114..118]
 r135: [114..115]
 r136: [109..113]
 r137: [109..110]
 r138: [106..108]
 r139: [100..101]
 r140: [93..97]
 r141: [93..94]
 r142: [90..92]
 r143: [83..85]
 r144: [79..80]
 r145: [68..70]
 r146: [62..63]
 r147: [57..59]
 r148: [51..52]
 r149: [47..48]
 r150: [42..44]
 r151: [40..41]
 r152: [35..37]
 r153: [32..34]
 r154: [22..23] [13..13] [2..4]
 r155: [0..1]
 r156: [188..189]
 r157: [186..187]
 r159: [181..185]
 r160: [183..184]
 r161: [181..182]
 r162: [176..180]
 r163: [178..179]
 r164: [176..177]
 r165: [174..175]
 r166: [169..170]
 r167: [192..193]
 r168: [19..21]
 r169: [19..20]
 r170: [14..18]
 r171: [16..17]
 r172: [14..15]
 r173: [163..164]
 r174: [155..156]
 r175: [151..152]
 r176: [146..149]
 r177: [148..150]
 r178: [144..145]
 r179: [141..142]
 r180: [136..137]
 r181: [131..132]
 r182: [126..127]
 r183: [121..122]
 r184: [116..117]
 r185: [111..112]
 r186: [104..105]
 r187: [106..107]
 r188: [102..103]
 r189: [98..99]
 r190: [95..96]
 r191: [88..89]
 r192: [90..91]
 r193: [86..87]
 r194: [83..84]
 r195: [81..82]
 r196: [77..78]
 r197: [73..74]
 r198: [75..76]
 r199: [71..72]
 r200: [66..67]
 r201: [68..69]
 r202: [64..65]
 r203: [60..61]
 r204: [55..56]
 r205: [57..58]
 r206: [53..54]
 r207: [49..50]
 r208: [10..12]
 r209: [10..11]
 r210: [5..9]
 r211: [7..8]
 r212: [5..6]
 r213: [45..46]
 r214: [42..43]
 r215: [38..39]
 r216: [35..36]
 r217: [32..33]
 r218: [29..31]
 r219: [29..30]
 r220: [24..28]
 r221: [26..27]
 r222: [24..25]
Compressing live ranges: from 195 to 165 - 84%
Ranges after the compression:
 r114: [145..146]
 r115: [141..144]
 r116: [139..142]
 r117: [139..140]
 r118: [163..164]
 r119: [161..162]
 r120: [135..136]
 r121: [133..134]
 r122: [131..132]
 r123: [127..128]
 r124: [117..120]
 r125: [117..118]
 r126: [113..116]
 r127: [113..114]
 r128: [109..112]
 r129: [109..110]
 r130: [105..108]
 r131: [105..106]
 r132: [101..104]
 r133: [101..102]
 r134: [97..100]
 r135: [97..98]
 r136: [93..96]
 r137: [93..94]
 r138: [91..92]
 r139: [85..86]
 r140: [79..82]
 r141: [79..80]
 r142: [77..78]
 r143: [71..72]
 r144: [67..68]
 r145: [57..58]
 r146: [51..52]
 r147: [47..48]
 r148: [41..42]
 r149: [37..38]
 r150: [33..34]
 r151: [31..32]
 r152: [27..28]
 r153: [25..26]
 r154: [17..18] [10..10] [2..3]
 r155: [0..1]
 r156: [159..160]
 r157: [157..158]
 r159: [153..156]
 r160: [155..156]
 r161: [153..154]
 r162: [149..152]
 r163: [151..152]
 r164: [149..150]
 r165: [147..148]
 r166: [143..144]
 r167: [163..164]
 r168: [15..16]
 r169: [15..16]
 r170: [11..14]
 r171: [13..14]
 r172: [11..12]
 r173: [137..138]
 r174: [129..130]
 r175: [125..126]
 r176: [123..124]
 r177: [123..124]
 r178: [121..122]
 r179: [119..120]
 r180: [115..116]
 r181: [111..112]
 r182: [107..108]
 r183: [103..104]
 r184: [99..100]
 r185: [95..96]
 r186: [89..90]
 r187: [91..92]
 r188: [87..88]
 r189: [83..84]
 r190: [81..82]
 r191: [75..76]
 r192: [77..78]
 r193: [73..74]
 r194: [71..72]
 r195: [69..70]
 r196: [65..66]
 r197: [61..62]
 r198: [63..64]
 r199: [59..60]
 r200: [55..56]
 r201: [57..58]
 r202: [53..54]
 r203: [49..50]
 r204: [45..46]
 r205: [47..48]
 r206: [43..44]
 r207: [39..40]
 r208: [8..9]
 r209: [8..9]
 r210: [4..7]
 r211: [6..7]
 r212: [4..5]
 r213: [35..36]
 r214: [33..34]
 r215: [29..30]
 r216: [27..28]
 r217: [25..26]
 r218: [23..24]
 r219: [23..24]
 r220: [19..22]
 r221: [21..22]
 r222: [19..20]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 35
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 41
changing reg in insn 43
changing reg in insn 43
changing reg in insn 46
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 66
changing reg in insn 70
changing reg in insn 71
changing reg in insn 78
changing reg in insn 81
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 87
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 90
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 93
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 96
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 98
changing reg in insn 99
changing reg in insn 104
changing reg in insn 105
changing reg in insn 109
changing reg in insn 111
changing reg in insn 112
changing reg in insn 119
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 130
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 145
changing reg in insn 146
changing reg in insn 152
changing reg in insn 153
changing reg in insn 169
changing reg in insn 171
changing reg in insn 174
changing reg in insn 175
changing reg in insn 177
changing reg in insn 179
changing reg in insn 179
changing reg in insn 181
changing reg in insn 189
changing reg in insn 163
changing reg in insn 56
changing reg in insn 14
changing reg in insn 192
changing reg in insn 192
changing reg in insn 196
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 11
changing reg in insn 22
changing reg in insn 25
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 29
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 42
changing reg in insn 43
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 61
changing reg in insn 62
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 75
changing reg in insn 74
changing reg in insn 76
changing reg in insn 73
changing reg in insn 75
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 83
changing reg in insn 85
changing reg in insn 86
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 95
changing reg in insn 97
changing reg in insn 98
changing reg in insn 101
changing reg in insn 102
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 114
changing reg in insn 115
changing reg in insn 113
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 126
changing reg in insn 127
changing reg in insn 129
changing reg in insn 130
changing reg in insn 132
changing reg in insn 133
changing reg in insn 131
changing reg in insn 134
changing reg in insn 135
changing reg in insn 139
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 141
changing reg in insn 144
changing reg in insn 145
changing reg in insn 151
changing reg in insn 152
changing reg in insn 156
changing reg in insn 158
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 162
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 184
changing reg in insn 183
changing reg in insn 184
changing reg in insn 185
changing reg in insn 188
changing reg in insn 186
changing reg in insn 187
changing reg in insn 188
deleting insn with uid = 24.
deleting insn with uid = 28.
deleting insn with uid = 54.
deleting insn with uid = 152.
deleting insn with uid = 161.
deleting insn with uid = 187.
deleting insn with uid = 192.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 173.


HAL_DMA_Init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={8d,9u} r1={5d} r2={33d,28u,1e} r3={82d,74u} r7={1d,71u} r12={8d} r13={1d,19u} r14={5d} r15={4d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={11d,7u} r101={4d} r102={1d,1u} r104={4d} r105={4d} r106={4d} 
;;    total ref usage 673{463d,209u,1e} in 155{151 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 156 157
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":171:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [156])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":172:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":172:12 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 8 7 9 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006908d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":173:24 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":173:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":177:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [157])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":177:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":177:5 273 {arm_cond_branch}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 154
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 199 3 (set (reg:SI 3 r3 [orig:154 _44 ] [154])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":179:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 199 14 200 3 (set (pc)
        (label_ref 190)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":179:12 284 {*arm_jump}
     (nil)
 -> 190)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:179:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 154

(barrier 200 199 17)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114 115 116 117 159 160 161 162 163 164 165 166
(code_label 17 200 18 4 2 (nil) [1 uses])
(note 18 17 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 18 23 4 (set (reg/f:SI 3 r3 [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":203:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 25 4 (set (reg:SI 2 r2 [160])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":203:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 23 26 4 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [159])
                (const_int 53 [0x35])) [0 hdma_52(D)->State+0 S1 A8])
        (reg:QI 2 r2 [161])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":203:15 263 {*arm_movqi_insn}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 3 r3 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":206:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 29 4 (set (reg:SI 2 r2 [163])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":206:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 27 30 4 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [162])
                (const_int 52 [0x34])) [0 hdma_52(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [164])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":206:3 263 {*arm_movqi_insn}
     (nil))
(insn 30 29 31 4 (set (reg/f:SI 3 r3 [165])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (mem/f:SI (reg/f:SI 3 r3 [165]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 4 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (mem/v:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [1 _2->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 4 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (mem/f:SI (reg/f:SI 3 r3 [166]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 4 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (and:SI (reg:SI 2 r2 [orig:115 _3 ] [115])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 90 {*arm_andsi3_insn}
     (nil))
(insn 36 35 201 4 (set (mem/v:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [1 _4->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":209:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 201 36 202 4 (set (pc)
        (label_ref 59)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:8 284 {*arm_jump}
     (nil)
 -> 59)
;;  succ:       7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:212:8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 202 201 65)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 118 119 167
(code_label 65 202 39 5 5 (nil) [1 uses])
(note 39 65 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 40 39 41 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006908d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":215:9 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 41 40 42 5 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":215:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (reg:SI 3 r3 [167])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":215:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 46 5 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (minus:SI (reg:SI 2 r2 [orig:118 _6 ] [118])
            (reg:SI 3 r3 [167]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":215:23 45 {*arm_subsi3_insn}
     (nil))
(insn 46 43 47 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 5 [0x5]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":215:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":215:7 273 {arm_cond_branch}
     (nil)
 -> 59)
;;  succ:       6 (FALLTHRU)
;;              7 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 154 168 169 170 171 172
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:SI 3 r3 [168])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":218:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 6 (set (reg:SI 2 r2 [169])
        (const_int 32 [0x20])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":218:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [168])
                (const_int 84 [0x54])) [1 hdma_52(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [169])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":218:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 6 (set (reg/f:SI 3 r3 [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":221:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 55 6 (set (reg:SI 2 r2 [171])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":221:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 53 56 6 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [170])
                (const_int 53 [0x35])) [0 hdma_52(D)->State+0 S1 A8])
        (reg:QI 2 r2 [172])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":221:19 263 {*arm_movqi_insn}
     (nil))
(insn 56 55 203 6 (set (reg:SI 3 r3 [orig:154 _44 ] [154])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":223:14 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 203 56 204 6 (set (pc)
        (label_ref 190)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":223:14 284 {*arm_jump}
     (nil)
 -> 190)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:223:14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 154

(barrier 204 203 59)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5 (DFS_BACK)
;;              4 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:212:8
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 121 122 173
(code_label 59 204 60 7 4 (nil) [2 uses])
(note 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 7 (set (reg/f:SI 3 r3 [173])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 7 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (mem/f:SI (reg/f:SI 3 r3 [173]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 7 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem/v:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120]) [1 _8->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 66 7 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (and:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:29 90 {*arm_andsi3_insn}
     (nil))
(insn 66 64 67 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:44 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 67 66 68 7 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":212:44 273 {arm_cond_branch}
     (nil)
 -> 65)
;;  succ:       5
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg/f:SI 3 r3 [174])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":228:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 8 (set (reg/f:SI 3 r3 [orig:123 _11 ] [123])
        (mem/f:SI (reg/f:SI 3 r3 [174]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":228:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 8 (set (reg:SI 3 r3 [175])
        (mem/v:SI (reg/f:SI 3 r3 [orig:123 _11 ] [123]) [1 _11->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":228:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [175])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":228:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 8 (set (reg:SI 2 r2 [177])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":231:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 8 (set (reg:SI 3 r3 [176])
        (const_int -267354049 [0xfffffffff010803f])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":231:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 8 (set (reg:SI 3 r3 [176])
        (and:SI (reg:SI 3 r3 [176])
            (reg:SI 2 r2 [177]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":231:7 90 {*arm_andsi3_insn}
     (expr_list:REG_EQUAL (and:SI (reg:SI 2 r2 [177])
            (const_int -267354049 [0xfffffffff010803f]))
        (nil)))
(insn 76 75 77 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [176])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":231:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 8 (set (reg/f:SI 3 r3 [178])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 8 (set (reg:SI 2 r2 [orig:124 _12 ] [124])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [178])
                (const_int 4 [0x4])) [1 hdma_52(D)->Init.Channel+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 8 (set (reg/f:SI 3 r3 [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 8 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [179])
                (const_int 8 [0x8])) [1 hdma_52(D)->Init.Direction+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 81 80 82 8 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (ior:SI (reg:SI 2 r2 [orig:124 _12 ] [124])
            (reg:SI 3 r3 [orig:125 _13 ] [125]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:42 106 {*iorsi3_insn}
     (nil))
(insn 82 81 83 8 (set (reg/f:SI 3 r3 [180])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":238:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 8 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [180])
                (const_int 12 [0xc])) [1 hdma_52(D)->Init.PeriphInc+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":238:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 8 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (ior:SI (reg:SI 2 r2 [orig:126 _14 ] [126])
            (reg:SI 3 r3 [orig:127 _15 ] [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:72 106 {*iorsi3_insn}
     (nil))
(insn 85 84 86 8 (set (reg/f:SI 3 r3 [181])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":238:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 86 85 87 8 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [181])
                (const_int 16 [0x10])) [1 hdma_52(D)->Init.MemInc+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":238:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 8 (set (reg:SI 2 r2 [orig:130 _18 ] [130])
        (ior:SI (reg:SI 2 r2 [orig:128 _16 ] [128])
            (reg:SI 3 r3 [orig:129 _17 ] [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":238:42 106 {*iorsi3_insn}
     (nil))
(insn 88 87 89 8 (set (reg/f:SI 3 r3 [182])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":239:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 8 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [182])
                (const_int 20 [0x14])) [1 hdma_52(D)->Init.PeriphDataAlignment+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":239:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 8 (set (reg:SI 2 r2 [orig:132 _20 ] [132])
        (ior:SI (reg:SI 2 r2 [orig:130 _18 ] [130])
            (reg:SI 3 r3 [orig:131 _19 ] [131]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":238:72 106 {*iorsi3_insn}
     (nil))
(insn 91 90 92 8 (set (reg/f:SI 3 r3 [183])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":239:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 92 91 93 8 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [183])
                (const_int 24 [0x18])) [1 hdma_52(D)->Init.MemDataAlignment+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":239:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 94 8 (set (reg:SI 2 r2 [orig:134 _22 ] [134])
        (ior:SI (reg:SI 2 r2 [orig:132 _20 ] [132])
            (reg:SI 3 r3 [orig:133 _21 ] [133]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":239:42 106 {*iorsi3_insn}
     (nil))
(insn 94 93 95 8 (set (reg/f:SI 3 r3 [184])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":240:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 95 94 96 8 (set (reg:SI 3 r3 [orig:135 _23 ] [135])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [184])
                (const_int 28 [0x1c])) [1 hdma_52(D)->Init.Mode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":240:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 8 (set (reg:SI 2 r2 [orig:136 _24 ] [136])
        (ior:SI (reg:SI 2 r2 [orig:134 _22 ] [134])
            (reg:SI 3 r3 [orig:135 _23 ] [135]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":239:72 106 {*iorsi3_insn}
     (nil))
(insn 97 96 98 8 (set (reg/f:SI 3 r3 [185])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":240:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 8 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [185])
                (const_int 32 [0x20])) [1 hdma_52(D)->Init.Priority+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":240:54 749 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 100 8 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (ior:SI (reg:SI 3 r3 [orig:137 _25 ] [137])
            (reg:SI 2 r2 [orig:136 _24 ] [136]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":240:42 106 {*iorsi3_insn}
     (nil))
(insn 100 99 101 8 (set (reg:SI 2 r2 [187])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 8 (set (reg:SI 3 r3 [186])
        (ior:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (reg:SI 2 r2 [187]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:7 106 {*iorsi3_insn}
     (nil))
(insn 102 101 103 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [186])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":237:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 104 8 (set (reg/f:SI 3 r3 [188])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":243:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 104 103 105 8 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 36 [0x24])) [1 hdma_52(D)->Init.FIFOMode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":243:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 105 104 106 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 _27 ] [139])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":243:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 106 105 107 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":243:5 273 {arm_cond_branch}
     (nil)
 -> 116)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 140 141 142 189 190 191 192
(note 107 106 108 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 9 (set (reg/f:SI 3 r3 [189])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 109 108 110 9 (set (reg:SI 2 r2 [orig:140 _28 ] [140])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [189])
                (const_int 44 [0x2c])) [1 hdma_52(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 110 109 111 9 (set (reg/f:SI 3 r3 [190])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 111 110 112 9 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [190])
                (const_int 48 [0x30])) [1 hdma_52(D)->Init.PeriphBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 112 111 113 9 (set (reg:SI 3 r3 [orig:142 _30 ] [142])
        (ior:SI (reg:SI 3 r3 [orig:141 _29 ] [141])
            (reg:SI 2 r2 [orig:140 _28 ] [140]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:33 106 {*iorsi3_insn}
     (nil))
(insn 113 112 114 9 (set (reg:SI 2 r2 [192])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 114 113 115 9 (set (reg:SI 3 r3 [191])
        (ior:SI (reg:SI 3 r3 [orig:142 _30 ] [142])
            (reg:SI 2 r2 [192]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:9 106 {*iorsi3_insn}
     (nil))
(insn 115 114 116 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [191])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":246:9 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 143 144 145 146 193 194 195 196 197 198 199 200 201 202
(code_label 116 115 117 10 6 (nil) [1 uses])
(note 117 116 118 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 10 (set (reg/f:SI 3 r3 [193])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":250:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 119 118 120 10 (set (reg/f:SI 3 r3 [orig:143 _31 ] [143])
        (mem/f:SI (reg/f:SI 3 r3 [193]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":250:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 120 119 121 10 (set (reg:SI 2 r2 [194])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":250:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 121 120 122 10 (set (mem/v:SI (reg/f:SI 3 r3 [orig:143 _31 ] [143]) [1 _31->CR+0 S4 A32])
        (reg:SI 2 r2 [194])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":250:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 122 121 123 10 (set (reg/f:SI 3 r3 [195])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":253:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 123 122 124 10 (set (reg/f:SI 3 r3 [orig:144 _32 ] [144])
        (mem/f:SI (reg/f:SI 3 r3 [195]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":253:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 10 (set (reg:SI 3 r3 [196])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:144 _32 ] [144])
                (const_int 20 [0x14])) [1 _32->FCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":253:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 125 124 126 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [196])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":253:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 126 125 127 10 (set (reg:SI 3 r3 [198])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":256:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 127 126 128 10 (set (reg:SI 3 r3 [197])
        (and:SI (reg:SI 3 r3 [198])
            (const_int -8 [0xfffffffffffffff8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":256:7 90 {*arm_andsi3_insn}
     (nil))
(insn 128 127 129 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [197])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":256:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 129 128 130 10 (set (reg/f:SI 3 r3 [199])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":259:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 130 129 131 10 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [199])
                (const_int 36 [0x24])) [1 hdma_52(D)->Init.FIFOMode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":259:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 132 10 (set (reg:SI 2 r2 [201])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":259:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 10 (set (reg:SI 3 r3 [200])
        (ior:SI (reg:SI 3 r3 [orig:145 _33 ] [145])
            (reg:SI 2 r2 [201]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":259:7 106 {*iorsi3_insn}
     (nil))
(insn 133 132 134 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [200])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":259:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 134 133 135 10 (set (reg/f:SI 3 r3 [202])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":262:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 135 134 136 10 (set (reg:SI 3 r3 [orig:146 _34 ] [146])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [202])
                (const_int 36 [0x24])) [1 hdma_52(D)->Init.FIFOMode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":262:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 136 135 137 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:146 _34 ] [146])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":262:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 137 136 138 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":262:5 273 {arm_cond_branch}
     (nil)
 -> 166)
;;  succ:       11 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147 148 203 204 205 206
(note 138 137 139 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 11 (set (reg/f:SI 3 r3 [203])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":265:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 140 139 141 11 (set (reg:SI 3 r3 [orig:147 _35 ] [147])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [203])
                (const_int 40 [0x28])) [1 hdma_52(D)->Init.FIFOThreshold+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":265:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 141 140 142 11 (set (reg:SI 2 r2 [205])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":265:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 142 141 143 11 (set (reg:SI 3 r3 [204])
        (ior:SI (reg:SI 3 r3 [orig:147 _35 ] [147])
            (reg:SI 2 r2 [205]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":265:9 106 {*iorsi3_insn}
     (nil))
(insn 143 142 144 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])
        (reg:SI 3 r3 [204])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":265:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 144 143 145 11 (set (reg/f:SI 3 r3 [206])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":269:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 145 144 146 11 (set (reg:SI 3 r3 [orig:148 _36 ] [148])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [206])
                (const_int 44 [0x2c])) [1 hdma_52(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":269:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 146 145 147 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 _36 ] [148])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":269:8 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 147 146 148 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":269:8 273 {arm_cond_branch}
     (nil)
 -> 166)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 149 207
(note 148 147 149 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 12 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":271:11 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 150 149 151 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("DMA_CheckFifoParam") [flags 0x3]  <function_decl 0000000006912300 DMA_CheckFifoParam>) [0 DMA_CheckFifoParam S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":271:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 151 150 153 12 (set (reg:SI 3 r3 [207])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":271:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 153 151 154 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:149 _37 ] [149])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":271:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 154 153 155 12 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":271:10 273 {arm_cond_branch}
     (nil)
 -> 166)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 154 208 209 210 211 212
(note 155 154 156 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 13 (set (reg/f:SI 3 r3 [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":274:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 157 156 158 13 (set (reg:SI 2 r2 [209])
        (const_int 64 [0x40])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":274:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 158 157 159 13 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [208])
                (const_int 84 [0x54])) [1 hdma_52(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [209])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":274:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 159 158 160 13 (set (reg/f:SI 3 r3 [210])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":277:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 160 159 162 13 (set (reg:SI 2 r2 [211])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":277:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 162 160 163 13 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [210])
                (const_int 53 [0x35])) [0 hdma_52(D)->State+0 S1 A8])
        (reg:QI 2 r2 [212])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":277:21 263 {*arm_movqi_insn}
     (nil))
(insn 163 162 205 13 (set (reg:SI 3 r3 [orig:154 _44 ] [154])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":279:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 205 163 206 13 (set (pc)
        (label_ref 190)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":279:16 284 {*arm_jump}
     (nil)
 -> 190)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:279:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 154

(barrier 206 205 166)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       10
;;              11
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 150 151 152 153 154 213 214 215 216 217 218 219 220 221 222
(code_label 166 206 167 14 7 (nil) [3 uses])
(note 167 166 168 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 14 (set (reg/f:SI 3 r3 [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":285:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 169 168 170 14 (set (reg/f:SI 3 r3 [orig:150 _38 ] [150])
        (mem/f:SI (reg/f:SI 3 r3 [213]) [3 hdma_52(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":285:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 170 169 171 14 (set (reg:SI 2 r2 [214])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 tmp+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":285:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 171 170 172 14 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:150 _38 ] [150])
                (const_int 20 [0x14])) [1 _38->FCR+0 S4 A32])
        (reg:SI 2 r2 [214])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":285:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 172 171 173 14 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":289:32 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 173 172 174 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("DMA_CalcBaseAndBitshift") [flags 0x3]  <function_decl 0000000006912200 DMA_CalcBaseAndBitshift>) [0 DMA_CalcBaseAndBitshift S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":289:32 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 174 173 175 14 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":289:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 175 174 176 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [9 regs+0 S4 A32])
        (reg:SI 3 r3 [orig:151 _39 ] [151])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":289:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 176 175 177 14 (set (reg/f:SI 3 r3 [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":292:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 177 176 178 14 (set (reg:SI 3 r3 [orig:152 _40 ] [152])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [215])
                (const_int 92 [0x5c])) [1 hdma_52(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":292:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 178 177 179 14 (set (reg:SI 2 r2 [216])
        (const_int 63 [0x3f])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":292:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 179 178 180 14 (set (reg:SI 2 r2 [orig:153 _41 ] [153])
        (ashift:SI (reg:SI 2 r2 [216])
            (reg:SI 3 r3 [orig:152 _40 ] [152]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":292:22 147 {*arm_shiftsi3}
     (nil))
(insn 180 179 181 14 (set (reg/f:SI 3 r3 [217])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":292:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 181 180 182 14 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [217])
                (const_int 8 [0x8])) [1 regs_71->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:153 _41 ] [153])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":292:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 182 181 183 14 (set (reg/f:SI 3 r3 [218])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":295:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 183 182 184 14 (set (reg:SI 2 r2 [219])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":295:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 184 183 185 14 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [218])
                (const_int 84 [0x54])) [1 hdma_52(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [219])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":295:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 185 184 186 14 (set (reg/f:SI 3 r3 [220])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":298:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 186 185 188 14 (set (reg:SI 2 r2 [221])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":298:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 188 186 189 14 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [220])
                (const_int 53 [0x35])) [0 hdma_52(D)->State+0 S1 A8])
        (reg:QI 2 r2 [222])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":298:15 263 {*arm_movqi_insn}
     (nil))
(insn 189 188 190 14 (set (reg:SI 3 r3 [orig:154 _44 ] [154])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":300:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       15 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:300:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 154

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:300:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:179:12
;;              6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:223:14
;;              13 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:279:16
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 154
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 154
;; lr  def 	 0 [r0] 155
(code_label 190 189 191 15 3 (nil) [3 uses])
(note 191 190 196 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 196 191 197 15 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:155 <retval> ] [155])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":301:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 197 196 208 15 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":301:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 208 197 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_DeInit (HAL_DMA_DeInit, funcdef_no=135, decl_uid=7172, cgraph_uid=140, symbol_order=139)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 17:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 32:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 33:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 37:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 45:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 49:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 67:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 71:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 73:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 76:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 79:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 80:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 85:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 88:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 92:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 93:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 96:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 105: point = 0, n_alt = -1
   Insn 104: point = 0, n_alt = -2
   Insn 100: point = 1, n_alt = -2
  BB 5
   Insn 109: point = 4, n_alt = -1
   Insn 22: point = 4, n_alt = 1
  BB 3
   Insn 107: point = 5, n_alt = -1
   Insn 10: point = 5, n_alt = 1
  BB 6
   Insn 97: point = 6, n_alt = 1
   Insn 96: point = 7, n_alt = 8
   Insn 95: point = 8, n_alt = 0
   Insn 94: point = 10, n_alt = 1
   Insn 93: point = 11, n_alt = 5
   Insn 92: point = 12, n_alt = 8
   Insn 91: point = 13, n_alt = 0
   Insn 90: point = 15, n_alt = 1
   Insn 89: point = 16, n_alt = 5
   Insn 88: point = 17, n_alt = 7
   Insn 87: point = 18, n_alt = 1
   Insn 86: point = 19, n_alt = 5
   Insn 85: point = 20, n_alt = 7
   Insn 84: point = 21, n_alt = 5
   Insn 83: point = 22, n_alt = 0
   Insn 82: point = 24, n_alt = 1
   Insn 81: point = 25, n_alt = 5
   Insn 80: point = 27, n_alt = 5
   Insn 79: point = 28, n_alt = 7
   Insn 78: point = 29, n_alt = 1
   Insn 77: point = 30, n_alt = 5
   Insn 76: point = 31, n_alt = 7
   Insn 75: point = 32, n_alt = 1
   Insn 74: point = 33, n_alt = 5
   Insn 73: point = 34, n_alt = 7
   Insn 72: point = 35, n_alt = 1
   Insn 71: point = 36, n_alt = 5
   Insn 70: point = 37, n_alt = 7
   Insn 69: point = 38, n_alt = 1
   Insn 68: point = 39, n_alt = 5
   Insn 67: point = 40, n_alt = 7
   Insn 66: point = 41, n_alt = 1
   Insn 65: point = 42, n_alt = 5
   Insn 64: point = 43, n_alt = 7
   Insn 63: point = 44, n_alt = 1
   Insn 62: point = 45, n_alt = 5
   Insn 61: point = 46, n_alt = 7
   Insn 60: point = 47, n_alt = -2
   Insn 59: point = 48, n_alt = -1
   Insn 58: point = 48, n_alt = 5
   Insn 57: point = 48, n_alt = 7
   Insn 56: point = 49, n_alt = 1
   Insn 55: point = 50, n_alt = 5
   Insn 54: point = 52, n_alt = 5
   Insn 53: point = 53, n_alt = 7
   Insn 52: point = 54, n_alt = 1
   Insn 51: point = 55, n_alt = 5
   Insn 50: point = 57, n_alt = 5
   Insn 49: point = 58, n_alt = 7
   Insn 48: point = 59, n_alt = 1
   Insn 47: point = 60, n_alt = 5
   Insn 46: point = 62, n_alt = 5
   Insn 45: point = 63, n_alt = 7
   Insn 44: point = 64, n_alt = 1
   Insn 43: point = 65, n_alt = 5
   Insn 42: point = 67, n_alt = 5
   Insn 41: point = 68, n_alt = 7
   Insn 40: point = 69, n_alt = 1
   Insn 39: point = 70, n_alt = 5
   Insn 38: point = 72, n_alt = 5
   Insn 37: point = 73, n_alt = 7
   Insn 36: point = 74, n_alt = 1
   Insn 35: point = 75, n_alt = 5
   Insn 34: point = 77, n_alt = 5
   Insn 33: point = 78, n_alt = 7
   Insn 32: point = 79, n_alt = 2
   Insn 31: point = 81, n_alt = 5
   Insn 30: point = 83, n_alt = 5
   Insn 29: point = 84, n_alt = 5
   Insn 28: point = 86, n_alt = 5
   Insn 27: point = 88, n_alt = 5
  BB 4
   Insn 20: point = 89, n_alt = -1
   Insn 19: point = 89, n_alt = 0
   Insn 18: point = 90, n_alt = 0
   Insn 17: point = 92, n_alt = 7
   Insn 15: point = 94, n_alt = 5
  BB 2
   Insn 8: point = 95, n_alt = -1
   Insn 7: point = 95, n_alt = 0
   Insn 6: point = 96, n_alt = 5
   Insn 2: point = 97, n_alt = 7
 r113: [89..90]
 r114: [85..86]
 r115: [80..84]
 r116: [78..81]
 r117: [78..79]
 r118: [73..75]
 r119: [68..70]
 r120: [63..65]
 r121: [58..60]
 r122: [53..55]
 r123: [48..50]
 r124: [46..47]
 r125: [23..25]
 r126: [20..22]
 r127: [2..6]
 r128: [0..1]
 r129: [95..96]
 r130: [93..94]
 r132: [91..92]
 r133: [87..88]
 r134: [82..83]
 r135: [76..77]
 r136: [73..74]
 r137: [71..72]
 r138: [68..69]
 r139: [66..67]
 r140: [63..64]
 r141: [61..62]
 r142: [58..59]
 r143: [56..57]
 r144: [53..54]
 r145: [51..52]
 r146: [48..49]
 r147: [43..45]
 r148: [43..44]
 r149: [40..42]
 r150: [40..41]
 r151: [37..39]
 r152: [37..38]
 r153: [34..36]
 r154: [34..35]
 r155: [31..33]
 r156: [31..32]
 r157: [28..30]
 r158: [28..29]
 r159: [26..27]
 r160: [23..24]
 r161: [20..21]
 r162: [17..19]
 r163: [17..18]
 r164: [12..16]
 r165: [14..15]
 r166: [12..13]
 r167: [7..11]
 r168: [9..10]
 r169: [7..8]
Compressing live ranges: from 97 to 76 - 78%
Ranges after the compression:
 r113: [68..69]
 r114: [64..65]
 r115: [60..63]
 r116: [58..61]
 r117: [58..59]
 r118: [54..55]
 r119: [50..51]
 r120: [46..47]
 r121: [42..43]
 r122: [38..39]
 r123: [34..35]
 r124: [32..33]
 r125: [16..17]
 r126: [14..15]
 r127: [2..3]
 r128: [0..1]
 r129: [74..75]
 r130: [72..73]
 r132: [70..71]
 r133: [66..67]
 r134: [62..63]
 r135: [56..57]
 r136: [54..55]
 r137: [52..53]
 r138: [50..51]
 r139: [48..49]
 r140: [46..47]
 r141: [44..45]
 r142: [42..43]
 r143: [40..41]
 r144: [38..39]
 r145: [36..37]
 r146: [34..35]
 r147: [30..31]
 r148: [30..31]
 r149: [28..29]
 r150: [28..29]
 r151: [26..27]
 r152: [26..27]
 r153: [24..25]
 r154: [24..25]
 r155: [22..23]
 r156: [22..23]
 r157: [20..21]
 r158: [20..21]
 r159: [18..19]
 r160: [16..17]
 r161: [14..15]
 r162: [12..13]
 r163: [12..13]
 r164: [8..11]
 r165: [10..11]
 r166: [8..9]
 r167: [4..7]
 r168: [6..7]
 r169: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 18
changing reg in insn 19
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 32
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 37
changing reg in insn 39
changing reg in insn 41
changing reg in insn 43
changing reg in insn 45
changing reg in insn 47
changing reg in insn 49
changing reg in insn 51
changing reg in insn 53
changing reg in insn 55
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 81
changing reg in insn 83
changing reg in insn 83
changing reg in insn 85
changing reg in insn 97
changing reg in insn 22
changing reg in insn 10
changing reg in insn 100
changing reg in insn 100
changing reg in insn 104
changing reg in insn 6
changing reg in insn 7
changing reg in insn 15
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 79
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 88
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 92
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 96
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
deleting insn with uid = 91.
deleting insn with uid = 95.
deleting insn with uid = 100.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 59.


HAL_DMA_DeInit

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={2d} r2={21d,19u} r3={38d,34u} r7={1d,31u} r12={2d} r13={1d,8u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 264{164d,100u,0e} in 84{83 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":310:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":314:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [129])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":314:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":314:5 273 {arm_cond_branch}
     (nil)
 -> 13)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 127
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 107 3 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":316:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 107 10 108 3 (set (pc)
        (label_ref 98)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":316:12 284 {*arm_jump}
     (nil)
 -> 98)
;;  succ:       7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:316:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 127

(barrier 108 107 13)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 130 132
(code_label 13 108 14 4 11 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 4 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":320:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 15 18 4 (set (reg:QI 3 r3 [132])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [130])
                (const_int 53 [0x35])) [0 hdma_17(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":320:10 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 4 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (reg:QI 3 r3 [132]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":320:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 19 18 20 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":320:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":320:5 273 {arm_cond_branch}
     (nil)
 -> 25)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 127
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 109 5 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":323:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 109 22 110 5 (set (pc)
        (label_ref 98)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":323:12 284 {*arm_jump}
     (nil)
 -> 98)
;;  succ:       7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:323:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 127

(barrier 110 109 25)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 114 115 116 117 118 119 120 121 122 123 124 125 126 127 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169
(code_label 25 110 26 6 13 (nil) [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 6 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (mem/f:SI (reg/f:SI 3 r3 [133]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 6 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (mem/v:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [1 _2->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 6 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 6 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (mem/f:SI (reg/f:SI 3 r3 [134]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 6 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (and:SI (reg:SI 2 r2 [orig:115 _3 ] [115])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 90 {*arm_andsi3_insn}
     (nil))
(insn 33 32 34 6 (set (mem/v:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [1 _4->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":330:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":333:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 6 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (mem/f:SI (reg/f:SI 3 r3 [135]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":333:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 6 (set (reg:SI 2 r2 [136])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":333:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 6 (set (mem/v:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118]) [1 _6->CR+0 S4 A32])
        (reg:SI 2 r2 [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":333:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":336:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 3 r3 [orig:119 _7 ] [119])
        (mem/f:SI (reg/f:SI 3 r3 [137]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":336:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 6 (set (reg:SI 2 r2 [138])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":336:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:119 _7 ] [119])
                (const_int 4 [0x4])) [1 _7->NDTR+0 S4 A32])
        (reg:SI 2 r2 [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":336:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":339:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (mem/f:SI (reg/f:SI 3 r3 [139]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":339:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 6 (set (reg:SI 2 r2 [140])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":339:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120])
                (const_int 8 [0x8])) [1 _8->PAR+0 S4 A32])
        (reg:SI 2 r2 [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":339:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 6 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":342:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 6 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (mem/f:SI (reg/f:SI 3 r3 [141]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":342:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 6 (set (reg:SI 2 r2 [142])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":342:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 12 [0xc])) [1 _9->M0AR+0 S4 A32])
        (reg:SI 2 r2 [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":342:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 6 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":345:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 6 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (mem/f:SI (reg/f:SI 3 r3 [143]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":345:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 52 51 53 6 (set (reg:SI 2 r2 [144])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":345:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122])
                (const_int 16 [0x10])) [1 _10->M1AR+0 S4 A32])
        (reg:SI 2 r2 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":345:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 6 (set (reg/f:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":348:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 6 (set (reg/f:SI 3 r3 [orig:123 _11 ] [123])
        (mem/f:SI (reg/f:SI 3 r3 [145]) [3 hdma_17(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":348:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 6 (set (reg:SI 2 r2 [146])
        (const_int 33 [0x21])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":348:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:123 _11 ] [123])
                (const_int 20 [0x14])) [1 _11->FCR+0 S4 A32])
        (reg:SI 2 r2 [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":348:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 6 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":351:32 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 59 58 60 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("DMA_CalcBaseAndBitshift") [flags 0x3]  <function_decl 0000000006912200 DMA_CalcBaseAndBitshift>) [0 DMA_CalcBaseAndBitshift S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":351:32 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 60 59 61 6 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":351:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [9 regs+0 S4 A32])
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":351:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 6 (set (reg/f:SI 3 r3 [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":354:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 6 (set (reg:SI 2 r2 [148])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":354:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 60 [0x3c])) [6 hdma_17(D)->XferCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [148])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":354:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 6 (set (reg/f:SI 3 r3 [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":355:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 6 (set (reg:SI 2 r2 [150])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":355:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [149])
                (const_int 64 [0x40])) [6 hdma_17(D)->XferHalfCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":355:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 6 (set (reg/f:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":356:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 6 (set (reg:SI 2 r2 [152])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":356:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [151])
                (const_int 68 [0x44])) [6 hdma_17(D)->XferM1CpltCallback+0 S4 A32])
        (reg:SI 2 r2 [152])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":356:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 6 (set (reg/f:SI 3 r3 [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":357:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 6 (set (reg:SI 2 r2 [154])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":357:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [153])
                (const_int 72 [0x48])) [6 hdma_17(D)->XferM1HalfCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [154])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":357:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 6 (set (reg/f:SI 3 r3 [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":358:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 6 (set (reg:SI 2 r2 [156])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":358:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 76 [0x4c])) [6 hdma_17(D)->XferErrorCallback+0 S4 A32])
        (reg:SI 2 r2 [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":358:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 6 (set (reg/f:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":359:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 6 (set (reg:SI 2 r2 [158])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":359:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [157])
                (const_int 80 [0x50])) [6 hdma_17(D)->XferAbortCallback+0 S4 A32])
        (reg:SI 2 r2 [158])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":359:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 6 (set (reg/f:SI 3 r3 [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":362:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 81 80 82 6 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [159])
                (const_int 92 [0x5c])) [1 hdma_17(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":362:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 82 81 83 6 (set (reg:SI 2 r2 [160])
        (const_int 63 [0x3f])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":362:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 6 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (ashift:SI (reg:SI 2 r2 [160])
            (reg:SI 3 r3 [orig:125 _13 ] [125]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":362:22 147 {*arm_shiftsi3}
     (nil))
(insn 84 83 85 6 (set (reg/f:SI 3 r3 [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":362:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [161])
                (const_int 8 [0x8])) [1 regs_27->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:126 _14 ] [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":362:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 86 85 87 6 (set (reg/f:SI 3 r3 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":365:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 6 (set (reg:SI 2 r2 [163])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":365:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 89 6 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [162])
                (const_int 84 [0x54])) [1 hdma_17(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [163])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":365:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 6 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":368:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 92 6 (set (reg:SI 2 r2 [165])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":368:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 92 90 93 6 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [164])
                (const_int 53 [0x35])) [0 hdma_17(D)->State+0 S1 A8])
        (reg:QI 2 r2 [166])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":368:15 263 {*arm_movqi_insn}
     (nil))
(insn 93 92 94 6 (set (reg/f:SI 3 r3 [167])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":371:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 96 6 (set (reg:SI 2 r2 [168])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":371:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 94 97 6 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [167])
                (const_int 52 [0x34])) [0 hdma_17(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [169])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":371:3 263 {*arm_movqi_insn}
     (nil))
(insn 97 96 98 6 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":373:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       7 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:373:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 127

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:373:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:316:12
;;              5 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:323:12
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 127
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 127
;; lr  def 	 0 [r0] 128
(code_label 98 97 99 7 12 (nil) [2 uses])
(note 99 98 104 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 104 99 105 7 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:128 <retval> ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":374:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 105 104 111 7 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":374:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 111 105 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_Start (HAL_DMA_Start, funcdef_no=136, decl_uid=7177, cgraph_uid=141, symbol_order=140)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 39:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 51:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 59:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 62:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 73: point = 0, n_alt = -1
   Insn 72: point = 0, n_alt = -2
   Insn 68: point = 1, n_alt = -2
  BB 3
   Insn 75: point = 4, n_alt = -1
   Insn 17: point = 4, n_alt = 1
  BB 7
   Insn 65: point = 5, n_alt = 1
  BB 5
   Insn 77: point = 6, n_alt = -1
   Insn 51: point = 6, n_alt = 7
   Insn 50: point = 7, n_alt = 0
   Insn 49: point = 9, n_alt = 5
   Insn 48: point = 11, n_alt = 5
   Insn 47: point = 12, n_alt = 5
   Insn 46: point = 14, n_alt = 5
   Insn 45: point = 16, n_alt = 5
   Insn 44: point = 17, n_alt = -1
   Insn 43: point = 17, n_alt = 5
   Insn 42: point = 17, n_alt = 5
   Insn 41: point = 17, n_alt = 5
   Insn 40: point = 17, n_alt = 5
   Insn 39: point = 17, n_alt = 7
   Insn 38: point = 18, n_alt = 1
   Insn 37: point = 19, n_alt = 5
   Insn 36: point = 20, n_alt = 8
   Insn 35: point = 21, n_alt = 0
   Insn 34: point = 23, n_alt = 1
   Insn 33: point = 24, n_alt = 5
  BB 6
   Insn 62: point = 25, n_alt = 6
   Insn 61: point = 26, n_alt = 0
   Insn 60: point = 28, n_alt = 1
   Insn 59: point = 29, n_alt = 8
   Insn 58: point = 30, n_alt = 0
   Insn 57: point = 32, n_alt = 1
   Insn 56: point = 33, n_alt = 5
  BB 4
   Insn 31: point = 34, n_alt = -1
   Insn 30: point = 34, n_alt = 0
   Insn 29: point = 35, n_alt = 0
   Insn 28: point = 37, n_alt = 7
   Insn 26: point = 39, n_alt = 5
   Insn 25: point = 40, n_alt = 8
   Insn 24: point = 41, n_alt = 0
   Insn 23: point = 43, n_alt = 1
   Insn 22: point = 44, n_alt = 5
  BB 2
   Insn 15: point = 45, n_alt = -1
   Insn 14: point = 45, n_alt = 0
   Insn 13: point = 46, n_alt = 1
   Insn 12: point = 48, n_alt = 5
   Insn 11: point = 49, n_alt = 6
   Insn 10: point = 50, n_alt = 0
   Insn 9: point = 52, n_alt = 1
   Insn 5: point = 53, n_alt = 7
   Insn 4: point = 53, n_alt = 7
   Insn 3: point = 53, n_alt = 7
   Insn 2: point = 53, n_alt = 7
 r113: [45..46]
 r114: [34..35]
 r115: [13..14]
 r116: [8..12]
 r117: [6..9]
 r118: [6..7]
 r119: [2..5]
 r120: [0..1]
 r121: [51..52]
 r122: [49..50]
 r123: [47..48]
 r124: [40..44]
 r125: [42..43]
 r126: [40..41]
 r127: [38..39]
 r129: [36..37]
 r130: [20..24]
 r131: [22..23]
 r132: [20..21]
 r133: [17..19]
 r134: [17..18]
 r135: [15..16]
 r136: [10..11]
 r137: [29..33]
 r138: [31..32]
 r139: [29..30]
 r140: [27..28]
 r141: [25..26]
Compressing live ranges: from 53 to 46 - 86%
Ranges after the compression:
 r113: [38..39]
 r114: [28..29]
 r115: [10..11]
 r116: [6..9]
 r117: [4..7]
 r118: [4..5]
 r119: [2..3]
 r120: [0..1]
 r121: [44..45]
 r122: [42..43]
 r123: [40..41]
 r124: [34..37]
 r125: [36..37]
 r126: [34..35]
 r127: [32..33]
 r129: [30..31]
 r130: [16..19]
 r131: [18..19]
 r132: [16..17]
 r133: [14..15]
 r134: [14..15]
 r135: [12..13]
 r136: [8..9]
 r137: [24..27]
 r138: [26..27]
 r139: [24..25]
 r140: [22..23]
 r141: [20..21]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 29
changing reg in insn 30
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 50
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 65
changing reg in insn 17
changing reg in insn 68
changing reg in insn 68
changing reg in insn 72
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 22
changing reg in insn 25
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 36
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 56
changing reg in insn 59
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
deleting insn with uid = 10.
deleting insn with uid = 24.
deleting insn with uid = 35.
deleting insn with uid = 58.
deleting insn with uid = 61.
deleting insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_Start

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={9d,8u} r3={20d,18u} r7={1d,27u} r12={2d} r13={1d,9u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 206{135d,71u,0e} in 47{46 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 121 122 123
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":408:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])
        (reg:SI 1 r1 [ SrcAddress ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":408:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])
        (reg:SI 2 r2 [ DstAddress ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":408:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (reg/f:SI 7 r7) [1 DataLength+0 S4 A32])
        (reg:SI 3 r3 [ DataLength ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":408:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 11 2 (set (reg:SI 3 r3 [121])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":409:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 9 12 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":409:21 263 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [123])
                    (const_int 52 [0x34])) [0 hdma_13(D)->Lock+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 273 {arm_cond_branch}
     (nil)
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 119
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 75 3 (set (reg:SI 3 r3 [orig:119 _8 ] [119])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 75 17 76 3 (set (pc)
        (label_ref 66)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 284 {*arm_jump}
     (nil)
 -> 66)
;;  succ:       8 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:415:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119

(barrier 76 75 20)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 124 125 126 127 129
(code_label 20 76 21 4 15 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 25 4 (set (reg:SI 2 r2 [125])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 23 26 4 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [124])
                (const_int 52 [0x34])) [0 hdma_13(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":415:3 263 {*arm_movqi_insn}
     (nil))
(insn 26 25 28 4 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":417:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 26 29 4 (set (reg:QI 3 r3 [129])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [127])
                (const_int 53 [0x35])) [0 hdma_13(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":417:33 263 {*arm_movqi_insn}
     (nil))
(insn 29 28 30 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":417:33 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 30 29 31 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":417:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":417:5 273 {arm_cond_branch}
     (nil)
 -> 54)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 115 116 117 118 130 131 132 133 134 135 136
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":420:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 36 5 (set (reg:SI 2 r2 [131])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":420:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 34 37 5 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [130])
                (const_int 53 [0x35])) [0 hdma_13(D)->State+0 S1 A8])
        (reg:QI 2 r2 [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":420:17 263 {*arm_movqi_insn}
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":423:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 5 (set (reg:SI 2 r2 [134])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":423:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 84 [0x54])) [1 hdma_13(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":423:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 5 (set (reg:SI 3 r3)
        (mem/c:SI (reg/f:SI 7 r7) [1 DataLength+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":426:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 5 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":426:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":426:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":426:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 44 43 45 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("DMA_SetConfig") [flags 0x3]  <function_decl 0000000006912100 DMA_SetConfig>) [0 DMA_SetConfig S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":426:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(insn 45 44 46 5 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 5 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (mem/f:SI (reg/f:SI 3 r3 [135]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 47 46 48 5 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (mem/v:SI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [1 _3->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 5 (set (reg/f:SI 3 r3 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 5 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (mem/f:SI (reg/f:SI 3 r3 [136]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 5 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (ior:SI (reg:SI 2 r2 [orig:116 _4 ] [116])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 106 {*iorsi3_insn}
     (nil))
(insn 51 50 77 5 (set (mem/v:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117]) [1 _5->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":429:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 77 51 78 5 (set (pc)
        (label_ref 63)) 284 {*arm_jump}
     (nil)
 -> 63)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 78 77 54)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137 138 139 140 141
(code_label 54 78 55 6 17 (nil) [1 uses])
(note 55 54 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":434:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 59 6 (set (reg:SI 2 r2 [138])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":434:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 57 60 6 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 52 [0x34])) [0 hdma_13(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [139])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":434:5 263 {*arm_movqi_insn}
     (nil))
(insn 60 59 62 6 (set (reg:SI 3 r3 [140])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":437:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 60 63 6 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [141])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":437:12 263 {*arm_movqi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 119
(code_label 63 62 64 7 18 (nil) [1 uses])
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (reg:SI 3 r3 [orig:119 _8 ] [119])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 23 [0x17])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":439:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       8 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:439:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:439:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:415:3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 119
;; lr  def 	 0 [r0] 120
(code_label 66 65 67 8 16 (nil) [1 uses])
(note 67 66 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 67 73 8 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:120 <retval> ] [120])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":440:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 79 8 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":440:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 79 73 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_Start_IT (HAL_DMA_Start_IT, funcdef_no=137, decl_uid=7182, cgraph_uid=142, symbol_order=141)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 28:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 31:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 39:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 60:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 81:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 89:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 92:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 7
EBB 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 103: point = 0, n_alt = -1
   Insn 102: point = 0, n_alt = -2
   Insn 98: point = 1, n_alt = -2
  BB 3
   Insn 105: point = 4, n_alt = -1
   Insn 20: point = 4, n_alt = 1
  BB 9
   Insn 95: point = 5, n_alt = 1
  BB 7
   Insn 107: point = 6, n_alt = -1
   Insn 81: point = 6, n_alt = 7
   Insn 80: point = 7, n_alt = 0
   Insn 79: point = 9, n_alt = 5
   Insn 78: point = 11, n_alt = 5
   Insn 77: point = 12, n_alt = 5
   Insn 76: point = 14, n_alt = 5
   Insn 75: point = 16, n_alt = 5
  BB 6
   Insn 72: point = 17, n_alt = 7
   Insn 71: point = 18, n_alt = 0
   Insn 70: point = 20, n_alt = 5
   Insn 69: point = 22, n_alt = 5
   Insn 68: point = 23, n_alt = 5
   Insn 67: point = 25, n_alt = 5
   Insn 66: point = 27, n_alt = 5
  BB 5
   Insn 64: point = 28, n_alt = -1
   Insn 63: point = 28, n_alt = 0
   Insn 62: point = 29, n_alt = 5
   Insn 61: point = 31, n_alt = 5
   Insn 60: point = 32, n_alt = 7
   Insn 59: point = 33, n_alt = 0
   Insn 58: point = 35, n_alt = 5
   Insn 57: point = 37, n_alt = 5
   Insn 56: point = 38, n_alt = 5
   Insn 55: point = 40, n_alt = 5
   Insn 54: point = 42, n_alt = 5
   Insn 53: point = 43, n_alt = 7
   Insn 52: point = 44, n_alt = 5
   Insn 51: point = 45, n_alt = 0
   Insn 50: point = 47, n_alt = 1
   Insn 49: point = 48, n_alt = 5
   Insn 48: point = 50, n_alt = 5
   Insn 47: point = 51, n_alt = -1
   Insn 46: point = 51, n_alt = 5
   Insn 45: point = 51, n_alt = 5
   Insn 44: point = 51, n_alt = 5
   Insn 43: point = 51, n_alt = 5
   Insn 42: point = 51, n_alt = 7
   Insn 41: point = 52, n_alt = 1
   Insn 40: point = 53, n_alt = 5
   Insn 39: point = 54, n_alt = 8
   Insn 38: point = 55, n_alt = 0
   Insn 37: point = 57, n_alt = 1
   Insn 36: point = 58, n_alt = 5
  BB 8
   Insn 92: point = 59, n_alt = 6
   Insn 91: point = 60, n_alt = 0
   Insn 90: point = 62, n_alt = 1
   Insn 89: point = 63, n_alt = 8
   Insn 88: point = 64, n_alt = 0
   Insn 87: point = 66, n_alt = 1
   Insn 86: point = 67, n_alt = 5
  BB 4
   Insn 34: point = 68, n_alt = -1
   Insn 33: point = 68, n_alt = 0
   Insn 32: point = 69, n_alt = 0
   Insn 31: point = 71, n_alt = 7
   Insn 29: point = 73, n_alt = 5
   Insn 28: point = 74, n_alt = 8
   Insn 27: point = 75, n_alt = 0
   Insn 26: point = 77, n_alt = 1
   Insn 25: point = 78, n_alt = 5
  BB 2
   Insn 18: point = 79, n_alt = -1
   Insn 17: point = 79, n_alt = 0
   Insn 16: point = 80, n_alt = 1
   Insn 15: point = 82, n_alt = 5
   Insn 14: point = 83, n_alt = 7
   Insn 13: point = 84, n_alt = 5
   Insn 12: point = 86, n_alt = 5
   Insn 11: point = 87, n_alt = 6
   Insn 10: point = 88, n_alt = 0
   Insn 9: point = 90, n_alt = 1
   Insn 5: point = 91, n_alt = 7
   Insn 4: point = 91, n_alt = 7
   Insn 3: point = 91, n_alt = 7
   Insn 2: point = 91, n_alt = 7
 r113: [83..84]
 r114: [79..80]
 r115: [68..69]
 r116: [46..48]
 r117: [43..45]
 r118: [39..40]
 r119: [34..38]
 r120: [32..35]
 r121: [32..33]
 r122: [28..29]
 r123: [24..25]
 r124: [19..23]
 r125: [17..20]
 r126: [17..18]
 r127: [13..14]
 r128: [8..12]
 r129: [6..9]
 r130: [6..7]
 r131: [2..5]
 r132: [0..1]
 r133: [89..90]
 r134: [87..88]
 r135: [85..86]
 r136: [81..82]
 r137: [74..78]
 r138: [76..77]
 r139: [74..75]
 r140: [72..73]
 r142: [70..71]
 r143: [54..58]
 r144: [56..57]
 r145: [54..55]
 r146: [51..53]
 r147: [51..52]
 r148: [49..50]
 r149: [46..47]
 r150: [43..44]
 r151: [41..42]
 r152: [36..37]
 r153: [30..31]
 r154: [26..27]
 r155: [21..22]
 r156: [15..16]
 r157: [10..11]
 r158: [63..67]
 r159: [65..66]
 r160: [63..64]
 r161: [61..62]
 r162: [59..60]
Compressing live ranges: from 91 to 80 - 87%
Ranges after the compression:
 r113: [72..73]
 r114: [68..69]
 r115: [58..59]
 r116: [40..41]
 r117: [38..39]
 r118: [34..35]
 r119: [30..33]
 r120: [28..31]
 r121: [28..29]
 r122: [24..25]
 r123: [20..21]
 r124: [16..19]
 r125: [14..17]
 r126: [14..15]
 r127: [10..11]
 r128: [6..9]
 r129: [4..7]
 r130: [4..5]
 r131: [2..3]
 r132: [0..1]
 r133: [78..79]
 r134: [76..77]
 r135: [74..75]
 r136: [70..71]
 r137: [64..67]
 r138: [66..67]
 r139: [64..65]
 r140: [62..63]
 r142: [60..61]
 r143: [46..49]
 r144: [48..49]
 r145: [46..47]
 r146: [44..45]
 r147: [44..45]
 r148: [42..43]
 r149: [40..41]
 r150: [38..39]
 r151: [36..37]
 r152: [32..33]
 r153: [26..27]
 r154: [22..23]
 r155: [18..19]
 r156: [12..13]
 r157: [8..9]
 r158: [54..57]
 r159: [56..57]
 r160: [54..55]
 r161: [52..53]
 r162: [50..51]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 32
changing reg in insn 33
changing reg in insn 49
changing reg in insn 51
changing reg in insn 51
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 59
changing reg in insn 58
changing reg in insn 60
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 71
changing reg in insn 70
changing reg in insn 72
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 80
changing reg in insn 79
changing reg in insn 81
changing reg in insn 80
changing reg in insn 81
changing reg in insn 95
changing reg in insn 20
changing reg in insn 98
changing reg in insn 98
changing reg in insn 102
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 25
changing reg in insn 28
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 39
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 57
changing reg in insn 58
changing reg in insn 61
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 78
changing reg in insn 79
changing reg in insn 86
changing reg in insn 89
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
deleting insn with uid = 10.
deleting insn with uid = 27.
deleting insn with uid = 38.
deleting insn with uid = 88.
deleting insn with uid = 91.
deleting insn with uid = 98.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_Start_IT

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={15d,14u} r3={35d,33u} r7={1d,38u} r12={2d} r13={1d,11u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={4d,3u} r101={1d} r102={1d,1u} r104={1d} r105={1d} r106={1d} 
;;    total ref usage 263{157d,106u,0e} in 74{73 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 133 134 135 136
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":452:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])
        (reg:SI 1 r1 [ SrcAddress ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":452:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])
        (reg:SI 2 r2 [ DstAddress ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":452:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (reg/f:SI 7 r7) [1 DataLength+0 S4 A32])
        (reg:SI 3 r3 [ DataLength ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":452:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 11 2 (set (reg:SI 3 r3 [133])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":453:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 9 12 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":453:21 263 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":456:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 88 [0x58])) [1 hdma_26(D)->StreamBaseAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":456:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])
        (reg:SI 3 r3 [orig:113 _1 ] [113])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":456:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 3 r3 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [136])
                    (const_int 52 [0x34])) [0 hdma_26(D)->Lock+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 17 16 18 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 273 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 105 3 (set (reg:SI 3 r3 [orig:131 _20 ] [131])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 105 20 106 3 (set (pc)
        (label_ref 96)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 284 {*arm_jump}
     (nil)
 -> 96)
;;  succ:       10 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:462:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131

(barrier 106 105 23)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 137 138 139 140 142
(code_label 23 106 24 4 20 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 28 4 (set (reg:SI 2 r2 [138])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 26 29 4 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 52 [0x34])) [0 hdma_26(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [139])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":462:3 263 {*arm_movqi_insn}
     (nil))
(insn 29 28 31 4 (set (reg/f:SI 3 r3 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":464:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 29 32 4 (set (reg:QI 3 r3 [142])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 53 [0x35])) [0 hdma_26(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":464:33 263 {*arm_movqi_insn}
     (nil))
(insn 32 31 33 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [142]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":464:33 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 33 32 34 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":464:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":464:5 273 {arm_cond_branch}
     (nil)
 -> 84)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 116 117 118 119 120 121 122 143 144 145 146 147 148 149 150 151 152 153
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":467:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 39 5 (set (reg:SI 2 r2 [144])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":467:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 37 40 5 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 53 [0x35])) [0 hdma_26(D)->State+0 S1 A8])
        (reg:QI 2 r2 [145])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":467:17 263 {*arm_movqi_insn}
     (nil))
(insn 40 39 41 5 (set (reg/f:SI 3 r3 [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":470:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 5 (set (reg:SI 2 r2 [147])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":470:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [146])
                (const_int 84 [0x54])) [1 hdma_26(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":470:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 5 (set (reg:SI 3 r3)
        (mem/c:SI (reg/f:SI 7 r7) [1 DataLength+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":473:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 5 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":473:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 5 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":473:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 5 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":473:5 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 47 46 48 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("DMA_SetConfig") [flags 0x3]  <function_decl 0000000006912100 DMA_SetConfig>) [0 DMA_SetConfig S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":473:5 290 {*call_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:SI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(insn 48 47 49 5 (set (reg/f:SI 3 r3 [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":476:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 5 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [148])
                (const_int 92 [0x5c])) [1 hdma_26(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":476:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 5 (set (reg:SI 2 r2 [149])
        (const_int 63 [0x3f])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":476:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 5 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (ashift:SI (reg:SI 2 r2 [149])
            (reg:SI 3 r3 [orig:116 _4 ] [116]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":476:24 147 {*arm_shiftsi3}
     (nil))
(insn 52 51 53 5 (set (reg/f:SI 3 r3 [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":476:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [150])
                (const_int 8 [0x8])) [1 regs_27->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":476:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 5 (set (reg/f:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 5 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (mem/f:SI (reg/f:SI 3 r3 [151]) [3 hdma_26(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 5 (set (reg:SI 2 r2 [orig:119 _7 ] [119])
        (mem/v:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118]) [1 _6->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 5 (set (reg/f:SI 3 r3 [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 5 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (mem/f:SI (reg/f:SI 3 r3 [152]) [3 hdma_26(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 5 (set (reg:SI 2 r2 [orig:121 _9 ] [121])
        (ior:SI (reg:SI 2 r2 [orig:119 _7 ] [119])
            (const_int 22 [0x16]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:25 106 {*iorsi3_insn}
     (nil))
(insn 60 59 61 5 (set (mem/v:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120]) [1 _8->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:121 _9 ] [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":479:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 5 (set (reg/f:SI 3 r3 [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":481:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 5 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [153])
                (const_int 64 [0x40])) [6 hdma_26(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":481:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 5 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":481:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 64 63 65 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":481:7 273 {arm_cond_branch}
     (nil)
 -> 73)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 123 124 125 126 154 155
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg/f:SI 3 r3 [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 6 (set (reg/f:SI 3 r3 [orig:123 _11 ] [123])
        (mem/f:SI (reg/f:SI 3 r3 [154]) [3 hdma_26(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 6 (set (reg:SI 2 r2 [orig:124 _12 ] [124])
        (mem/v:SI (reg/f:SI 3 r3 [orig:123 _11 ] [123]) [1 _11->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 6 (set (reg/f:SI 3 r3 [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 6 (set (reg/f:SI 3 r3 [orig:125 _13 ] [125])
        (mem/f:SI (reg/f:SI 3 r3 [155]) [3 hdma_26(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 6 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (ior:SI (reg:SI 2 r2 [orig:124 _12 ] [124])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:27 106 {*iorsi3_insn}
     (nil))
(insn 72 71 73 6 (set (mem/v:SI (reg/f:SI 3 r3 [orig:125 _13 ] [125]) [1 _13->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:126 _14 ] [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":483:27 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 127 128 129 130 156 157
(code_label 73 72 74 7 23 (nil) [1 uses])
(note 74 73 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 7 (set (reg/f:SI 3 r3 [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 7 (set (reg/f:SI 3 r3 [orig:127 _15 ] [127])
        (mem/f:SI (reg/f:SI 3 r3 [156]) [3 hdma_26(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 7 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (mem/v:SI (reg/f:SI 3 r3 [orig:127 _15 ] [127]) [1 _15->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 7 (set (reg/f:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 7 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (mem/f:SI (reg/f:SI 3 r3 [157]) [3 hdma_26(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 7 (set (reg:SI 2 r2 [orig:130 _18 ] [130])
        (ior:SI (reg:SI 2 r2 [orig:128 _16 ] [128])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 106 {*iorsi3_insn}
     (nil))
(insn 81 80 107 7 (set (mem/v:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129]) [1 _17->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:130 _18 ] [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":487:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 107 81 108 7 (set (pc)
        (label_ref 93)) 284 {*arm_jump}
     (nil)
 -> 93)
;;  succ:       9 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 108 107 84)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 158 159 160 161 162
(code_label 84 108 85 8 22 (nil) [1 uses])
(note 85 84 86 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 8 (set (reg/f:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":492:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 89 8 (set (reg:SI 2 r2 [159])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":492:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 87 90 8 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 52 [0x34])) [0 hdma_26(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [160])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":492:5 263 {*arm_movqi_insn}
     (nil))
(insn 90 89 92 8 (set (reg:SI 3 r3 [161])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":495:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 92 90 93 8 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [162])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":495:12 263 {*arm_movqi_insn}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131
(code_label 93 92 94 9 24 (nil) [1 uses])
(note 94 93 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 9 (set (reg:SI 3 r3 [orig:131 _20 ] [131])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 23 [0x17])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":498:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       10 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:498:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:498:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:462:3
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 131
;; lr  def 	 0 [r0] 132
(code_label 96 95 97 10 21 (nil) [1 uses])
(note 97 96 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 97 103 10 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:132 <retval> ] [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":499:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 109 10 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":499:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 109 103 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_Abort (HAL_DMA_Abort, funcdef_no=138, decl_uid=7184, cgraph_uid=143, symbol_order=142)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 10:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 24:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 35:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 36:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 42:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 43:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 58:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 60:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 69:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 85:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 89:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 93:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 99:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 100:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 107:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 108:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 111:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 112:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 113:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 116:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 117:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 120:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8 9
EBB 10 11
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
   Insn 129: point = 0, n_alt = -1
   Insn 128: point = 0, n_alt = -2
   Insn 124: point = 1, n_alt = -2
  BB 9
   Insn 135: point = 4, n_alt = -1
   Insn 94: point = 4, n_alt = 1
   Insn 93: point = 5, n_alt = 8
   Insn 92: point = 6, n_alt = 0
   Insn 91: point = 8, n_alt = 1
   Insn 90: point = 9, n_alt = 5
   Insn 89: point = 10, n_alt = 8
   Insn 88: point = 11, n_alt = 0
   Insn 87: point = 13, n_alt = 1
   Insn 86: point = 14, n_alt = 5
   Insn 85: point = 15, n_alt = 7
   Insn 84: point = 16, n_alt = 1
   Insn 83: point = 17, n_alt = 5
  BB 3
   Insn 131: point = 18, n_alt = -1
   Insn 25: point = 18, n_alt = 1
   Insn 24: point = 19, n_alt = 8
   Insn 23: point = 20, n_alt = 0
   Insn 22: point = 22, n_alt = 1
   Insn 21: point = 23, n_alt = 5
   Insn 20: point = 24, n_alt = 7
   Insn 19: point = 25, n_alt = 1
   Insn 18: point = 26, n_alt = 5
  BB 11
   Insn 121: point = 27, n_alt = 1
   Insn 120: point = 28, n_alt = 8
   Insn 119: point = 29, n_alt = 0
   Insn 118: point = 31, n_alt = 1
   Insn 117: point = 32, n_alt = 5
   Insn 116: point = 33, n_alt = 8
   Insn 115: point = 34, n_alt = 0
   Insn 114: point = 36, n_alt = 1
   Insn 113: point = 37, n_alt = 5
   Insn 112: point = 38, n_alt = 7
   Insn 111: point = 39, n_alt = 5
   Insn 110: point = 40, n_alt = 0
   Insn 109: point = 42, n_alt = 1
   Insn 108: point = 43, n_alt = 5
   Insn 107: point = 45, n_alt = 5
  BB 10
   Insn 105: point = 46, n_alt = -1
   Insn 104: point = 46, n_alt = 0
   Insn 102: point = 47, n_alt = 0
   Insn 101: point = 49, n_alt = 5
   Insn 100: point = 51, n_alt = 5
   Insn 99: point = 53, n_alt = 5
  BB 7
   Insn 133: point = 54, n_alt = -1
   Insn 70: point = 54, n_alt = 7
   Insn 69: point = 55, n_alt = 2
   Insn 68: point = 57, n_alt = 5
   Insn 67: point = 59, n_alt = 5
   Insn 66: point = 60, n_alt = 5
   Insn 65: point = 62, n_alt = 5
   Insn 64: point = 64, n_alt = 5
  BB 6
   Insn 61: point = 65, n_alt = 7
   Insn 60: point = 66, n_alt = 2
   Insn 59: point = 68, n_alt = 5
   Insn 58: point = 70, n_alt = 5
   Insn 57: point = 71, n_alt = 5
   Insn 56: point = 73, n_alt = 5
   Insn 55: point = 75, n_alt = 5
  BB 5
   Insn 52: point = 76, n_alt = -1
   Insn 51: point = 76, n_alt = 0
   Insn 50: point = 77, n_alt = 5
   Insn 49: point = 79, n_alt = 5
  BB 4
   Insn 47: point = 80, n_alt = -1
   Insn 46: point = 80, n_alt = 0
   Insn 45: point = 81, n_alt = 5
   Insn 44: point = 83, n_alt = 5
   Insn 43: point = 84, n_alt = 7
   Insn 42: point = 85, n_alt = 2
   Insn 41: point = 87, n_alt = 5
   Insn 40: point = 89, n_alt = 5
   Insn 39: point = 90, n_alt = 5
   Insn 38: point = 92, n_alt = 5
   Insn 37: point = 94, n_alt = 5
   Insn 36: point = 95, n_alt = 7
   Insn 35: point = 96, n_alt = 2
   Insn 34: point = 98, n_alt = 5
   Insn 33: point = 100, n_alt = 5
   Insn 32: point = 101, n_alt = 5
   Insn 31: point = 103, n_alt = 5
   Insn 30: point = 105, n_alt = 5
  BB 2
   Insn 16: point = 106, n_alt = -1
   Insn 15: point = 106, n_alt = 0
   Insn 14: point = 107, n_alt = 0
   Insn 13: point = 109, n_alt = 7
   Insn 11: point = 111, n_alt = 5
   Insn 10: point = 112, n_alt = 7
   Insn 9: point = 112, n_alt = -1
   Insn 8: point = 112, n_alt = 7
   Insn 7: point = 113, n_alt = 5
   Insn 6: point = 115, n_alt = 5
   Insn 2: point = 116, n_alt = 7
  BB 8
   Insn 81: point = 116, n_alt = -1
   Insn 80: point = 116, n_alt = 0
   Insn 77: point = 117, n_alt = 0
   Insn 76: point = 119, n_alt = 5
   Insn 75: point = 120, n_alt = -2
   Insn 74: point = 121, n_alt = -1
 r113: [112..113]
 r114: [106..107]
 r115: [102..103]
 r116: [97..101]
 r117: [95..98]
 r118: [95..96]
 r119: [91..92]
 r120: [86..90]
 r121: [84..87]
 r122: [84..85]
 r123: [80..81]
 r124: [76..77]
 r125: [72..73]
 r126: [67..71]
 r127: [65..68]
 r128: [65..66]
 r129: [61..62]
 r130: [56..60]
 r131: [54..57]
 r132: [54..55]
 r133: [118..120]
 r134: [116..117]
 r135: [50..51]
 r136: [48..49]
 r137: [46..47]
 r138: [41..43]
 r139: [38..40]
 r140: [27..27] [18..18] [2..4]
 r141: [0..1]
 r142: [114..115]
 r143: [110..111]
 r145: [108..109]
 r146: [24..26]
 r147: [24..25]
 r148: [19..23]
 r149: [21..22]
 r150: [19..20]
 r151: [104..105]
 r152: [99..100]
 r153: [93..94]
 r154: [88..89]
 r155: [82..83]
 r156: [78..79]
 r157: [74..75]
 r158: [69..70]
 r159: [63..64]
 r160: [58..59]
 r161: [118..119]
 r162: [15..17]
 r163: [15..16]
 r164: [10..14]
 r165: [12..13]
 r166: [10..11]
 r167: [5..9]
 r168: [7..8]
 r169: [5..6]
 r170: [52..53]
 r171: [44..45]
 r172: [41..42]
 r173: [38..39]
 r174: [33..37]
 r175: [35..36]
 r176: [33..34]
 r177: [28..32]
 r178: [30..31]
 r179: [28..29]
Compressing live ranges: from 121 to 106 - 87%
Ranges after the compression:
 r113: [98..99]
 r114: [92..93]
 r115: [88..89]
 r116: [84..87]
 r117: [82..85]
 r118: [82..83]
 r119: [78..79]
 r120: [74..77]
 r121: [72..75]
 r122: [72..73]
 r123: [68..69]
 r124: [64..65]
 r125: [60..61]
 r126: [56..59]
 r127: [54..57]
 r128: [54..55]
 r129: [50..51]
 r130: [46..49]
 r131: [44..47]
 r132: [44..45]
 r133: [104..105]
 r134: [102..103]
 r135: [40..41]
 r136: [38..39]
 r137: [36..37]
 r138: [32..33]
 r139: [30..31]
 r140: [21..21] [14..14] [2..3]
 r141: [0..1]
 r142: [100..101]
 r143: [96..97]
 r145: [94..95]
 r146: [19..20]
 r147: [19..20]
 r148: [15..18]
 r149: [17..18]
 r150: [15..16]
 r151: [90..91]
 r152: [86..87]
 r153: [80..81]
 r154: [76..77]
 r155: [70..71]
 r156: [66..67]
 r157: [62..63]
 r158: [58..59]
 r159: [52..53]
 r160: [48..49]
 r161: [104..105]
 r162: [12..13]
 r163: [12..13]
 r164: [8..11]
 r165: [10..11]
 r166: [8..9]
 r167: [4..7]
 r168: [6..7]
 r169: [4..5]
 r170: [42..43]
 r171: [34..35]
 r172: [32..33]
 r173: [30..31]
 r174: [26..29]
 r175: [28..29]
 r176: [26..27]
 r177: [22..25]
 r178: [24..25]
 r179: [22..23]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 14
changing reg in insn 15
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 35
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 42
changing reg in insn 41
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 51
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 60
changing reg in insn 59
changing reg in insn 61
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 69
changing reg in insn 68
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 77
changing reg in insn 77
changing reg in insn 80
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 104
changing reg in insn 108
changing reg in insn 110
changing reg in insn 110
changing reg in insn 112
changing reg in insn 121
changing reg in insn 94
changing reg in insn 25
changing reg in insn 124
changing reg in insn 124
changing reg in insn 128
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 45
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 68
changing reg in insn 76
changing reg in insn 77
changing reg in insn 83
changing reg in insn 85
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 93
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 99
changing reg in insn 100
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 116
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 120
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
deleting insn with uid = 23.
deleting insn with uid = 88.
deleting insn with uid = 92.
deleting insn with uid = 115.
deleting insn with uid = 119.
deleting insn with uid = 124.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 74.


HAL_DMA_Abort

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,5u} r1={3d} r2={21d,18u} r3={47d,42u} r7={1d,38u} r12={4d} r13={1d,14u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={7d,5u} r101={2d} r102={1d,1u} r104={2d} r105={2d} r106={2d} 
;;    total ref usage 377{254d,123u,0e} in 94{92 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 114 142 143 145
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":514:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":516:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [142])
                (const_int 88 [0x58])) [1 hdma_33(D)->StreamBaseAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":516:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [9 regs+0 S4 A32])
        (reg:SI 3 r3 [orig:113 _1 ] [113])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":516:23 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 9 8 10 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006908d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":518:24 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":518:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 13 2 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":520:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 11 14 2 (set (reg:QI 3 r3 [145])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 53 [0x35])) [0 hdma_33(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":520:10 263 {*arm_movqi_insn}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [145]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":520:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 15 14 16 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":520:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":520:5 273 {arm_cond_branch}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 140 146 147 148 149 150
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 3 r3 [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":522:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 3 (set (reg:SI 2 r2 [147])
        (const_int 128 [0x80])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":522:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [146])
                (const_int 84 [0x54])) [1 hdma_33(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":522:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 3 (set (reg/f:SI 3 r3 [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":525:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 24 3 (set (reg:SI 2 r2 [149])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":525:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 22 25 3 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [148])
                (const_int 52 [0x34])) [0 hdma_33(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":525:5 263 {*arm_movqi_insn}
     (nil))
(insn 25 24 131 3 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":527:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 131 25 132 3 (set (pc)
        (label_ref 122)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":527:12 284 {*arm_jump}
     (nil)
 -> 122)
;;  succ:       12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:527:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 140

(barrier 132 131 28)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 116 117 118 119 120 121 122 123 151 152 153 154 155
(code_label 28 132 29 4 26 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (mem/f:SI (reg/f:SI 3 r3 [151]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 4 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (mem/v:SI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [1 _3->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 33 32 34 4 (set (reg/f:SI 3 r3 [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 34 33 35 4 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (mem/f:SI (reg/f:SI 3 r3 [152]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 4 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (and:SI (reg:SI 2 r2 [orig:116 _4 ] [116])
            (const_int -23 [0xffffffffffffffe9]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:25 90 {*arm_andsi3_insn}
     (nil))
(insn 36 35 37 4 (set (mem/v:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117]) [1 _5->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":532:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 4 (set (reg/f:SI 3 r3 [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 4 (set (reg/f:SI 3 r3 [orig:119 _7 ] [119])
        (mem/f:SI (reg/f:SI 3 r3 [153]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 4 (set (reg:SI 2 r2 [orig:120 _8 ] [120])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:119 _7 ] [119])
                (const_int 20 [0x14])) [1 _7->FCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 4 (set (reg/f:SI 3 r3 [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 4 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (mem/f:SI (reg/f:SI 3 r3 [154]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 4 (set (reg:SI 2 r2 [orig:122 _10 ] [122])
        (and:SI (reg:SI 2 r2 [orig:120 _8 ] [120])
            (const_int -129 [0xffffffffffffff7f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:25 90 {*arm_andsi3_insn}
     (nil))
(insn 43 42 44 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 20 [0x14])) [1 _9->FCR+0 S4 A32])
        (reg:SI 2 r2 [orig:122 _10 ] [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":533:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 4 (set (reg/f:SI 3 r3 [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 4 (set (reg/f:SI 3 r3 [orig:123 _11 ] [123])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 64 [0x40])) [6 hdma_33(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 4 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:7 273 {arm_cond_branch}
     (nil)
 -> 53)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 124 156
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg/f:SI 3 r3 [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 5 (set (reg/f:SI 3 r3 [orig:124 _12 ] [124])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [156])
                (const_int 72 [0x48])) [6 hdma_33(D)->XferM1HalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:53 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 5 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:45 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 52 51 53 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":535:45 273 {arm_cond_branch}
     (nil)
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126 127 128 157 158
(code_label 53 52 54 6 28 (nil) [1 uses])
(note 54 53 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 6 (set (reg/f:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 6 (set (reg/f:SI 3 r3 [orig:125 _13 ] [125])
        (mem/f:SI (reg/f:SI 3 r3 [157]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 6 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (mem/v:SI (reg/f:SI 3 r3 [orig:125 _13 ] [125]) [1 _13->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 6 (set (reg/f:SI 3 r3 [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 6 (set (reg/f:SI 3 r3 [orig:127 _15 ] [127])
        (mem/f:SI (reg/f:SI 3 r3 [158]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 60 59 61 6 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (and:SI (reg:SI 2 r2 [orig:126 _14 ] [126])
            (const_int -9 [0xfffffffffffffff7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:27 90 {*arm_andsi3_insn}
     (nil))
(insn 61 60 62 6 (set (mem/v:SI (reg/f:SI 3 r3 [orig:127 _15 ] [127]) [1 _15->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":537:27 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 129 130 131 132 159 160
(code_label 62 61 63 7 29 (nil) [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg/f:SI 3 r3 [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 7 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (mem/f:SI (reg/f:SI 3 r3 [159]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 7 (set (reg:SI 2 r2 [orig:130 _18 ] [130])
        (mem/v:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129]) [1 _17->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 7 (set (reg/f:SI 3 r3 [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 7 (set (reg/f:SI 3 r3 [orig:131 _19 ] [131])
        (mem/f:SI (reg/f:SI 3 r3 [160]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 7 (set (reg:SI 2 r2 [orig:132 _20 ] [132])
        (and:SI (reg:SI 2 r2 [orig:130 _18 ] [130])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 90 {*arm_andsi3_insn}
     (nil))
(insn 70 69 133 7 (set (mem/v:SI (reg/f:SI 3 r3 [orig:131 _19 ] [131]) [1 _19->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:132 _20 ] [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":541:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 133 70 134 7 (set (pc)
        (label_ref 97)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:10 284 {*arm_jump}
     (nil)
 -> 97)
;;  succ:       10 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:544:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 134 133 103)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 133 134 161
(code_label 103 134 73 8 31 (nil) [1 uses])
(note 73 103 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 74 73 75 8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006908d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":547:11 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 75 74 76 8 (set (reg:SI 2 r2 [orig:133 _21 ] [133])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":547:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 8 (set (reg:SI 3 r3 [161])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":547:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 80 8 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (minus:SI (reg:SI 2 r2 [orig:133 _21 ] [133])
            (reg:SI 3 r3 [161]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":547:25 45 {*arm_subsi3_insn}
     (nil))
(insn 80 77 81 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 5 [0x5]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":547:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 81 80 82 8 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":547:9 273 {arm_cond_branch}
     (nil)
 -> 97)
;;  succ:       9 (FALLTHRU)
;;              10 (DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 140 162 163 164 165 166 167 168 169
(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 9 (set (reg/f:SI 3 r3 [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":550:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 9 (set (reg:SI 2 r2 [163])
        (const_int 32 [0x20])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":550:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 9 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [162])
                (const_int 84 [0x54])) [1 hdma_33(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [163])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":550:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 86 85 87 9 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":553:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 89 9 (set (reg:SI 2 r2 [165])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":553:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 87 90 9 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [164])
                (const_int 53 [0x35])) [0 hdma_33(D)->State+0 S1 A8])
        (reg:QI 2 r2 [166])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":553:21 263 {*arm_movqi_insn}
     (nil))
(insn 90 89 91 9 (set (reg/f:SI 3 r3 [167])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":556:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 93 9 (set (reg:SI 2 r2 [168])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":556:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 93 91 94 9 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [167])
                (const_int 52 [0x34])) [0 hdma_33(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [169])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":556:9 263 {*arm_movqi_insn}
     (nil))
(insn 94 93 135 9 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":558:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 135 94 136 9 (set (pc)
        (label_ref 122)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":558:16 284 {*arm_jump}
     (nil)
 -> 122)
;;  succ:       12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:558:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 140

(barrier 136 135 97)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8 (DFS_BACK)
;;              7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:544:10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 135 136 137 170
(code_label 97 136 98 10 30 (nil) [2 uses])
(note 98 97 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg/f:SI 3 r3 [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 100 99 101 10 (set (reg/f:SI 3 r3 [orig:135 _23 ] [135])
        (mem/f:SI (reg/f:SI 3 r3 [170]) [3 hdma_33(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 101 100 102 10 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 _23 ] [135]) [1 _23->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 102 101 104 10 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (and:SI (reg:SI 3 r3 [orig:136 _24 ] [136])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:31 90 {*arm_andsi3_insn}
     (nil))
(insn 104 102 105 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 _25 ] [137])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:46 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 105 104 106 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":544:46 273 {arm_cond_branch}
     (nil)
 -> 103)
;;  succ:       8
;;              11 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 138 139 140 171 172 173 174 175 176 177 178 179
(note 106 105 107 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 11 (set (reg/f:SI 3 r3 [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":563:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 108 107 109 11 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [171])
                (const_int 92 [0x5c])) [1 hdma_33(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":563:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 109 108 110 11 (set (reg:SI 2 r2 [172])
        (const_int 63 [0x3f])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":563:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 110 109 111 11 (set (reg:SI 2 r2 [orig:139 _27 ] [139])
        (ashift:SI (reg:SI 2 r2 [172])
            (reg:SI 3 r3 [orig:138 _26 ] [138]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":563:24 147 {*arm_shiftsi3}
     (nil))
(insn 111 110 112 11 (set (reg/f:SI 3 r3 [173])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":563:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 112 111 113 11 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [173])
                (const_int 8 [0x8])) [1 regs_34->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:139 _27 ] [139])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":563:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 113 112 114 11 (set (reg/f:SI 3 r3 [174])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":566:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 114 113 116 11 (set (reg:SI 2 r2 [175])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":566:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 116 114 117 11 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [174])
                (const_int 53 [0x35])) [0 hdma_33(D)->State+0 S1 A8])
        (reg:QI 2 r2 [176])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":566:17 263 {*arm_movqi_insn}
     (nil))
(insn 117 116 118 11 (set (reg/f:SI 3 r3 [177])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":569:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 118 117 120 11 (set (reg:SI 2 r2 [178])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":569:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 120 118 121 11 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [177])
                (const_int 52 [0x34])) [0 hdma_33(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [179])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":569:5 263 {*arm_movqi_insn}
     (nil))
(insn 121 120 122 11 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":571:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       12 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:571:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 140

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:571:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:527:12
;;              9 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:558:16
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 140
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 140
;; lr  def 	 0 [r0] 141
(code_label 122 121 123 12 27 (nil) [2 uses])
(note 123 122 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 123 129 12 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:141 <retval> ] [141])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":572:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 129 128 137 12 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":572:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 137 129 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_Abort_IT (HAL_DMA_Abort_IT, funcdef_no=139, decl_uid=7186, cgraph_uid=144, symbol_order=143)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 24:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 30:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 31:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) I {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 40: point = 0, n_alt = -1
   Insn 39: point = 0, n_alt = -2
   Insn 35: point = 1, n_alt = -2
  BB 3
   Insn 42: point = 4, n_alt = -1
   Insn 16: point = 4, n_alt = 1
   Insn 15: point = 5, n_alt = 7
   Insn 14: point = 6, n_alt = 1
   Insn 13: point = 7, n_alt = 5
  BB 4
   Insn 32: point = 8, n_alt = 1
   Insn 31: point = 9, n_alt = 7
   Insn 30: point = 10, n_alt = 2
   Insn 29: point = 12, n_alt = 5
   Insn 28: point = 14, n_alt = 5
   Insn 27: point = 15, n_alt = 5
   Insn 26: point = 17, n_alt = 5
   Insn 25: point = 19, n_alt = 5
   Insn 24: point = 20, n_alt = 8
   Insn 23: point = 21, n_alt = 0
   Insn 22: point = 23, n_alt = 1
   Insn 21: point = 24, n_alt = 5
  BB 2
   Insn 11: point = 25, n_alt = -1
   Insn 10: point = 25, n_alt = 0
   Insn 9: point = 26, n_alt = 0
   Insn 8: point = 28, n_alt = 7
   Insn 6: point = 30, n_alt = 5
   Insn 2: point = 31, n_alt = 7
 r113: [25..26]
 r114: [16..17]
 r115: [11..15]
 r116: [9..12]
 r117: [9..10]
 r118: [8..8] [2..4]
 r119: [0..1]
 r120: [29..30]
 r122: [27..28]
 r123: [5..7]
 r124: [5..6]
 r125: [20..24]
 r126: [22..23]
 r127: [20..21]
 r128: [18..19]
 r129: [13..14]
Compressing live ranges: from 31 to 27 - 87%
Ranges after the compression:
 r113: [21..22]
 r114: [13..14]
 r115: [9..12]
 r116: [7..10]
 r117: [7..8]
 r118: [6..6] [2..3]
 r119: [0..1]
 r120: [25..26]
 r122: [23..24]
 r123: [4..5]
 r124: [4..5]
 r125: [17..20]
 r126: [19..20]
 r127: [17..18]
 r128: [15..16]
 r129: [11..12]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 30
changing reg in insn 29
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 16
changing reg in insn 35
changing reg in insn 35
changing reg in insn 39
changing reg in insn 6
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 21
changing reg in insn 24
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
deleting insn with uid = 23.
deleting insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_Abort_IT

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={5d,4u} r3={12d,10u} r7={1d,11u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 76{41d,35u,0e} in 24{24 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 120 122
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":581:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg/f:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":582:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (reg:QI 3 r3 [122])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [120])
                (const_int 53 [0x35])) [0 hdma_9(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":582:10 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (reg:QI 3 r3 [122]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":582:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 10 9 11 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":582:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":582:5 273 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118 123 124
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":584:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 3 (set (reg:SI 2 r2 [124])
        (const_int 128 [0x80])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":584:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 84 [0x54])) [1 hdma_9(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":584:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 42 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":585:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 42 16 43 3 (set (pc)
        (label_ref 33)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":585:12 284 {*arm_jump}
     (nil)
 -> 33)
;;  succ:       5 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:585:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118

(barrier 43 42 19)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114 115 116 117 118 125 126 127 128 129
(code_label 19 43 20 4 33 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":590:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 24 4 (set (reg:SI 2 r2 [126])
        (const_int 5 [0x5])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":590:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 22 25 4 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [125])
                (const_int 53 [0x35])) [0 hdma_9(D)->State+0 S1 A8])
        (reg:QI 2 r2 [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":590:17 263 {*arm_movqi_insn}
     (nil))
(insn 25 24 26 4 (set (reg/f:SI 3 r3 [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (mem/f:SI (reg/f:SI 3 r3 [128]) [3 hdma_9(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 4 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (mem/v:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [1 _2->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 4 (set (reg/f:SI 3 r3 [orig:116 _4 ] [116])
        (mem/f:SI (reg/f:SI 3 r3 [129]) [3 hdma_9(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 4 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (and:SI (reg:SI 2 r2 [orig:115 _3 ] [115])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 90 {*arm_andsi3_insn}
     (nil))
(insn 31 30 32 4 (set (mem/v:SI (reg/f:SI 3 r3 [orig:116 _4 ] [116]) [1 _4->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":593:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 4 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":596:10 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:596:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:596:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:585:12
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 118
;; lr  def 	 0 [r0] 119
(code_label 33 32 34 5 34 (nil) [1 uses])
(note 34 33 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 34 40 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:119 <retval> ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":597:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 44 5 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":597:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 44 40 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_PollForTransfer (HAL_DMA_PollForTransfer, funcdef_no=140, decl_uid=7190, cgraph_uid=145, symbol_order=144)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=48, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=0)
Can't eliminate 102 to 13 (offset=40, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=40, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 5:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) Uu  (1) l {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 17:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 24:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 28:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 43:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 56:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 66:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 71:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 74:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 79:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =l  (1) l  (2) l {*arm_subsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 97:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 101:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 102:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 105:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 111:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 112:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 113:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 115:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 119
	 Choosing alt 1 in insn 119:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 124:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 125:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 126:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 127:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 128:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 129:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 132:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 133:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 140:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 141
	 Choosing alt 1 in insn 141:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 145:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 146:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 147:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 148:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 149:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 152:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 154:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 155:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 158:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 159:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 162:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 163
	 Choosing alt 1 in insn 163:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 167:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 169:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 171:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 172:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 173:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 176:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 177:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 183:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 1 in insn 184:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 188:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 189:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 190:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 196:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 197:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 201:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 202:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 203:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 207:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 209:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 210:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 211:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 213:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 214:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 215:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 216:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 218:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 219:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 222:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 228:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 232:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 233:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 236:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 237:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 238:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 241:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 242:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 243:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 245:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 250:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 251:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 254:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 255:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9
EBB 10 11 12
EBB 13
EBB 14 15
EBB 16 17
EBB 18 19
EBB 20
EBB 21 22
EBB 23 24 25
EBB 26 27
EBB 28
EBB 29
EBB 30

********** Pseudo live ranges #1: **********

  BB 30
   Insn 266: point = 0, n_alt = -1
   Insn 265: point = 0, n_alt = -2
   Insn 261: point = 1, n_alt = -2
  BB 25
   Insn 278: point = 4, n_alt = -1
   Insn 223: point = 4, n_alt = 1
   Insn 222: point = 5, n_alt = 8
   Insn 221: point = 6, n_alt = 0
   Insn 220: point = 8, n_alt = 1
   Insn 219: point = 9, n_alt = 5
   Insn 218: point = 10, n_alt = 8
   Insn 217: point = 11, n_alt = 0
   Insn 216: point = 13, n_alt = 1
   Insn 215: point = 14, n_alt = 5
   Insn 214: point = 15, n_alt = 7
   Insn 213: point = 16, n_alt = 5
   Insn 212: point = 17, n_alt = 0
   Insn 211: point = 19, n_alt = 1
   Insn 210: point = 20, n_alt = 5
   Insn 209: point = 22, n_alt = 5
   Insn 208: point = 23, n_alt = -1
   Insn 207: point = 23, n_alt = 5
  BB 13
   Insn 276: point = 23, n_alt = -1
   Insn 106: point = 23, n_alt = 1
   Insn 105: point = 24, n_alt = 8
   Insn 104: point = 25, n_alt = 0
   Insn 103: point = 27, n_alt = 1
   Insn 102: point = 28, n_alt = 5
   Insn 101: point = 29, n_alt = 8
   Insn 100: point = 30, n_alt = 0
   Insn 99: point = 32, n_alt = 1
   Insn 98: point = 33, n_alt = 5
   Insn 97: point = 34, n_alt = 7
   Insn 96: point = 35, n_alt = 1
   Insn 95: point = 36, n_alt = 5
  BB 5
   Insn 270: point = 37, n_alt = -1
   Insn 44: point = 37, n_alt = 1
   Insn 43: point = 38, n_alt = 7
   Insn 42: point = 39, n_alt = 1
   Insn 41: point = 40, n_alt = 5
  BB 3
   Insn 268: point = 41, n_alt = -1
   Insn 29: point = 41, n_alt = 1
   Insn 28: point = 42, n_alt = 8
   Insn 27: point = 43, n_alt = 0
   Insn 26: point = 45, n_alt = 1
   Insn 25: point = 46, n_alt = 5
   Insn 24: point = 47, n_alt = 7
   Insn 23: point = 48, n_alt = 1
   Insn 22: point = 49, n_alt = 5
  BB 29
   Insn 258: point = 50, n_alt = 1
  BB 27
   Insn 280: point = 51, n_alt = -1
   Insn 245: point = 51, n_alt = 8
   Insn 244: point = 52, n_alt = 0
   Insn 243: point = 54, n_alt = 1
   Insn 242: point = 55, n_alt = 5
   Insn 241: point = 56, n_alt = 8
   Insn 240: point = 57, n_alt = 0
   Insn 239: point = 59, n_alt = 1
   Insn 238: point = 60, n_alt = 5
   Insn 237: point = 61, n_alt = 7
   Insn 236: point = 62, n_alt = 5
   Insn 235: point = 63, n_alt = 0
   Insn 234: point = 65, n_alt = 1
   Insn 233: point = 66, n_alt = 5
   Insn 232: point = 68, n_alt = 5
  BB 28
   Insn 255: point = 69, n_alt = 7
   Insn 254: point = 70, n_alt = 5
   Insn 253: point = 71, n_alt = 0
   Insn 252: point = 73, n_alt = 1
   Insn 251: point = 74, n_alt = 5
   Insn 250: point = 76, n_alt = 5
  BB 26
   Insn 230: point = 77, n_alt = -1
   Insn 229: point = 77, n_alt = 0
   Insn 228: point = 78, n_alt = 1
  BB 24
   Insn 205: point = 79, n_alt = -1
   Insn 204: point = 79, n_alt = 0
   Insn 203: point = 80, n_alt = 0
   Insn 202: point = 82, n_alt = 5
   Insn 201: point = 84, n_alt = 5
  BB 23
   Insn 199: point = 85, n_alt = -1
   Insn 198: point = 85, n_alt = 0
   Insn 197: point = 86, n_alt = 5
   Insn 196: point = 88, n_alt = 5
  BB 21
   Insn 186: point = 89, n_alt = -1
   Insn 185: point = 89, n_alt = 0
   Insn 184: point = 90, n_alt = 1
   Insn 183: point = 92, n_alt = 5
   Insn 182: point = 93, n_alt = 5
  BB 9
   Insn 274: point = 94, n_alt = -1
   Insn 74: point = 94, n_alt = 7
   Insn 73: point = 95, n_alt = 5
   Insn 72: point = 97, n_alt = 5
   Insn 71: point = 98, n_alt = 7
   Insn 70: point = 99, n_alt = 5
   Insn 69: point = 101, n_alt = 5
  BB 7
   Insn 272: point = 102, n_alt = -1
   Insn 57: point = 102, n_alt = 7
   Insn 56: point = 103, n_alt = 3
   Insn 55: point = 105, n_alt = 1
   Insn 54: point = 106, n_alt = 5
   Insn 53: point = 108, n_alt = 5
  BB 8
   Insn 66: point = 109, n_alt = 7
   Insn 65: point = 110, n_alt = 3
   Insn 64: point = 112, n_alt = 1
   Insn 63: point = 113, n_alt = 5
   Insn 62: point = 115, n_alt = 5
  BB 6
   Insn 51: point = 116, n_alt = -1
   Insn 50: point = 116, n_alt = 0
   Insn 49: point = 117, n_alt = 1
  BB 4
   Insn 39: point = 118, n_alt = -1
   Insn 38: point = 118, n_alt = 0
   Insn 37: point = 119, n_alt = 0
   Insn 36: point = 121, n_alt = 5
   Insn 35: point = 123, n_alt = 5
   Insn 34: point = 125, n_alt = 5
  BB 2
   Insn 20: point = 126, n_alt = -1
   Insn 19: point = 126, n_alt = 0
   Insn 18: point = 127, n_alt = 0
   Insn 17: point = 129, n_alt = 7
   Insn 15: point = 131, n_alt = 5
   Insn 14: point = 132, n_alt = 7
   Insn 13: point = 132, n_alt = -1
   Insn 12: point = 132, n_alt = 6
   Insn 11: point = 133, n_alt = 0
   Insn 10: point = 135, n_alt = 1
   Insn 5: point = 136, n_alt = 6
   Insn 4: point = 137, n_alt = 0
   Insn 6: point = 139, n_alt = 7
   Insn 3: point = 139, n_alt = -2
   Insn 2: point = 140, n_alt = 7
  BB 20
  BB 19
   Insn 177: point = 140, n_alt = 7
   Insn 176: point = 141, n_alt = 5
   Insn 175: point = 142, n_alt = 0
   Insn 174: point = 144, n_alt = 1
   Insn 173: point = 145, n_alt = 5
   Insn 172: point = 147, n_alt = 5
   Insn 171: point = 148, n_alt = 7
   Insn 170: point = 149, n_alt = 5
   Insn 169: point = 150, n_alt = 0
   Insn 168: point = 152, n_alt = 5
   Insn 167: point = 154, n_alt = 5
  BB 18
   Insn 165: point = 155, n_alt = -1
   Insn 164: point = 155, n_alt = 0
   Insn 163: point = 156, n_alt = 1
   Insn 162: point = 158, n_alt = 5
   Insn 161: point = 159, n_alt = 0
   Insn 160: point = 161, n_alt = 1
   Insn 159: point = 162, n_alt = 5
   Insn 158: point = 164, n_alt = 5
  BB 17
   Insn 155: point = 165, n_alt = 7
   Insn 154: point = 166, n_alt = 5
   Insn 153: point = 167, n_alt = 0
   Insn 152: point = 169, n_alt = 1
   Insn 151: point = 170, n_alt = 5
   Insn 150: point = 172, n_alt = 5
   Insn 149: point = 173, n_alt = 7
   Insn 148: point = 174, n_alt = 5
   Insn 147: point = 175, n_alt = 0
   Insn 146: point = 177, n_alt = 5
   Insn 145: point = 179, n_alt = 5
  BB 16
   Insn 143: point = 180, n_alt = -1
   Insn 142: point = 180, n_alt = 0
   Insn 141: point = 181, n_alt = 1
   Insn 140: point = 183, n_alt = 5
   Insn 139: point = 184, n_alt = 0
   Insn 138: point = 186, n_alt = 1
   Insn 137: point = 187, n_alt = 5
   Insn 136: point = 189, n_alt = 5
  BB 15
   Insn 133: point = 190, n_alt = 7
   Insn 132: point = 191, n_alt = 5
   Insn 131: point = 192, n_alt = 0
   Insn 130: point = 194, n_alt = 1
   Insn 129: point = 195, n_alt = 5
   Insn 128: point = 197, n_alt = 5
   Insn 127: point = 198, n_alt = 7
   Insn 126: point = 199, n_alt = 5
   Insn 125: point = 200, n_alt = 0
   Insn 124: point = 202, n_alt = 5
   Insn 123: point = 204, n_alt = 5
  BB 14
   Insn 121: point = 205, n_alt = -1
   Insn 120: point = 205, n_alt = 0
   Insn 119: point = 206, n_alt = 1
   Insn 118: point = 208, n_alt = 5
   Insn 117: point = 209, n_alt = 0
   Insn 116: point = 211, n_alt = 1
   Insn 115: point = 212, n_alt = 5
   Insn 114: point = 214, n_alt = 5
   Insn 113: point = 215, n_alt = 7
   Insn 112: point = 216, n_alt = 5
   Insn 111: point = 218, n_alt = 5
  BB 12
   Insn 92: point = 219, n_alt = -1
   Insn 91: point = 219, n_alt = 1
   Insn 90: point = 220, n_alt = 5
   Insn 89: point = 221, n_alt = 0
   Insn 88: point = 223, n_alt = 5
   Insn 87: point = 224, n_alt = -2
   Insn 86: point = 225, n_alt = -1
  BB 11
   Insn 84: point = 225, n_alt = -1
   Insn 83: point = 225, n_alt = 0
   Insn 82: point = 226, n_alt = 5
  BB 10
   Insn 80: point = 227, n_alt = -1
   Insn 79: point = 227, n_alt = 3
   Insn 78: point = 228, n_alt = 5
  BB 22
   Insn 193: point = 229, n_alt = -1
   Insn 192: point = 229, n_alt = 0
   Insn 190: point = 230, n_alt = 0
   Insn 189: point = 232, n_alt = 5
   Insn 188: point = 234, n_alt = 5
 r113: [126..127]
 r114: [122..123]
 r115: [120..121]
 r116: [118..119]
 r117: [104..106]
 r118: [111..113]
 r119: [98..99]
 r120: [222..224]
 r121: [219..221]
 r122: [210..212]
 r123: [207..209]
 r124: [205..206]
 r125: [201..202]
 r126: [198..200]
 r127: [193..195]
 r128: [190..192]
 r129: [185..187]
 r130: [182..184]
 r131: [180..181]
 r132: [176..177]
 r133: [173..175]
 r134: [168..170]
 r135: [165..167]
 r136: [160..162]
 r137: [157..159]
 r138: [155..156]
 r139: [151..152]
 r140: [148..150]
 r141: [143..145]
 r142: [140..142]
 r143: [89..90]
 r144: [231..232]
 r145: [229..230]
 r146: [85..86]
 r147: [81..82]
 r148: [79..80]
 r149: [18..20]
 r150: [15..17]
 r151: [64..66]
 r152: [61..63]
 r153: [72..74]
 r154: [69..71]
 r155: [50..50] [41..41] [37..37] [23..23] [2..4]
 r156: [0..1]
 r157: [138..139]
 r158: [136..137]
 r159: [134..135]
 r160: [132..133]
 r161: [130..131]
 r163: [128..129]
 r164: [47..49]
 r165: [47..48]
 r166: [42..46]
 r167: [44..45]
 r168: [42..43]
 r169: [124..125]
 r170: [38..40]
 r171: [38..39]
 r172: [116..117]
 r173: [107..108]
 r174: [102..103]
 r175: [104..105]
 r176: [114..115]
 r177: [109..110]
 r178: [111..112]
 r179: [100..101]
 r180: [96..97]
 r181: [94..95]
 r182: [227..228]
 r183: [225..226]
 r184: [222..223]
 r185: [219..220]
 r186: [34..36]
 r187: [34..35]
 r188: [29..33]
 r189: [31..32]
 r190: [29..30]
 r191: [24..28]
 r192: [26..27]
 r193: [24..25]
 r194: [217..218]
 r195: [215..216]
 r196: [213..214]
 r197: [210..211]
 r198: [207..208]
 r199: [203..204]
 r200: [198..199]
 r201: [196..197]
 r202: [193..194]
 r203: [190..191]
 r204: [188..189]
 r205: [185..186]
 r206: [182..183]
 r207: [178..179]
 r208: [173..174]
 r209: [171..172]
 r210: [168..169]
 r211: [165..166]
 r212: [163..164]
 r213: [160..161]
 r214: [157..158]
 r215: [153..154]
 r216: [148..149]
 r217: [146..147]
 r218: [143..144]
 r219: [140..141]
 r220: [91..93]
 r221: [91..92]
 r222: [233..234]
 r223: [87..88]
 r224: [83..84]
 r225: [21..22]
 r226: [18..19]
 r227: [15..16]
 r228: [10..14]
 r229: [12..13]
 r230: [10..11]
 r231: [5..9]
 r232: [7..8]
 r233: [5..6]
 r234: [77..78]
 r235: [67..68]
 r236: [64..65]
 r237: [61..62]
 r238: [56..60]
 r239: [58..59]
 r240: [56..57]
 r241: [51..55]
 r242: [53..54]
 r243: [51..52]
 r244: [75..76]
 r245: [72..73]
 r246: [69..70]
Compressing live ranges: from 235 to 198 - 84%
Ranges after the compression:
 r113: [106..107]
 r114: [102..103]
 r115: [100..101]
 r116: [98..99]
 r117: [86..87]
 r118: [92..93]
 r119: [80..81]
 r120: [186..187]
 r121: [184..185]
 r122: [176..177]
 r123: [174..175]
 r124: [172..173]
 r125: [168..169]
 r126: [166..167]
 r127: [162..163]
 r128: [160..161]
 r129: [156..157]
 r130: [154..155]
 r131: [152..153]
 r132: [148..149]
 r133: [146..147]
 r134: [142..143]
 r135: [140..141]
 r136: [136..137]
 r137: [134..135]
 r138: [132..133]
 r139: [128..129]
 r140: [126..127]
 r141: [122..123]
 r142: [120..121]
 r143: [72..73]
 r144: [194..195]
 r145: [192..193]
 r146: [68..69]
 r147: [64..65]
 r148: [62..63]
 r149: [14..15]
 r150: [12..13]
 r151: [50..51]
 r152: [48..49]
 r153: [56..57]
 r154: [54..55]
 r155: [39..39] [32..32] [29..29] [18..18] [2..3]
 r156: [0..1]
 r157: [118..119]
 r158: [116..117]
 r159: [114..115]
 r160: [112..113]
 r161: [110..111]
 r163: [108..109]
 r164: [37..38]
 r165: [37..38]
 r166: [33..36]
 r167: [35..36]
 r168: [33..34]
 r169: [104..105]
 r170: [30..31]
 r171: [30..31]
 r172: [96..97]
 r173: [88..89]
 r174: [84..85]
 r175: [86..87]
 r176: [94..95]
 r177: [90..91]
 r178: [92..93]
 r179: [82..83]
 r180: [78..79]
 r181: [76..77]
 r182: [190..191]
 r183: [188..189]
 r184: [186..187]
 r185: [184..185]
 r186: [27..28]
 r187: [27..28]
 r188: [23..26]
 r189: [25..26]
 r190: [23..24]
 r191: [19..22]
 r192: [21..22]
 r193: [19..20]
 r194: [182..183]
 r195: [180..181]
 r196: [178..179]
 r197: [176..177]
 r198: [174..175]
 r199: [170..171]
 r200: [166..167]
 r201: [164..165]
 r202: [162..163]
 r203: [160..161]
 r204: [158..159]
 r205: [156..157]
 r206: [154..155]
 r207: [150..151]
 r208: [146..147]
 r209: [144..145]
 r210: [142..143]
 r211: [140..141]
 r212: [138..139]
 r213: [136..137]
 r214: [134..135]
 r215: [130..131]
 r216: [126..127]
 r217: [124..125]
 r218: [122..123]
 r219: [120..121]
 r220: [74..75]
 r221: [74..75]
 r222: [196..197]
 r223: [70..71]
 r224: [66..67]
 r225: [16..17]
 r226: [14..15]
 r227: [12..13]
 r228: [8..11]
 r229: [10..11]
 r230: [8..9]
 r231: [4..7]
 r232: [6..7]
 r233: [4..5]
 r234: [60..61]
 r235: [52..53]
 r236: [50..51]
 r237: [48..49]
 r238: [44..47]
 r239: [46..47]
 r240: [44..45]
 r241: [40..43]
 r242: [42..43]
 r243: [40..41]
 r244: [58..59]
 r245: [56..57]
 r246: [54..55]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=48, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=48, prev_offset=48)
Can't eliminate 102 to 13 (offset=40, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=40, prev_offset=40)
changing reg in insn 18
changing reg in insn 19
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 54
changing reg in insn 56
changing reg in insn 63
changing reg in insn 65
changing reg in insn 70
changing reg in insn 71
changing reg in insn 87
changing reg in insn 89
changing reg in insn 89
changing reg in insn 91
changing reg in insn 115
changing reg in insn 117
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 127
changing reg in insn 129
changing reg in insn 131
changing reg in insn 131
changing reg in insn 133
changing reg in insn 137
changing reg in insn 139
changing reg in insn 139
changing reg in insn 141
changing reg in insn 142
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 151
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 159
changing reg in insn 161
changing reg in insn 161
changing reg in insn 163
changing reg in insn 164
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 171
changing reg in insn 173
changing reg in insn 175
changing reg in insn 175
changing reg in insn 177
changing reg in insn 184
changing reg in insn 185
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 192
changing reg in insn 197
changing reg in insn 198
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 204
changing reg in insn 210
changing reg in insn 212
changing reg in insn 212
changing reg in insn 214
changing reg in insn 233
changing reg in insn 235
changing reg in insn 235
changing reg in insn 237
changing reg in insn 251
changing reg in insn 253
changing reg in insn 253
changing reg in insn 255
changing reg in insn 258
changing reg in insn 223
changing reg in insn 106
changing reg in insn 44
changing reg in insn 29
changing reg in insn 261
changing reg in insn 261
changing reg in insn 265
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 41
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 57
changing reg in insn 55
changing reg in insn 56
changing reg in insn 62
changing reg in insn 63
changing reg in insn 65
changing reg in insn 66
changing reg in insn 64
changing reg in insn 65
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 78
changing reg in insn 79
changing reg in insn 82
changing reg in insn 83
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 95
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 101
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 105
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 123
changing reg in insn 124
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 167
changing reg in insn 168
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 182
changing reg in insn 183
changing reg in insn 188
changing reg in insn 189
changing reg in insn 196
changing reg in insn 197
changing reg in insn 201
changing reg in insn 202
changing reg in insn 209
changing reg in insn 210
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 218
changing reg in insn 216
changing reg in insn 217
changing reg in insn 218
changing reg in insn 219
changing reg in insn 222
changing reg in insn 220
changing reg in insn 221
changing reg in insn 222
changing reg in insn 228
changing reg in insn 229
changing reg in insn 232
changing reg in insn 233
changing reg in insn 234
changing reg in insn 235
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 241
changing reg in insn 239
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 245
changing reg in insn 243
changing reg in insn 244
changing reg in insn 245
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 255
deleting insn with uid = 4.
deleting insn with uid = 11.
deleting insn with uid = 27.
deleting insn with uid = 100.
deleting insn with uid = 104.
deleting insn with uid = 217.
deleting insn with uid = 221.
deleting insn with uid = 240.
deleting insn with uid = 244.
deleting insn with uid = 261.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 208.


HAL_DMA_PollForTransfer

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={6d,6u} r1={4d,1u} r2={40d,37u} r3={95d,87u} r7={1d,94u} r12={6d} r13={1d,33u} r14={4d} r15={3d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={17d,14u} r101={3d} r102={1d,1u} r104={3d} r105={3d} r106={3d} 
;;    total ref usage 683{410d,273u,0e} in 197{194 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 113 157 158 159 160 161 163
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":611:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 6 2 (set (reg:SI 3 r3 [157])
        (reg:SI 1 r1 [ CompleteLevel ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":611:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 Timeout+0 S4 A32])
        (reg:SI 2 r2 [ Timeout ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":611:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 6 7 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 11 [0xb])) [0 CompleteLevel+0 S1 A8])
        (reg:QI 3 r3 [158])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":611:1 263 {*arm_movqi_insn}
     (nil))
(note 7 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 12 2 (set (reg:SI 3 r3 [159])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":612:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 10 13 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 31 [0x1f])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [160])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":612:21 263 {*arm_movqi_insn}
     (nil))
(call_insn 13 12 14 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006908d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":614:24 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 tickstart+0 S4 A64])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":614:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 17 2 (set (reg/f:SI 3 r3 [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":620:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 15 18 2 (set (reg:QI 3 r3 [163])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [161])
                (const_int 53 [0x35])) [0 hdma_57(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":620:32 263 {*arm_movqi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (reg:QI 3 r3 [163]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":620:32 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 19 18 20 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":620:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":620:5 273 {arm_cond_branch}
     (nil)
 -> 32)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 155 164 165 166 167 168
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:SI 3 r3 [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":623:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 3 (set (reg:SI 2 r2 [165])
        (const_int 128 [0x80])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":623:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 25 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [164])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [165])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":623:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 3 (set (reg/f:SI 3 r3 [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":624:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 28 3 (set (reg:SI 2 r2 [167])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":624:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 26 29 3 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [166])
                (const_int 52 [0x34])) [0 hdma_57(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [168])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":624:5 263 {*arm_movqi_insn}
     (nil))
(insn 29 28 268 3 (set (reg:SI 3 r3 [orig:155 _45 ] [155])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":625:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 268 29 269 3 (set (pc)
        (label_ref 259)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":625:12 284 {*arm_jump}
     (nil)
 -> 259)
;;  succ:       30 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:625:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155

(barrier 269 268 32)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 115 116 169
(code_label 32 269 33 4 36 (nil) [1 uses])
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg/f:SI 3 r3 [169])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":629:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 36 4 (set (reg/f:SI 3 r3 [orig:114 _2 ] [114])
        (mem/f:SI (reg/f:SI 3 r3 [169]) [3 hdma_57(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":629:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 36 35 37 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem/v:SI (reg/f:SI 3 r3 [orig:114 _2 ] [114]) [1 _2->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":629:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (and:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 256 [0x100]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":629:27 90 {*arm_andsi3_insn}
     (nil))
(insn 38 37 39 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":629:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":629:6 273 {arm_cond_branch}
     (nil)
 -> 47)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 155 170 171
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg/f:SI 3 r3 [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":631:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 5 (set (reg:SI 2 r2 [171])
        (const_int 256 [0x100])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":631:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 5 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [170])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [171])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":631:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 270 5 (set (reg:SI 3 r3 [orig:155 _45 ] [155])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":632:12 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 270 44 271 5 (set (pc)
        (label_ref 259)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":632:12 284 {*arm_jump}
     (nil)
 -> 259)
;;  succ:       30 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:632:12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155

(barrier 271 270 47)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 172
(code_label 47 271 48 6 38 (nil) [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:SI 3 r3 [172])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 11 [0xb])) [0 CompleteLevel+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":636:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 50 49 51 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [172])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":636:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 51 50 52 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":636:5 273 {arm_cond_branch}
     (nil)
 -> 60)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 117 173 174 175
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg/f:SI 3 r3 [173])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":639:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 54 53 55 7 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [173])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":639:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 7 (set (reg:SI 2 r2 [175])
        (const_int 32 [0x20])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":639:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 7 (set (reg:SI 3 r3 [174])
        (ashift:SI (reg:SI 2 r2 [175])
            (reg:SI 3 r3 [orig:117 _5 ] [117]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":639:20 147 {*arm_shiftsi3}
     (nil))
(insn 57 56 272 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [1 mask_cpltlevel+0 S4 A32])
        (reg:SI 3 r3 [174])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":639:20 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 272 57 273 7 (set (pc)
        (label_ref 67)) 284 {*arm_jump}
     (nil)
 -> 67)
;;  succ:       9 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 273 272 60)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 118 176 177 178
(code_label 60 273 61 8 39 (nil) [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg/f:SI 3 r3 [176])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":644:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 8 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [176])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":644:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 8 (set (reg:SI 2 r2 [178])
        (const_int 16 [0x10])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":644:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 8 (set (reg:SI 3 r3 [177])
        (ashift:SI (reg:SI 2 r2 [178])
            (reg:SI 3 r3 [orig:118 _6 ] [118]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":644:20 147 {*arm_shiftsi3}
     (nil))
(insn 66 65 67 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [1 mask_cpltlevel+0 S4 A32])
        (reg:SI 3 r3 [177])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":644:20 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 119 179 180 181
(code_label 67 66 68 9 40 (nil) [1 uses])
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg/f:SI 3 r3 [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":647:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 9 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [179])
                (const_int 88 [0x58])) [1 hdma_57(D)->StreamBaseAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":647:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 72 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])
        (reg:SI 3 r3 [orig:119 _7 ] [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":647:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 72 71 73 9 (set (reg/f:SI 3 r3 [180])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":648:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 9 (set (reg:SI 3 r3 [181])
        (mem/v:SI (reg/f:SI 3 r3 [180]) [1 regs_61->ISR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":648:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 274 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 tmpisr+0 S4 A64])
        (reg:SI 3 r3 [181])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":648:10 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 274 74 275 9 (set (pc)
        (label_ref 180)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:8 284 {*arm_jump}
     (nil)
 -> 180)
;;  succ:       21 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:650:8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 275 274 191)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 182
(code_label 191 275 77 10 48 (nil) [1 uses])
(note 77 191 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg:SI 3 r3 [182])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 Timeout+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":653:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [182])
            (const_int -1 [0xffffffffffffffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":653:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 80 79 81 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":653:7 273 {arm_cond_branch}
     (nil)
 -> 109)
;;  succ:       11 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 183
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg:SI 3 r3 [183])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 Timeout+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [183])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 84 83 85 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:9 273 {arm_cond_branch}
     (nil)
 -> 93)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 120 121 184 185
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 86 85 87 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_GetTick") [flags 0x41]  <function_decl 0000000006908d00 HAL_GetTick>) [0 HAL_GetTick S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:29 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 87 86 88 12 (set (reg:SI 2 r2 [orig:120 _8 ] [120])
        (reg:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 89 12 (set (reg:SI 3 r3 [184])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 24 [0x18])) [1 tickstart+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 12 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (minus:SI (reg:SI 2 r2 [orig:120 _8 ] [120])
            (reg:SI 3 r3 [184]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:43 45 {*arm_subsi3_insn}
     (nil))
(insn 90 89 91 12 (set (reg:SI 2 r2 [185])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 Timeout+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [185])
            (reg:SI 3 r3 [orig:121 _9 ] [121]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:25 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 92 91 93 12 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":655:25 273 {arm_cond_branch}
     (nil)
 -> 109)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 155 186 187 188 189 190 191 192 193
(code_label 93 92 94 13 43 (nil) [1 uses])
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg/f:SI 3 r3 [186])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":658:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 13 (set (reg:SI 2 r2 [187])
        (const_int 32 [0x20])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":658:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 97 96 98 13 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [186])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [187])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":658:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 13 (set (reg/f:SI 3 r3 [188])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":661:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 101 13 (set (reg:SI 2 r2 [189])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":661:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 101 99 102 13 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 53 [0x35])) [0 hdma_57(D)->State+0 S1 A8])
        (reg:QI 2 r2 [190])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":661:21 263 {*arm_movqi_insn}
     (nil))
(insn 102 101 103 13 (set (reg/f:SI 3 r3 [191])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":664:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 105 13 (set (reg:SI 2 r2 [192])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":664:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 105 103 106 13 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [191])
                (const_int 52 [0x34])) [0 hdma_57(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [193])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":664:9 263 {*arm_movqi_insn}
     (nil))
(insn 106 105 276 13 (set (reg:SI 3 r3 [orig:155 _45 ] [155])
        (const_int 3 [0x3])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":666:16 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 276 106 277 13 (set (pc)
        (label_ref 259)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":666:16 284 {*arm_jump}
     (nil)
 -> 259)
;;  succ:       30 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:666:16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155

(barrier 277 276 109)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       10
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 122 123 124 194 195 196 197 198
(code_label 109 277 110 14 42 (nil) [2 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg/f:SI 3 r3 [194])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":671:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 112 111 113 14 (set (reg:SI 3 r3 [195])
        (mem/v:SI (reg/f:SI 3 r3 [194]) [1 regs_61->ISR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":671:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 113 112 114 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 tmpisr+0 S4 A64])
        (reg:SI 3 r3 [195])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":671:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 114 113 115 14 (set (reg/f:SI 3 r3 [196])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 115 114 116 14 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [196])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 116 115 117 14 (set (reg:SI 2 r2 [197])
        (const_int 8 [0x8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 117 116 118 14 (set (reg:SI 2 r2 [orig:123 _11 ] [123])
        (ashift:SI (reg:SI 2 r2 [197])
            (reg:SI 3 r3 [orig:122 _10 ] [122]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:36 147 {*arm_shiftsi3}
     (nil))
(insn 118 117 119 14 (set (reg:SI 3 r3 [198])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 tmpisr+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 119 118 120 14 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (and:SI (reg:SI 3 r3 [198])
            (reg:SI 2 r2 [orig:123 _11 ] [123]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:16 90 {*arm_andsi3_insn}
     (nil))
(insn 120 119 121 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 14 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":673:7 273 {arm_cond_branch}
     (nil)
 -> 134)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126 127 128 199 200 201 202 203
(note 122 121 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 15 (set (reg/f:SI 3 r3 [199])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":676:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 15 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [199])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":676:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 125 124 126 15 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (ior:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":676:23 106 {*iorsi3_insn}
     (nil))
(insn 126 125 127 15 (set (reg/f:SI 3 r3 [200])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":676:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 127 126 128 15 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [200])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [orig:126 _14 ] [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":676:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 128 127 129 15 (set (reg/f:SI 3 r3 [201])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":679:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 129 128 130 15 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [201])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":679:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 130 129 131 15 (set (reg:SI 2 r2 [202])
        (const_int 8 [0x8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":679:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 132 15 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (ashift:SI (reg:SI 2 r2 [202])
            (reg:SI 3 r3 [orig:127 _15 ] [127]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":679:37 147 {*arm_shiftsi3}
     (nil))
(insn 132 131 133 15 (set (reg/f:SI 3 r3 [203])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":679:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 133 132 134 15 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [203])
                (const_int 8 [0x8])) [1 regs_61->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":679:18 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129 130 131 204 205 206
(code_label 134 133 135 16 44 (nil) [1 uses])
(note 135 134 136 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 16 (set (reg/f:SI 3 r3 [204])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 137 136 138 16 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [204])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 138 137 139 16 (set (reg:SI 2 r2 [205])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 139 138 140 16 (set (reg:SI 2 r2 [orig:130 _18 ] [130])
        (ashift:SI (reg:SI 2 r2 [205])
            (reg:SI 3 r3 [orig:129 _17 ] [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:36 147 {*arm_shiftsi3}
     (nil))
(insn 140 139 141 16 (set (reg:SI 3 r3 [206])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 tmpisr+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 141 140 142 16 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (and:SI (reg:SI 3 r3 [206])
            (reg:SI 2 r2 [orig:130 _18 ] [130]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:16 90 {*arm_andsi3_insn}
     (nil))
(insn 142 141 143 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:131 _19 ] [131])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 143 142 144 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":682:7 273 {arm_cond_branch}
     (nil)
 -> 156)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 132 133 134 135 207 208 209 210 211
(note 144 143 145 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 17 (set (reg/f:SI 3 r3 [207])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":685:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 146 145 147 17 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [207])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":685:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 147 146 148 17 (set (reg:SI 2 r2 [orig:133 _21 ] [133])
        (ior:SI (reg:SI 3 r3 [orig:132 _20 ] [132])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":685:23 106 {*iorsi3_insn}
     (nil))
(insn 148 147 149 17 (set (reg/f:SI 3 r3 [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":685:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 149 148 150 17 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [208])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [orig:133 _21 ] [133])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":685:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 150 149 151 17 (set (reg/f:SI 3 r3 [209])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":688:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 151 150 152 17 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [209])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":688:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 152 151 153 17 (set (reg:SI 2 r2 [210])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":688:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 153 152 154 17 (set (reg:SI 2 r2 [orig:135 _23 ] [135])
        (ashift:SI (reg:SI 2 r2 [210])
            (reg:SI 3 r3 [orig:134 _22 ] [134]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":688:37 147 {*arm_shiftsi3}
     (nil))
(insn 154 153 155 17 (set (reg/f:SI 3 r3 [211])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":688:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 155 154 156 17 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [211])
                (const_int 8 [0x8])) [1 regs_61->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:135 _23 ] [135])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":688:18 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 136 137 138 212 213 214
(code_label 156 155 157 18 45 (nil) [1 uses])
(note 157 156 158 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 18 (set (reg/f:SI 3 r3 [212])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 159 158 160 18 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [212])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 160 159 161 18 (set (reg:SI 2 r2 [213])
        (const_int 4 [0x4])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 161 160 162 18 (set (reg:SI 2 r2 [orig:137 _25 ] [137])
        (ashift:SI (reg:SI 2 r2 [213])
            (reg:SI 3 r3 [orig:136 _24 ] [136]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:37 147 {*arm_shiftsi3}
     (nil))
(insn 162 161 163 18 (set (reg:SI 3 r3 [214])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 tmpisr+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 163 162 164 18 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (and:SI (reg:SI 3 r3 [214])
            (reg:SI 2 r2 [orig:137 _25 ] [137]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:16 90 {*arm_andsi3_insn}
     (nil))
(insn 164 163 165 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 165 164 166 18 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":691:7 273 {arm_cond_branch}
     (nil)
 -> 178)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 139 140 141 142 215 216 217 218 219
(note 166 165 167 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 19 (set (reg/f:SI 3 r3 [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":694:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 168 167 169 19 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [215])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":694:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 169 168 170 19 (set (reg:SI 2 r2 [orig:140 _28 ] [140])
        (ior:SI (reg:SI 3 r3 [orig:139 _27 ] [139])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":694:23 106 {*iorsi3_insn}
     (nil))
(insn 170 169 171 19 (set (reg/f:SI 3 r3 [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":694:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 171 170 172 19 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [216])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [orig:140 _28 ] [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":694:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 172 171 173 19 (set (reg/f:SI 3 r3 [217])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":697:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 173 172 174 19 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [217])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":697:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 174 173 175 19 (set (reg:SI 2 r2 [218])
        (const_int 4 [0x4])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":697:38 749 {*thumb2_movsi_vfp}
     (nil))
(insn 175 174 176 19 (set (reg:SI 2 r2 [orig:142 _30 ] [142])
        (ashift:SI (reg:SI 2 r2 [218])
            (reg:SI 3 r3 [orig:141 _29 ] [141]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":697:38 147 {*arm_shiftsi3}
     (nil))
(insn 176 175 177 19 (set (reg/f:SI 3 r3 [219])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":697:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 177 176 178 19 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [219])
                (const_int 8 [0x8])) [1 regs_61->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:142 _30 ] [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":697:18 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 178 177 179 20 46 (nil) [1 uses])
(note 179 178 180 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;;  succ:       21 [always]  (FALLTHRU,DFS_BACK)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 [always]  (FALLTHRU,DFS_BACK)
;;              9 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:650:8
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 143 220 221
(code_label 180 179 181 21 41 (nil) [1 uses])
(note 181 180 182 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 21 (set (reg:SI 2 r2 [220])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 32 [0x20])) [1 tmpisr+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 183 182 184 21 (set (reg:SI 3 r3 [221])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 36 [0x24])) [1 mask_cpltlevel+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 184 183 185 21 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (and:SI (reg:SI 3 r3 [221])
            (reg:SI 2 r2 [220]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:18 90 {*arm_andsi3_insn}
     (nil))
(insn 185 184 186 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 _31 ] [143])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:46 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 186 185 187 21 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:46 273 {arm_cond_branch}
     (nil)
 -> 194)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 144 145 222
(note 187 186 188 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 22 (set (reg/f:SI 3 r3 [222])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 189 188 190 22 (set (reg:SI 3 r3 [orig:144 _32 ] [144])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [222])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:55 749 {*thumb2_movsi_vfp}
     (nil))
(insn 190 189 192 22 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (and:SI (reg:SI 3 r3 [orig:144 _32 ] [144])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:67 90 {*arm_andsi3_insn}
     (nil))
(insn 192 190 193 22 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:145 _33 ] [145])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:46 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 193 192 194 22 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":650:46 273 {arm_cond_branch}
     (nil)
 -> 191)
;;  succ:       10
;;              23 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       21
;;              22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 146 223
(code_label 194 193 195 23 47 (nil) [1 uses])
(note 195 194 196 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 23 (set (reg/f:SI 3 r3 [223])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":701:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 197 196 198 23 (set (reg:SI 3 r3 [orig:146 _34 ] [146])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [223])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":701:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 198 197 199 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:146 _34 ] [146])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":701:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 199 198 200 23 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":701:5 273 {arm_cond_branch}
     (nil)
 -> 226)
;;  succ:       24 (FALLTHRU)
;;              26
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147 148 224
(note 200 199 201 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 24 (set (reg/f:SI 3 r3 [224])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":703:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 202 201 203 24 (set (reg:SI 3 r3 [orig:147 _35 ] [147])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [224])
                (const_int 84 [0x54])) [1 hdma_57(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":703:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 203 202 204 24 (set (reg:SI 3 r3 [orig:148 _36 ] [148])
        (and:SI (reg:SI 3 r3 [orig:147 _35 ] [147])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":703:25 90 {*arm_andsi3_insn}
     (nil))
(insn 204 203 205 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 _36 ] [148])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":703:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 205 204 206 24 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":703:7 273 {arm_cond_branch}
     (nil)
 -> 226)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 149 150 155 225 226 227 228 229 230 231 232 233
(note 206 205 207 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 25 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":705:7 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 208 207 209 25 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("HAL_DMA_Abort") [flags 0x3]  <function_decl 00000000067a5500 HAL_DMA_Abort>) [0 HAL_DMA_Abort S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":705:7 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 209 208 210 25 (set (reg/f:SI 3 r3 [225])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":708:65 749 {*thumb2_movsi_vfp}
     (nil))
(insn 210 209 211 25 (set (reg:SI 3 r3 [orig:149 _37 ] [149])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [225])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":708:65 749 {*thumb2_movsi_vfp}
     (nil))
(insn 211 210 212 25 (set (reg:SI 2 r2 [226])
        (const_int 48 [0x30])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":708:58 749 {*thumb2_movsi_vfp}
     (nil))
(insn 212 211 213 25 (set (reg:SI 2 r2 [orig:150 _38 ] [150])
        (ashift:SI (reg:SI 2 r2 [226])
            (reg:SI 3 r3 [orig:149 _37 ] [149]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":708:58 147 {*arm_shiftsi3}
     (nil))
(insn 213 212 214 25 (set (reg/f:SI 3 r3 [227])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":708:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 214 213 215 25 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [227])
                (const_int 8 [0x8])) [1 regs_61->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:150 _38 ] [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":708:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 215 214 216 25 (set (reg/f:SI 3 r3 [228])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":711:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 216 215 218 25 (set (reg:SI 2 r2 [229])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":711:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 218 216 219 25 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [228])
                (const_int 53 [0x35])) [0 hdma_57(D)->State+0 S1 A8])
        (reg:QI 2 r2 [230])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":711:18 263 {*arm_movqi_insn}
     (nil))
(insn 219 218 220 25 (set (reg/f:SI 3 r3 [231])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":714:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 220 219 222 25 (set (reg:SI 2 r2 [232])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":714:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 222 220 223 25 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [231])
                (const_int 52 [0x34])) [0 hdma_57(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [233])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":714:7 263 {*arm_movqi_insn}
     (nil))
(insn 223 222 278 25 (set (reg:SI 3 r3 [orig:155 _45 ] [155])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":716:14 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 278 223 279 25 (set (pc)
        (label_ref 259)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":716:14 284 {*arm_jump}
     (nil)
 -> 259)
;;  succ:       30 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:716:14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155

(barrier 279 278 226)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       23
;;              24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 234
(code_label 226 279 227 26 49 (nil) [2 uses])
(note 227 226 228 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 26 (set (reg:SI 3 r3 [234])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 11 [0xb])) [0 CompleteLevel+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":721:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 229 228 230 26 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [234])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":721:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 230 229 231 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":721:5 273 {arm_cond_branch}
     (nil)
 -> 248)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 151 152 235 236 237 238 239 240 241 242 243
(note 231 230 232 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 27 (set (reg/f:SI 3 r3 [235])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":724:63 749 {*thumb2_movsi_vfp}
     (nil))
(insn 233 232 234 27 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [235])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":724:63 749 {*thumb2_movsi_vfp}
     (nil))
(insn 234 233 235 27 (set (reg:SI 2 r2 [236])
        (const_int 48 [0x30])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":724:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 235 234 236 27 (set (reg:SI 2 r2 [orig:152 _40 ] [152])
        (ashift:SI (reg:SI 2 r2 [236])
            (reg:SI 3 r3 [orig:151 _39 ] [151]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":724:56 147 {*arm_shiftsi3}
     (nil))
(insn 236 235 237 27 (set (reg/f:SI 3 r3 [237])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":724:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 237 236 238 27 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [237])
                (const_int 8 [0x8])) [1 regs_61->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:152 _40 ] [152])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":724:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 238 237 239 27 (set (reg/f:SI 3 r3 [238])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":726:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 239 238 241 27 (set (reg:SI 2 r2 [239])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":726:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 241 239 242 27 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [238])
                (const_int 53 [0x35])) [0 hdma_57(D)->State+0 S1 A8])
        (reg:QI 2 r2 [240])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":726:17 263 {*arm_movqi_insn}
     (nil))
(insn 242 241 243 27 (set (reg/f:SI 3 r3 [241])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":729:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 243 242 245 27 (set (reg:SI 2 r2 [242])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":729:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 245 243 280 27 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [241])
                (const_int 52 [0x34])) [0 hdma_57(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [243])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":729:5 263 {*arm_movqi_insn}
     (nil))
(jump_insn 280 245 281 27 (set (pc)
        (label_ref 256)) 284 {*arm_jump}
     (nil)
 -> 256)
;;  succ:       29 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 281 280 248)
;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 153 154 244 245 246
(code_label 248 281 249 28 50 (nil) [1 uses])
(note 249 248 250 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 28 (set (reg/f:SI 3 r3 [244])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":734:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 251 250 252 28 (set (reg:SI 3 r3 [orig:153 _41 ] [153])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [244])
                (const_int 92 [0x5c])) [1 hdma_57(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":734:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 252 251 253 28 (set (reg:SI 2 r2 [245])
        (const_int 16 [0x10])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":734:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 253 252 254 28 (set (reg:SI 2 r2 [orig:154 _42 ] [154])
        (ashift:SI (reg:SI 2 r2 [245])
            (reg:SI 3 r3 [orig:153 _41 ] [153]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":734:37 147 {*arm_shiftsi3}
     (nil))
(insn 254 253 255 28 (set (reg/f:SI 3 r3 [246])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [9 regs+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":734:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 255 254 256 28 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [246])
                (const_int 8 [0x8])) [1 regs_61->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:154 _42 ] [154])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":734:16 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;;              27 [always] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 155
(code_label 256 255 257 29 51 (nil) [1 uses])
(note 257 256 258 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 29 (set (reg:SI 3 r3 [orig:155 _45 ] [155])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 31 [0x1f])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":737:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       30 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:737:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 1, flags: (RTL, MODIFIED)
;;  pred:       29 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:737:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:625:12
;;              5 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:632:12
;;              13 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:666:16
;;              25 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:716:14
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 155
;; lr  def 	 0 [r0] 156
(code_label 259 258 260 30 37 (nil) [4 uses])
(note 260 259 265 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 265 260 266 30 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:156 <retval> ] [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":738:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 266 265 282 30 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":738:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 282 266 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_IRQHandler (HAL_DMA_IRQHandler, funcdef_no=141, decl_uid=7192, cgraph_uid=146, symbol_order=145)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 16:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 19:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 25
	 Choosing alt 1 in insn 25:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 41:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 48:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 53:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 57:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 61
	 Choosing alt 1 in insn 61:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 67:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 72:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 79:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 82:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 85:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 89:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 90
	 Choosing alt 1 in insn 90:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 96:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 102:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 105:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 106:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 107:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 108:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 111:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 114:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 115:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 119
	 Choosing alt 1 in insn 119:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 124:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 125:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 130:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 131:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 132:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 135:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 136:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 138:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 143:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 144:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 145:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 155:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 156:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 157:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 163:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 164:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 169:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 176:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 177:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 178:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 183:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 184:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 185:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 186:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 187:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 188:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 189:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 192:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 193:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 197:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 198:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 199:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 203:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 204:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 207:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 208
	 Choosing alt 1 in insn 208:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 212:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 213:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 214:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 215:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 219:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 220:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 223:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 225:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 227:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 232:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 233:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 234:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 235:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 236:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 237:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 238:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 239:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 240:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 241:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 242:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 243:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 244:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 245:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 246:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 247:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 251:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 252:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 257:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 258:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 259:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 260:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 261:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 262:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 263:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 266:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 267:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 268:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 270:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 271:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 272:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 273:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 275:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 276:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 277:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 279:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 280:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 281:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 285:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 286:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 287:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 295:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 296:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 297:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 298:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 302:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 303:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 304:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 305:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 309:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 310:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 314:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 315:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 316:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 322:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 323:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 327:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 328:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 329:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 335:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 336:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 337:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 338:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 342:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 343:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 344:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 345:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 346:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 347:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 348:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 349:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 350:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 352:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 353:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 354:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 356:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 359:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 360:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 364:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 365:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 366:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) r {*call_reg_thumb2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 370:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 371:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 375:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 376:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 377:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 381:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 384:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 385:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 386:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 387:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 388:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 389:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 390:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 391:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 393:  (0) l  (1) mi {*thumb2_movsi_vfp}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 394:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 395:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 396:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 397:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 404:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 405:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 406:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 407:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 413:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 414:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 416:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 417:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 418:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 420:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 423:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 424:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 428:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 429:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 430:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) r {*call_reg_thumb2}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6 7
EBB 8 9 10
EBB 11 12 13 14 15 16
EBB 17 18
EBB 19 20
EBB 21 22
EBB 23 24 25 26 27
EBB 28
EBB 29 30
EBB 31 32 33 34
EBB 35 36
EBB 37 38
EBB 39 40
EBB 41 42 43
EBB 44 45 51
EBB 52
EBB 46
EBB 47 48
EBB 50
EBB 49

********** Pseudo live ranges #1: **********

  BB 49
  BB 50
   Insn 450: point = 0, n_alt = -1
  BB 30
   Insn 440: point = 0, n_alt = -1
   Insn 288: point = 0, n_alt = 0
   Insn 287: point = 1, n_alt = 5
   Insn 286: point = 1, n_alt = 5
   Insn 285: point = 3, n_alt = 5
  BB 29
   Insn 283: point = 4, n_alt = -1
   Insn 282: point = 4, n_alt = 0
   Insn 281: point = 5, n_alt = 5
   Insn 280: point = 7, n_alt = 5
   Insn 279: point = 8, n_alt = 8
   Insn 278: point = 9, n_alt = 0
   Insn 277: point = 11, n_alt = 1
   Insn 276: point = 12, n_alt = 5
   Insn 275: point = 13, n_alt = 8
   Insn 274: point = 14, n_alt = 0
   Insn 273: point = 16, n_alt = 1
   Insn 272: point = 17, n_alt = 5
   Insn 271: point = 18, n_alt = 7
   Insn 270: point = 19, n_alt = 5
   Insn 269: point = 20, n_alt = 0
   Insn 268: point = 22, n_alt = 1
   Insn 267: point = 23, n_alt = 5
   Insn 266: point = 25, n_alt = 5
  BB 28
   Insn 263: point = 26, n_alt = 7
   Insn 262: point = 27, n_alt = 2
   Insn 261: point = 29, n_alt = 5
   Insn 260: point = 31, n_alt = 5
   Insn 259: point = 32, n_alt = 5
   Insn 258: point = 34, n_alt = 5
   Insn 257: point = 36, n_alt = 5
  BB 27
   Insn 254: point = 37, n_alt = -1
   Insn 253: point = 37, n_alt = 0
   Insn 252: point = 38, n_alt = 5
   Insn 251: point = 40, n_alt = 5
  BB 26
   Insn 249: point = 41, n_alt = -1
   Insn 248: point = 41, n_alt = 0
   Insn 247: point = 42, n_alt = 5
   Insn 246: point = 44, n_alt = 5
   Insn 245: point = 45, n_alt = 7
   Insn 244: point = 46, n_alt = 2
   Insn 243: point = 48, n_alt = 5
   Insn 242: point = 50, n_alt = 5
   Insn 241: point = 51, n_alt = 5
   Insn 240: point = 53, n_alt = 5
   Insn 239: point = 55, n_alt = 5
   Insn 238: point = 56, n_alt = 7
   Insn 237: point = 57, n_alt = 2
   Insn 236: point = 59, n_alt = 5
   Insn 235: point = 61, n_alt = 5
   Insn 234: point = 62, n_alt = 5
   Insn 233: point = 64, n_alt = 5
   Insn 232: point = 66, n_alt = 5
  BB 48
   Insn 446: point = 67, n_alt = -1
   Insn 431: point = 67, n_alt = 0
   Insn 430: point = 68, n_alt = 5
   Insn 429: point = 68, n_alt = 5
   Insn 428: point = 70, n_alt = 5
  BB 47
   Insn 426: point = 71, n_alt = -1
   Insn 425: point = 71, n_alt = 0
   Insn 424: point = 72, n_alt = 5
   Insn 423: point = 74, n_alt = 5
  BB 46
   Insn 420: point = 75, n_alt = 8
   Insn 419: point = 76, n_alt = 0
   Insn 418: point = 78, n_alt = 1
   Insn 417: point = 79, n_alt = 5
   Insn 416: point = 80, n_alt = 8
   Insn 415: point = 81, n_alt = 0
   Insn 414: point = 83, n_alt = 1
   Insn 413: point = 84, n_alt = 5
  BB 51
   Insn 452: point = 85, n_alt = -1
  BB 52
   Insn 456: point = 85, n_alt = -1
  BB 44
   Insn 398: point = 85, n_alt = -1
   Insn 397: point = 85, n_alt = 1
   Insn 396: point = 86, n_alt = 5
   Insn 395: point = 87, n_alt = 7
   Insn 394: point = 87, n_alt = 2
   Insn 393: point = 89, n_alt = 5
  BB 45
   Insn 410: point = 90, n_alt = -1
   Insn 409: point = 90, n_alt = 0
   Insn 407: point = 91, n_alt = 0
   Insn 406: point = 93, n_alt = 5
   Insn 405: point = 95, n_alt = 5
   Insn 404: point = 97, n_alt = 5
  BB 43
   Insn 391: point = 98, n_alt = 7
   Insn 390: point = 99, n_alt = 2
   Insn 389: point = 101, n_alt = 5
   Insn 388: point = 103, n_alt = 5
   Insn 387: point = 104, n_alt = 5
   Insn 386: point = 106, n_alt = 5
   Insn 385: point = 108, n_alt = 5
   Insn 384: point = 109, n_alt = 8
   Insn 383: point = 110, n_alt = 0
   Insn 382: point = 112, n_alt = 1
   Insn 381: point = 113, n_alt = 5
  BB 42
   Insn 379: point = 114, n_alt = -1
   Insn 378: point = 114, n_alt = 0
   Insn 377: point = 115, n_alt = 0
   Insn 376: point = 117, n_alt = 5
   Insn 375: point = 119, n_alt = 5
  BB 41
   Insn 373: point = 120, n_alt = -1
   Insn 372: point = 120, n_alt = 0
   Insn 371: point = 121, n_alt = 5
   Insn 370: point = 123, n_alt = 5
  BB 36
   Insn 444: point = 124, n_alt = -1
   Insn 330: point = 124, n_alt = 0
   Insn 329: point = 125, n_alt = 5
   Insn 328: point = 125, n_alt = 5
   Insn 327: point = 127, n_alt = 5
  BB 34
   Insn 442: point = 128, n_alt = -1
   Insn 317: point = 128, n_alt = 0
   Insn 316: point = 129, n_alt = 5
   Insn 315: point = 129, n_alt = 5
   Insn 314: point = 131, n_alt = 5
  BB 33
   Insn 312: point = 132, n_alt = -1
   Insn 311: point = 132, n_alt = 0
   Insn 310: point = 133, n_alt = 5
   Insn 309: point = 135, n_alt = 5
  BB 40
   Insn 367: point = 136, n_alt = 0
   Insn 366: point = 137, n_alt = 5
   Insn 365: point = 137, n_alt = 5
   Insn 364: point = 139, n_alt = 5
  BB 39
   Insn 362: point = 140, n_alt = -1
   Insn 361: point = 140, n_alt = 0
   Insn 360: point = 141, n_alt = 5
   Insn 359: point = 143, n_alt = 5
  BB 38
   Insn 356: point = 144, n_alt = 8
   Insn 355: point = 145, n_alt = 0
   Insn 354: point = 147, n_alt = 1
   Insn 353: point = 148, n_alt = 5
   Insn 352: point = 149, n_alt = 8
   Insn 351: point = 150, n_alt = 0
   Insn 350: point = 152, n_alt = 1
   Insn 349: point = 153, n_alt = 5
   Insn 348: point = 154, n_alt = 7
   Insn 347: point = 155, n_alt = 2
   Insn 346: point = 157, n_alt = 5
   Insn 345: point = 159, n_alt = 5
   Insn 344: point = 160, n_alt = 5
   Insn 343: point = 162, n_alt = 5
   Insn 342: point = 164, n_alt = 5
  BB 37
   Insn 340: point = 165, n_alt = -1
   Insn 339: point = 165, n_alt = 0
   Insn 338: point = 166, n_alt = 0
   Insn 337: point = 168, n_alt = 5
   Insn 336: point = 170, n_alt = 5
   Insn 335: point = 172, n_alt = 5
  BB 35
   Insn 325: point = 173, n_alt = -1
   Insn 324: point = 173, n_alt = 0
   Insn 323: point = 174, n_alt = 5
   Insn 322: point = 176, n_alt = 5
  BB 32
   Insn 307: point = 177, n_alt = -1
   Insn 306: point = 177, n_alt = 0
   Insn 305: point = 178, n_alt = 0
   Insn 304: point = 180, n_alt = 5
   Insn 303: point = 182, n_alt = 5
   Insn 302: point = 184, n_alt = 5
  BB 31
   Insn 300: point = 185, n_alt = -1
   Insn 299: point = 185, n_alt = 0
   Insn 298: point = 186, n_alt = 0
   Insn 297: point = 188, n_alt = 5
   Insn 296: point = 190, n_alt = 5
   Insn 295: point = 192, n_alt = 5
  BB 25
   Insn 230: point = 193, n_alt = -1
   Insn 229: point = 193, n_alt = 0
   Insn 228: point = 194, n_alt = 0
   Insn 227: point = 196, n_alt = 7
   Insn 225: point = 198, n_alt = 5
   Insn 224: point = 199, n_alt = 7
   Insn 223: point = 200, n_alt = 5
   Insn 222: point = 201, n_alt = 0
   Insn 221: point = 203, n_alt = 1
   Insn 220: point = 204, n_alt = 5
   Insn 219: point = 206, n_alt = 5
  BB 24
   Insn 217: point = 207, n_alt = -1
   Insn 216: point = 207, n_alt = 0
   Insn 215: point = 208, n_alt = 0
   Insn 214: point = 210, n_alt = 5
   Insn 213: point = 212, n_alt = 5
   Insn 212: point = 214, n_alt = 5
  BB 23
   Insn 210: point = 215, n_alt = -1
   Insn 209: point = 215, n_alt = 0
   Insn 208: point = 216, n_alt = 1
   Insn 207: point = 218, n_alt = 5
   Insn 206: point = 219, n_alt = 0
   Insn 205: point = 221, n_alt = 1
   Insn 204: point = 222, n_alt = 5
   Insn 203: point = 224, n_alt = 5
  BB 18
   Insn 438: point = 225, n_alt = -1
   Insn 171: point = 225, n_alt = 0
   Insn 170: point = 226, n_alt = 5
   Insn 169: point = 226, n_alt = 5
   Insn 168: point = 228, n_alt = 5
  BB 16
   Insn 436: point = 229, n_alt = -1
   Insn 158: point = 229, n_alt = 0
   Insn 157: point = 230, n_alt = 5
   Insn 156: point = 230, n_alt = 5
   Insn 155: point = 232, n_alt = 5
  BB 15
   Insn 153: point = 233, n_alt = -1
   Insn 152: point = 233, n_alt = 0
   Insn 151: point = 234, n_alt = 5
   Insn 150: point = 236, n_alt = 5
  BB 22
   Insn 200: point = 237, n_alt = 0
   Insn 199: point = 238, n_alt = 5
   Insn 198: point = 238, n_alt = 5
   Insn 197: point = 240, n_alt = 5
  BB 21
   Insn 195: point = 241, n_alt = -1
   Insn 194: point = 241, n_alt = 0
   Insn 193: point = 242, n_alt = 5
   Insn 192: point = 244, n_alt = 5
  BB 20
   Insn 189: point = 245, n_alt = 7
   Insn 188: point = 246, n_alt = 2
   Insn 187: point = 248, n_alt = 5
   Insn 186: point = 250, n_alt = 5
   Insn 185: point = 251, n_alt = 5
   Insn 184: point = 253, n_alt = 5
   Insn 183: point = 255, n_alt = 5
  BB 19
   Insn 181: point = 256, n_alt = -1
   Insn 180: point = 256, n_alt = 0
   Insn 179: point = 257, n_alt = 0
   Insn 178: point = 259, n_alt = 5
   Insn 177: point = 261, n_alt = 5
   Insn 176: point = 263, n_alt = 5
  BB 17
   Insn 166: point = 264, n_alt = -1
   Insn 165: point = 264, n_alt = 0
   Insn 164: point = 265, n_alt = 5
   Insn 163: point = 267, n_alt = 5
  BB 14
   Insn 148: point = 268, n_alt = -1
   Insn 147: point = 268, n_alt = 0
   Insn 146: point = 269, n_alt = 0
   Insn 145: point = 271, n_alt = 5
   Insn 144: point = 273, n_alt = 5
   Insn 143: point = 275, n_alt = 5
  BB 13
   Insn 141: point = 276, n_alt = -1
   Insn 140: point = 276, n_alt = 0
   Insn 139: point = 277, n_alt = 0
   Insn 138: point = 279, n_alt = 5
   Insn 137: point = 281, n_alt = 5
   Insn 136: point = 283, n_alt = 5
   Insn 135: point = 284, n_alt = 7
   Insn 134: point = 285, n_alt = 5
   Insn 133: point = 286, n_alt = 0
   Insn 132: point = 288, n_alt = 1
   Insn 131: point = 289, n_alt = 5
   Insn 130: point = 291, n_alt = 5
  BB 12
   Insn 128: point = 292, n_alt = -1
   Insn 127: point = 292, n_alt = 0
   Insn 126: point = 293, n_alt = 0
   Insn 125: point = 295, n_alt = 5
   Insn 124: point = 297, n_alt = 5
   Insn 123: point = 299, n_alt = 5
  BB 11
   Insn 121: point = 300, n_alt = -1
   Insn 120: point = 300, n_alt = 0
   Insn 119: point = 301, n_alt = 1
   Insn 118: point = 303, n_alt = 5
   Insn 117: point = 304, n_alt = 0
   Insn 116: point = 306, n_alt = 1
   Insn 115: point = 307, n_alt = 5
   Insn 114: point = 309, n_alt = 5
  BB 10
   Insn 111: point = 310, n_alt = 7
   Insn 110: point = 311, n_alt = 5
   Insn 109: point = 312, n_alt = 0
   Insn 108: point = 314, n_alt = 5
   Insn 107: point = 316, n_alt = 5
   Insn 106: point = 317, n_alt = 7
   Insn 105: point = 318, n_alt = 5
   Insn 104: point = 319, n_alt = 0
   Insn 103: point = 321, n_alt = 1
   Insn 102: point = 322, n_alt = 5
   Insn 101: point = 324, n_alt = 5
  BB 9
   Insn 99: point = 325, n_alt = -1
   Insn 98: point = 325, n_alt = 0
   Insn 97: point = 326, n_alt = 0
   Insn 96: point = 328, n_alt = 5
   Insn 95: point = 330, n_alt = 5
   Insn 94: point = 332, n_alt = 5
  BB 8
   Insn 92: point = 333, n_alt = -1
   Insn 91: point = 333, n_alt = 0
   Insn 90: point = 334, n_alt = 1
   Insn 89: point = 336, n_alt = 5
   Insn 88: point = 337, n_alt = 0
   Insn 87: point = 339, n_alt = 1
   Insn 86: point = 340, n_alt = 5
   Insn 85: point = 342, n_alt = 5
  BB 7
   Insn 82: point = 343, n_alt = 7
   Insn 81: point = 344, n_alt = 5
   Insn 80: point = 345, n_alt = 0
   Insn 79: point = 347, n_alt = 5
   Insn 78: point = 349, n_alt = 5
   Insn 77: point = 350, n_alt = 7
   Insn 76: point = 351, n_alt = 5
   Insn 75: point = 352, n_alt = 0
   Insn 74: point = 354, n_alt = 1
   Insn 73: point = 355, n_alt = 5
   Insn 72: point = 357, n_alt = 5
  BB 6
   Insn 70: point = 358, n_alt = -1
   Insn 69: point = 358, n_alt = 0
   Insn 68: point = 359, n_alt = 0
   Insn 67: point = 361, n_alt = 5
   Insn 66: point = 363, n_alt = 5
   Insn 65: point = 365, n_alt = 5
  BB 5
   Insn 63: point = 366, n_alt = -1
   Insn 62: point = 366, n_alt = 0
   Insn 61: point = 367, n_alt = 1
   Insn 60: point = 369, n_alt = 5
   Insn 59: point = 370, n_alt = 0
   Insn 58: point = 372, n_alt = 1
   Insn 57: point = 373, n_alt = 5
   Insn 56: point = 375, n_alt = 5
  BB 4
   Insn 53: point = 376, n_alt = 7
   Insn 52: point = 377, n_alt = 5
   Insn 51: point = 378, n_alt = 0
   Insn 50: point = 380, n_alt = 5
   Insn 49: point = 382, n_alt = 5
   Insn 48: point = 383, n_alt = 7
   Insn 47: point = 384, n_alt = 5
   Insn 46: point = 385, n_alt = 0
   Insn 45: point = 387, n_alt = 1
   Insn 44: point = 388, n_alt = 5
   Insn 43: point = 390, n_alt = 5
   Insn 42: point = 391, n_alt = 7
   Insn 41: point = 392, n_alt = 2
   Insn 40: point = 394, n_alt = 5
   Insn 39: point = 396, n_alt = 5
   Insn 38: point = 397, n_alt = 5
   Insn 37: point = 399, n_alt = 5
   Insn 36: point = 401, n_alt = 5
  BB 3
   Insn 34: point = 402, n_alt = -1
   Insn 33: point = 402, n_alt = 0
   Insn 32: point = 403, n_alt = 0
   Insn 31: point = 405, n_alt = 5
   Insn 30: point = 407, n_alt = 5
   Insn 29: point = 409, n_alt = 5
  BB 2
   Insn 27: point = 410, n_alt = -1
   Insn 26: point = 410, n_alt = 0
   Insn 25: point = 411, n_alt = 1
   Insn 24: point = 413, n_alt = 5
   Insn 23: point = 414, n_alt = 0
   Insn 22: point = 416, n_alt = 1
   Insn 21: point = 417, n_alt = 5
   Insn 20: point = 419, n_alt = 5
   Insn 19: point = 420, n_alt = 7
   Insn 18: point = 421, n_alt = 5
   Insn 17: point = 423, n_alt = 5
   Insn 16: point = 424, n_alt = 7
   Insn 15: point = 425, n_alt = 5
   Insn 14: point = 427, n_alt = 5
   Insn 13: point = 428, n_alt = 7
   Insn 12: point = 429, n_alt = 1
   Insn 11: point = 431, n_alt = 0
   Insn 10: point = 433, n_alt = 5
   Insn 9: point = 434, n_alt = 5
   Insn 8: point = 436, n_alt = 5
   Insn 7: point = 437, n_alt = 7
   Insn 6: point = 438, n_alt = 1
   Insn 2: point = 439, n_alt = 7
 r113: [432..434]
 r114: [424..425]
 r115: [415..417]
 r116: [412..414]
 r117: [410..411]
 r118: [406..407]
 r119: [404..405]
 r120: [402..403]
 r121: [398..399]
 r122: [393..397]
 r123: [391..394]
 r124: [391..392]
 r125: [386..388]
 r126: [383..385]
 r127: [379..380]
 r128: [376..378]
 r129: [371..373]
 r130: [368..370]
 r131: [366..367]
 r132: [362..363]
 r133: [360..361]
 r134: [358..359]
 r135: [353..355]
 r136: [350..352]
 r137: [346..347]
 r138: [343..345]
 r139: [338..340]
 r140: [335..337]
 r141: [333..334]
 r142: [329..330]
 r143: [327..328]
 r144: [325..326]
 r145: [320..322]
 r146: [317..319]
 r147: [313..314]
 r148: [310..312]
 r149: [305..307]
 r150: [302..304]
 r151: [300..301]
 r152: [296..297]
 r153: [294..295]
 r154: [292..293]
 r155: [287..289]
 r156: [284..286]
 r157: [280..281]
 r158: [278..279]
 r159: [276..277]
 r160: [272..273]
 r161: [270..271]
 r162: [268..269]
 r163: [233..234]
 r164: [229..230]
 r165: [264..265]
 r166: [225..226]
 r167: [260..261]
 r168: [258..259]
 r169: [256..257]
 r170: [252..253]
 r171: [247..251]
 r172: [245..248]
 r173: [245..246]
 r174: [241..242]
 r175: [237..238]
 r176: [220..222]
 r177: [217..219]
 r178: [215..216]
 r179: [211..212]
 r180: [209..210]
 r181: [207..208]
 r182: [202..204]
 r183: [199..201]
 r184: [193..194]
 r185: [63..64]
 r186: [58..62]
 r187: [56..59]
 r188: [56..57]
 r189: [52..53]
 r190: [47..51]
 r191: [45..48]
 r192: [45..46]
 r193: [41..42]
 r194: [37..38]
 r195: [33..34]
 r196: [28..32]
 r197: [26..29]
 r198: [26..27]
 r199: [21..23]
 r200: [18..20]
 r201: [4..5]
 r202: [0..1]
 r203: [189..190]
 r204: [187..188]
 r205: [185..186]
 r206: [181..182]
 r207: [179..180]
 r208: [177..178]
 r209: [132..133]
 r210: [128..129]
 r211: [173..174]
 r212: [124..125]
 r213: [169..170]
 r214: [167..168]
 r215: [165..166]
 r216: [161..162]
 r217: [156..160]
 r218: [154..157]
 r219: [154..155]
 r220: [140..141]
 r221: [136..137]
 r222: [120..121]
 r223: [116..117]
 r224: [114..115]
 r225: [105..106]
 r226: [100..104]
 r227: [98..101]
 r228: [98..99]
 r229: [88..89]
 r230: [85..87]
 r231: [94..95]
 r232: [92..93]
 r233: [90..91]
 r234: [71..72]
 r235: [67..68]
 r236: [437..438]
 r237: [435..436]
 r238: [430..431]
 r239: [432..433]
 r240: [428..429]
 r241: [426..427]
 r242: [422..423]
 r243: [420..421]
 r244: [418..419]
 r245: [415..416]
 r246: [412..413]
 r247: [408..409]
 r248: [400..401]
 r249: [395..396]
 r250: [389..390]
 r251: [386..387]
 r252: [383..384]
 r253: [381..382]
 r254: [376..377]
 r255: [374..375]
 r256: [371..372]
 r257: [368..369]
 r258: [364..365]
 r259: [356..357]
 r260: [353..354]
 r261: [350..351]
 r262: [348..349]
 r263: [343..344]
 r264: [341..342]
 r265: [338..339]
 r266: [335..336]
 r267: [331..332]
 r268: [323..324]
 r269: [320..321]
 r270: [317..318]
 r271: [315..316]
 r272: [310..311]
 r273: [308..309]
 r274: [305..306]
 r275: [302..303]
 r276: [298..299]
 r277: [290..291]
 r278: [287..288]
 r279: [284..285]
 r280: [282..283]
 r281: [274..275]
 r282: [235..236]
 r283: [231..232]
 r284: [266..267]
 r285: [227..228]
 r286: [262..263]
 r287: [254..255]
 r288: [249..250]
 r289: [243..244]
 r290: [239..240]
 r291: [223..224]
 r292: [220..221]
 r293: [217..218]
 r294: [213..214]
 r295: [205..206]
 r296: [202..203]
 r297: [199..200]
 r298: [197..198]
 r300: [195..196]
 r301: [65..66]
 r302: [60..61]
 r303: [54..55]
 r304: [49..50]
 r305: [43..44]
 r306: [39..40]
 r307: [35..36]
 r308: [30..31]
 r309: [24..25]
 r310: [21..22]
 r311: [18..19]
 r312: [13..17]
 r313: [15..16]
 r314: [13..14]
 r315: [8..12]
 r316: [10..11]
 r317: [8..9]
 r318: [6..7]
 r319: [2..3]
 r320: [191..192]
 r321: [183..184]
 r322: [134..135]
 r323: [130..131]
 r324: [175..176]
 r325: [126..127]
 r326: [171..172]
 r327: [163..164]
 r328: [158..159]
 r329: [149..153]
 r330: [151..152]
 r331: [149..150]
 r332: [144..148]
 r333: [146..147]
 r334: [144..145]
 r335: [142..143]
 r336: [138..139]
 r337: [122..123]
 r338: [118..119]
 r339: [109..113]
 r340: [111..112]
 r341: [109..110]
 r342: [107..108]
 r343: [102..103]
 r344: [85..86]
 r345: [96..97]
 r346: [80..84]
 r347: [82..83]
 r348: [80..81]
 r349: [75..79]
 r350: [77..78]
 r351: [75..76]
 r352: [73..74]
 r353: [69..70]
 r354: [431..431]
Compressing live ranges: from 439 to 398 - 90%
Ranges after the compression:
 r113: [392..393]
 r114: [384..385]
 r115: [376..377]
 r116: [374..375]
 r117: [372..373]
 r118: [368..369]
 r119: [366..367]
 r120: [364..365]
 r121: [360..361]
 r122: [356..359]
 r123: [354..357]
 r124: [354..355]
 r125: [350..351]
 r126: [348..349]
 r127: [344..345]
 r128: [342..343]
 r129: [338..339]
 r130: [336..337]
 r131: [334..335]
 r132: [330..331]
 r133: [328..329]
 r134: [326..327]
 r135: [322..323]
 r136: [320..321]
 r137: [316..317]
 r138: [314..315]
 r139: [310..311]
 r140: [308..309]
 r141: [306..307]
 r142: [302..303]
 r143: [300..301]
 r144: [298..299]
 r145: [294..295]
 r146: [292..293]
 r147: [288..289]
 r148: [286..287]
 r149: [282..283]
 r150: [280..281]
 r151: [278..279]
 r152: [274..275]
 r153: [272..273]
 r154: [270..271]
 r155: [266..267]
 r156: [264..265]
 r157: [260..261]
 r158: [258..259]
 r159: [256..257]
 r160: [252..253]
 r161: [250..251]
 r162: [248..249]
 r163: [214..215]
 r164: [210..211]
 r165: [244..245]
 r166: [206..207]
 r167: [240..241]
 r168: [238..239]
 r169: [236..237]
 r170: [232..233]
 r171: [228..231]
 r172: [226..229]
 r173: [226..227]
 r174: [222..223]
 r175: [218..219]
 r176: [202..203]
 r177: [200..201]
 r178: [198..199]
 r179: [194..195]
 r180: [192..193]
 r181: [190..191]
 r182: [186..187]
 r183: [184..185]
 r184: [178..179]
 r185: [56..57]
 r186: [52..55]
 r187: [50..53]
 r188: [50..51]
 r189: [46..47]
 r190: [42..45]
 r191: [40..43]
 r192: [40..41]
 r193: [36..37]
 r194: [32..33]
 r195: [28..29]
 r196: [24..27]
 r197: [22..25]
 r198: [22..23]
 r199: [18..19]
 r200: [16..17]
 r201: [4..5]
 r202: [0..1]
 r203: [174..175]
 r204: [172..173]
 r205: [170..171]
 r206: [166..167]
 r207: [164..165]
 r208: [162..163]
 r209: [120..121]
 r210: [116..117]
 r211: [158..159]
 r212: [112..113]
 r213: [154..155]
 r214: [152..153]
 r215: [150..151]
 r216: [146..147]
 r217: [142..145]
 r218: [140..143]
 r219: [140..141]
 r220: [128..129]
 r221: [124..125]
 r222: [108..109]
 r223: [104..105]
 r224: [102..103]
 r225: [94..95]
 r226: [90..93]
 r227: [88..91]
 r228: [88..89]
 r229: [78..79]
 r230: [76..77]
 r231: [84..85]
 r232: [82..83]
 r233: [80..81]
 r234: [64..65]
 r235: [60..61]
 r236: [396..397]
 r237: [394..395]
 r238: [390..391]
 r239: [392..393]
 r240: [388..389]
 r241: [386..387]
 r242: [382..383]
 r243: [380..381]
 r244: [378..379]
 r245: [376..377]
 r246: [374..375]
 r247: [370..371]
 r248: [362..363]
 r249: [358..359]
 r250: [352..353]
 r251: [350..351]
 r252: [348..349]
 r253: [346..347]
 r254: [342..343]
 r255: [340..341]
 r256: [338..339]
 r257: [336..337]
 r258: [332..333]
 r259: [324..325]
 r260: [322..323]
 r261: [320..321]
 r262: [318..319]
 r263: [314..315]
 r264: [312..313]
 r265: [310..311]
 r266: [308..309]
 r267: [304..305]
 r268: [296..297]
 r269: [294..295]
 r270: [292..293]
 r271: [290..291]
 r272: [286..287]
 r273: [284..285]
 r274: [282..283]
 r275: [280..281]
 r276: [276..277]
 r277: [268..269]
 r278: [266..267]
 r279: [264..265]
 r280: [262..263]
 r281: [254..255]
 r282: [216..217]
 r283: [212..213]
 r284: [246..247]
 r285: [208..209]
 r286: [242..243]
 r287: [234..235]
 r288: [230..231]
 r289: [224..225]
 r290: [220..221]
 r291: [204..205]
 r292: [202..203]
 r293: [200..201]
 r294: [196..197]
 r295: [188..189]
 r296: [186..187]
 r297: [184..185]
 r298: [182..183]
 r300: [180..181]
 r301: [58..59]
 r302: [54..55]
 r303: [48..49]
 r304: [44..45]
 r305: [38..39]
 r306: [34..35]
 r307: [30..31]
 r308: [26..27]
 r309: [20..21]
 r310: [18..19]
 r311: [16..17]
 r312: [12..15]
 r313: [14..15]
 r314: [12..13]
 r315: [8..11]
 r316: [10..11]
 r317: [8..9]
 r318: [6..7]
 r319: [2..3]
 r320: [176..177]
 r321: [168..169]
 r322: [122..123]
 r323: [118..119]
 r324: [160..161]
 r325: [114..115]
 r326: [156..157]
 r327: [148..149]
 r328: [144..145]
 r329: [136..139]
 r330: [138..139]
 r331: [136..137]
 r332: [132..135]
 r333: [134..135]
 r334: [132..133]
 r335: [130..131]
 r336: [126..127]
 r337: [110..111]
 r338: [106..107]
 r339: [98..101]
 r340: [100..101]
 r341: [98..99]
 r342: [96..97]
 r343: [92..93]
 r344: [76..77]
 r345: [86..87]
 r346: [72..75]
 r347: [74..75]
 r348: [72..73]
 r349: [68..71]
 r350: [70..71]
 r351: [68..69]
 r352: [66..67]
 r353: [62..63]
 r354: [391..391]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=8, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=0, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 9
changing reg in insn 11
changing reg in insn 15
changing reg in insn 16
changing reg in insn 21
changing reg in insn 23
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 41
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 53
changing reg in insn 57
changing reg in insn 59
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 73
changing reg in insn 75
changing reg in insn 75
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 86
changing reg in insn 88
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 102
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 111
changing reg in insn 115
changing reg in insn 117
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 131
changing reg in insn 133
changing reg in insn 133
changing reg in insn 135
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 146
changing reg in insn 146
changing reg in insn 147
changing reg in insn 151
changing reg in insn 152
changing reg in insn 156
changing reg in insn 158
changing reg in insn 164
changing reg in insn 165
changing reg in insn 169
changing reg in insn 171
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 180
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 188
changing reg in insn 187
changing reg in insn 189
changing reg in insn 188
changing reg in insn 189
changing reg in insn 193
changing reg in insn 194
changing reg in insn 198
changing reg in insn 200
changing reg in insn 204
changing reg in insn 206
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 213
changing reg in insn 214
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 216
changing reg in insn 220
changing reg in insn 222
changing reg in insn 222
changing reg in insn 224
changing reg in insn 228
changing reg in insn 229
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 237
changing reg in insn 236
changing reg in insn 238
changing reg in insn 237
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 241
changing reg in insn 244
changing reg in insn 243
changing reg in insn 245
changing reg in insn 244
changing reg in insn 245
changing reg in insn 247
changing reg in insn 248
changing reg in insn 252
changing reg in insn 253
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 262
changing reg in insn 261
changing reg in insn 263
changing reg in insn 262
changing reg in insn 263
changing reg in insn 267
changing reg in insn 269
changing reg in insn 269
changing reg in insn 271
changing reg in insn 281
changing reg in insn 282
changing reg in insn 286
changing reg in insn 288
changing reg in insn 296
changing reg in insn 297
changing reg in insn 297
changing reg in insn 298
changing reg in insn 298
changing reg in insn 299
changing reg in insn 303
changing reg in insn 304
changing reg in insn 304
changing reg in insn 305
changing reg in insn 305
changing reg in insn 306
changing reg in insn 310
changing reg in insn 311
changing reg in insn 315
changing reg in insn 317
changing reg in insn 323
changing reg in insn 324
changing reg in insn 328
changing reg in insn 330
changing reg in insn 336
changing reg in insn 337
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 339
changing reg in insn 343
changing reg in insn 344
changing reg in insn 344
changing reg in insn 347
changing reg in insn 346
changing reg in insn 348
changing reg in insn 347
changing reg in insn 348
changing reg in insn 360
changing reg in insn 361
changing reg in insn 365
changing reg in insn 367
changing reg in insn 371
changing reg in insn 372
changing reg in insn 376
changing reg in insn 377
changing reg in insn 377
changing reg in insn 378
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 390
changing reg in insn 389
changing reg in insn 391
changing reg in insn 390
changing reg in insn 391
changing reg in insn 393
changing reg in insn 394
changing reg in insn 394
changing reg in insn 397
changing reg in insn 395
changing reg in insn 405
changing reg in insn 406
changing reg in insn 406
changing reg in insn 407
changing reg in insn 407
changing reg in insn 409
changing reg in insn 424
changing reg in insn 425
changing reg in insn 429
changing reg in insn 431
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 52
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 65
changing reg in insn 66
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 94
changing reg in insn 95
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 123
changing reg in insn 124
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 143
changing reg in insn 144
changing reg in insn 150
changing reg in insn 151
changing reg in insn 155
changing reg in insn 156
changing reg in insn 163
changing reg in insn 164
changing reg in insn 168
changing reg in insn 169
changing reg in insn 176
changing reg in insn 177
changing reg in insn 183
changing reg in insn 184
changing reg in insn 186
changing reg in insn 187
changing reg in insn 192
changing reg in insn 193
changing reg in insn 197
changing reg in insn 198
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 207
changing reg in insn 212
changing reg in insn 213
changing reg in insn 219
changing reg in insn 220
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 224
changing reg in insn 225
changing reg in insn 227
changing reg in insn 227
changing reg in insn 228
changing reg in insn 232
changing reg in insn 233
changing reg in insn 235
changing reg in insn 236
changing reg in insn 239
changing reg in insn 240
changing reg in insn 242
changing reg in insn 243
changing reg in insn 246
changing reg in insn 247
changing reg in insn 251
changing reg in insn 252
changing reg in insn 257
changing reg in insn 258
changing reg in insn 260
changing reg in insn 261
changing reg in insn 266
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 272
changing reg in insn 275
changing reg in insn 273
changing reg in insn 274
changing reg in insn 275
changing reg in insn 276
changing reg in insn 279
changing reg in insn 277
changing reg in insn 278
changing reg in insn 279
changing reg in insn 280
changing reg in insn 281
changing reg in insn 285
changing reg in insn 286
changing reg in insn 295
changing reg in insn 296
changing reg in insn 302
changing reg in insn 303
changing reg in insn 309
changing reg in insn 310
changing reg in insn 314
changing reg in insn 315
changing reg in insn 322
changing reg in insn 323
changing reg in insn 327
changing reg in insn 328
changing reg in insn 335
changing reg in insn 336
changing reg in insn 342
changing reg in insn 343
changing reg in insn 345
changing reg in insn 346
changing reg in insn 349
changing reg in insn 352
changing reg in insn 350
changing reg in insn 351
changing reg in insn 352
changing reg in insn 353
changing reg in insn 356
changing reg in insn 354
changing reg in insn 355
changing reg in insn 356
changing reg in insn 359
changing reg in insn 360
changing reg in insn 364
changing reg in insn 365
changing reg in insn 370
changing reg in insn 371
changing reg in insn 375
changing reg in insn 376
changing reg in insn 381
changing reg in insn 384
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 386
changing reg in insn 388
changing reg in insn 389
changing reg in insn 396
changing reg in insn 397
changing reg in insn 404
changing reg in insn 405
changing reg in insn 413
changing reg in insn 416
changing reg in insn 414
changing reg in insn 415
changing reg in insn 416
changing reg in insn 417
changing reg in insn 420
changing reg in insn 418
changing reg in insn 419
changing reg in insn 420
changing reg in insn 423
changing reg in insn 424
changing reg in insn 428
changing reg in insn 429
changing reg in insn 11
deleting insn with uid = 274.
deleting insn with uid = 278.
deleting insn with uid = 351.
deleting insn with uid = 355.
deleting insn with uid = 383.
deleting insn with uid = 415.
deleting insn with uid = 419.
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 158.
rescanning insn with uid = 171.
rescanning insn with uid = 200.
rescanning insn with uid = 288.
rescanning insn with uid = 317.
rescanning insn with uid = 330.
rescanning insn with uid = 367.
rescanning insn with uid = 431.


HAL_DMA_IRQHandler

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={17d,9u} r1={9d} r2={58d,48u} r3={194d,186u} r7={1d,152u} r12={16d} r13={1d,60u} r14={9d} r15={8d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={39d,31u} r101={8d} r102={1d,1u} r104={8d} r105={8d} r106={8d} 
;;    total ref usage 1432{945d,487u,0e} in 349{341 regular + 8 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 117 236 237 238 239 240 241 242 243 244 245 246 354
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":747:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [236])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":749:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 8 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 count+0 S4 A64])
        (reg:SI 3 r3 [236])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":749:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 r3 [237])
        (symbol_ref:SI ("SystemCoreClock") [flags 0x40]  <var_decl 00000000063e2d80 SystemCoreClock>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":750:38 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [orig:113 SystemCoreClock.0_1 ] [113])
        (mem/c:SI (reg/f:SI 3 r3 [237]) [1 SystemCoreClock+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":750:38 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [239])
        (const_int 458129845 [0x1b4e81b5])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":750:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 3 r3 [238])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 3 r3 [orig:113 SystemCoreClock.0_1 ] [113]))
                            (zero_extend:DI (reg:SI 2 r2 [239])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 2 r2 [354]))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":750:12 72 {*umull_high}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [240])
        (lshiftrt:SI (reg:SI 3 r3 [238])
            (const_int 10 [0xa]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":750:12 147 {*arm_shiftsi3}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 timeout+0 S4 A32])
        (reg:SI 3 r3 [240])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":750:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 3 r3 [241])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":753:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [241])
                (const_int 88 [0x58])) [1 hdma_140(D)->StreamBaseAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":753:56 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":753:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 3 r3 [242])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":755:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 2 (set (reg:SI 3 r3 [243])
        (mem/v:SI (reg/f:SI 3 r3 [242]) [1 regs_141->ISR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":755:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tmpisr+0 S4 A32])
        (reg:SI 3 r3 [243])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":755:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [244])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [244])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 2 (set (reg:SI 2 r2 [245])
        (const_int 8 [0x8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (ashift:SI (reg:SI 2 r2 [245])
            (reg:SI 3 r3 [orig:115 _3 ] [115]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:35 147 {*arm_shiftsi3}
     (nil))
(insn 24 23 25 2 (set (reg:SI 3 r3 [246])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tmpisr+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (and:SI (reg:SI 3 r3 [246])
            (reg:SI 2 r2 [orig:116 _4 ] [116]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:15 90 {*arm_andsi3_insn}
     (nil))
(insn 26 25 27 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":758:6 273 {arm_cond_branch}
     (nil)
 -> 54)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 118 119 120 247
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 3 (set (reg/f:SI 3 r3 [247])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":760:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 3 (set (reg/f:SI 3 r3 [orig:118 _6 ] [118])
        (mem/f:SI (reg/f:SI 3 r3 [247]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":760:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 3 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (reg/f:SI 3 r3 [orig:118 _6 ] [118]) [1 _6->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":760:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 33 3 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":760:8 90 {*arm_andsi3_insn}
     (nil))
(insn 33 32 34 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":760:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 34 33 35 3 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":760:7 273 {arm_cond_branch}
     (nil)
 -> 54)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121 122 123 124 125 126 127 128 248 249 250 251 252 253 254
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg/f:SI 3 r3 [248])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 37 36 38 4 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (mem/f:SI (reg/f:SI 3 r3 [248]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 4 (set (reg:SI 2 r2 [orig:122 _10 ] [122])
        (mem/v:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121]) [1 _9->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 4 (set (reg/f:SI 3 r3 [249])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 4 (set (reg/f:SI 3 r3 [orig:123 _11 ] [123])
        (mem/f:SI (reg/f:SI 3 r3 [249]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 4 (set (reg:SI 2 r2 [orig:124 _12 ] [124])
        (and:SI (reg:SI 2 r2 [orig:122 _10 ] [122])
            (const_int -5 [0xfffffffffffffffb]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:27 90 {*arm_andsi3_insn}
     (nil))
(insn 42 41 43 4 (set (mem/v:SI (reg/f:SI 3 r3 [orig:123 _11 ] [123]) [1 _11->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:124 _12 ] [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":763:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 4 (set (reg/f:SI 3 r3 [250])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":766:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 45 4 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [250])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":766:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 45 44 46 4 (set (reg:SI 2 r2 [251])
        (const_int 8 [0x8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":766:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 4 (set (reg:SI 2 r2 [orig:126 _14 ] [126])
        (ashift:SI (reg:SI 2 r2 [251])
            (reg:SI 3 r3 [orig:125 _13 ] [125]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":766:37 147 {*arm_shiftsi3}
     (nil))
(insn 47 46 48 4 (set (reg/f:SI 3 r3 [252])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":766:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [252])
                (const_int 8 [0x8])) [1 regs_141->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:126 _14 ] [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":766:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 4 (set (reg/f:SI 3 r3 [253])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":769:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 51 4 (set (reg:SI 3 r3 [orig:127 _15 ] [127])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [253])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":769:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 51 50 52 4 (set (reg:SI 2 r2 [orig:128 _16 ] [128])
        (ior:SI (reg:SI 3 r3 [orig:127 _15 ] [127])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":769:23 106 {*iorsi3_insn}
     (nil))
(insn 52 51 53 4 (set (reg/f:SI 3 r3 [254])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":769:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 53 52 54 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [254])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [orig:128 _16 ] [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":769:23 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129 130 131 255 256 257
(code_label 54 53 55 5 53 (nil) [2 uses])
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 5 (set (reg/f:SI 3 r3 [255])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 58 5 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [255])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 59 5 (set (reg:SI 2 r2 [256])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 59 58 60 5 (set (reg:SI 2 r2 [orig:130 _18 ] [130])
        (ashift:SI (reg:SI 2 r2 [256])
            (reg:SI 3 r3 [orig:129 _17 ] [129]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:35 147 {*arm_shiftsi3}
     (nil))
(insn 60 59 61 5 (set (reg:SI 3 r3 [257])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tmpisr+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 61 60 62 5 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (and:SI (reg:SI 3 r3 [257])
            (reg:SI 2 r2 [orig:130 _18 ] [130]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:15 90 {*arm_andsi3_insn}
     (nil))
(insn 62 61 63 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:131 _19 ] [131])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 63 62 64 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":773:6 273 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 132 133 134 258
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 6 (set (reg/f:SI 3 r3 [258])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":775:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 66 65 67 6 (set (reg/f:SI 3 r3 [orig:132 _20 ] [132])
        (mem/f:SI (reg/f:SI 3 r3 [258]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":775:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 67 66 68 6 (set (reg:SI 3 r3 [orig:133 _21 ] [133])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:132 _20 ] [132])
                (const_int 20 [0x14])) [1 _20->FCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":775:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 68 67 69 6 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (and:SI (reg:SI 3 r3 [orig:133 _21 ] [133])
            (const_int 128 [0x80]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":775:8 90 {*arm_andsi3_insn}
     (nil))
(insn 69 68 70 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":775:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":775:7 273 {arm_cond_branch}
     (nil)
 -> 83)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136 137 138 259 260 261 262 263
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg/f:SI 3 r3 [259])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":778:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 73 72 74 7 (set (reg:SI 3 r3 [orig:135 _23 ] [135])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [259])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":778:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 74 73 75 7 (set (reg:SI 2 r2 [260])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":778:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 75 74 76 7 (set (reg:SI 2 r2 [orig:136 _24 ] [136])
        (ashift:SI (reg:SI 2 r2 [260])
            (reg:SI 3 r3 [orig:135 _23 ] [135]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":778:37 147 {*arm_shiftsi3}
     (nil))
(insn 76 75 77 7 (set (reg/f:SI 3 r3 [261])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":778:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 7 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [261])
                (const_int 8 [0x8])) [1 regs_141->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:136 _24 ] [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":778:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 79 7 (set (reg/f:SI 3 r3 [262])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":781:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 79 78 80 7 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [262])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":781:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 80 79 81 7 (set (reg:SI 2 r2 [orig:138 _26 ] [138])
        (ior:SI (reg:SI 3 r3 [orig:137 _25 ] [137])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":781:23 106 {*iorsi3_insn}
     (nil))
(insn 81 80 82 7 (set (reg/f:SI 3 r3 [263])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":781:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 82 81 83 7 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [263])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [orig:138 _26 ] [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":781:23 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5
;;              6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 139 140 141 264 265 266
(code_label 83 82 84 8 54 (nil) [2 uses])
(note 84 83 85 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 8 (set (reg/f:SI 3 r3 [264])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 86 85 87 8 (set (reg:SI 3 r3 [orig:139 _27 ] [139])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [264])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:43 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 8 (set (reg:SI 2 r2 [265])
        (const_int 4 [0x4])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 89 8 (set (reg:SI 2 r2 [orig:140 _28 ] [140])
        (ashift:SI (reg:SI 2 r2 [265])
            (reg:SI 3 r3 [orig:139 _27 ] [139]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:36 147 {*arm_shiftsi3}
     (nil))
(insn 89 88 90 8 (set (reg:SI 3 r3 [266])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tmpisr+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 8 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (and:SI (reg:SI 3 r3 [266])
            (reg:SI 2 r2 [orig:140 _28 ] [140]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:15 90 {*arm_andsi3_insn}
     (nil))
(insn 91 90 92 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 _29 ] [141])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 92 91 93 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":785:6 273 {arm_cond_branch}
     (nil)
 -> 112)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 142 143 144 267
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 9 (set (reg/f:SI 3 r3 [267])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":787:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 95 94 96 9 (set (reg/f:SI 3 r3 [orig:142 _30 ] [142])
        (mem/f:SI (reg/f:SI 3 r3 [267]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":787:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 9 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:142 _30 ] [142]) [1 _30->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":787:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 97 96 98 9 (set (reg:SI 3 r3 [orig:144 _32 ] [144])
        (and:SI (reg:SI 3 r3 [orig:143 _31 ] [143])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":787:8 90 {*arm_andsi3_insn}
     (nil))
(insn 98 97 99 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:144 _32 ] [144])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":787:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 99 98 100 9 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":787:7 273 {arm_cond_branch}
     (nil)
 -> 112)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 145 146 147 148 268 269 270 271 272
(note 100 99 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 10 (set (reg/f:SI 3 r3 [268])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":790:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 102 101 103 10 (set (reg:SI 3 r3 [orig:145 _33 ] [145])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [268])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":790:45 749 {*thumb2_movsi_vfp}
     (nil))
(insn 103 102 104 10 (set (reg:SI 2 r2 [269])
        (const_int 4 [0x4])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":790:38 749 {*thumb2_movsi_vfp}
     (nil))
(insn 104 103 105 10 (set (reg:SI 2 r2 [orig:146 _34 ] [146])
        (ashift:SI (reg:SI 2 r2 [269])
            (reg:SI 3 r3 [orig:145 _33 ] [145]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":790:38 147 {*arm_shiftsi3}
     (nil))
(insn 105 104 106 10 (set (reg/f:SI 3 r3 [270])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":790:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 106 105 107 10 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [270])
                (const_int 8 [0x8])) [1 regs_141->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:146 _34 ] [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":790:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 107 106 108 10 (set (reg/f:SI 3 r3 [271])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":793:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 108 107 109 10 (set (reg:SI 3 r3 [orig:147 _35 ] [147])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [271])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":793:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 109 108 110 10 (set (reg:SI 2 r2 [orig:148 _36 ] [148])
        (ior:SI (reg:SI 3 r3 [orig:147 _35 ] [147])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":793:23 106 {*iorsi3_insn}
     (nil))
(insn 110 109 111 10 (set (reg/f:SI 3 r3 [272])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":793:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 111 110 112 10 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [272])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])
        (reg:SI 2 r2 [orig:148 _36 ] [148])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":793:23 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 149 150 151 273 274 275
(code_label 112 111 113 11 55 (nil) [2 uses])
(note 113 112 114 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 11 (set (reg/f:SI 3 r3 [273])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 115 114 116 11 (set (reg:SI 3 r3 [orig:149 _37 ] [149])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [273])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 116 115 117 11 (set (reg:SI 2 r2 [274])
        (const_int 16 [0x10])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 117 116 118 11 (set (reg:SI 2 r2 [orig:150 _38 ] [150])
        (ashift:SI (reg:SI 2 r2 [274])
            (reg:SI 3 r3 [orig:149 _37 ] [149]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:35 147 {*arm_shiftsi3}
     (nil))
(insn 118 117 119 11 (set (reg:SI 3 r3 [275])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tmpisr+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 119 118 120 11 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (and:SI (reg:SI 3 r3 [275])
            (reg:SI 2 r2 [orig:150 _38 ] [150]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:15 90 {*arm_andsi3_insn}
     (nil))
(insn 120 119 121 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:151 _39 ] [151])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":797:6 273 {arm_cond_branch}
     (nil)
 -> 201)
;;  succ:       12 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 152 153 154 276
(note 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 12 (set (reg/f:SI 3 r3 [276])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":799:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 12 (set (reg/f:SI 3 r3 [orig:152 _40 ] [152])
        (mem/f:SI (reg/f:SI 3 r3 [276]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":799:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 125 124 126 12 (set (reg:SI 3 r3 [orig:153 _41 ] [153])
        (mem/v:SI (reg/f:SI 3 r3 [orig:152 _40 ] [152]) [1 _40->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":799:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 126 125 127 12 (set (reg:SI 3 r3 [orig:154 _42 ] [154])
        (and:SI (reg:SI 3 r3 [orig:153 _41 ] [153])
            (const_int 8 [0x8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":799:8 90 {*arm_andsi3_insn}
     (nil))
(insn 127 126 128 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:154 _42 ] [154])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":799:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 128 127 129 12 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":799:7 273 {arm_cond_branch}
     (nil)
 -> 201)
;;  succ:       13 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 155 156 157 158 159 277 278 279 280
(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 13 (set (reg/f:SI 3 r3 [277])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":802:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 131 130 132 13 (set (reg:SI 3 r3 [orig:155 _43 ] [155])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [277])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":802:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 132 131 133 13 (set (reg:SI 2 r2 [278])
        (const_int 16 [0x10])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":802:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 133 132 134 13 (set (reg:SI 2 r2 [orig:156 _44 ] [156])
        (ashift:SI (reg:SI 2 r2 [278])
            (reg:SI 3 r3 [orig:155 _43 ] [155]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":802:37 147 {*arm_shiftsi3}
     (nil))
(insn 134 133 135 13 (set (reg/f:SI 3 r3 [279])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":802:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 135 134 136 13 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [279])
                (const_int 8 [0x8])) [1 regs_141->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:156 _44 ] [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":802:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 136 135 137 13 (set (reg/f:SI 3 r3 [280])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":805:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 137 136 138 13 (set (reg/f:SI 3 r3 [orig:157 _45 ] [157])
        (mem/f:SI (reg/f:SI 3 r3 [280]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":805:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 138 137 139 13 (set (reg:SI 3 r3 [orig:158 _46 ] [158])
        (mem/v:SI (reg/f:SI 3 r3 [orig:157 _45 ] [157]) [1 _45->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":805:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 139 138 140 13 (set (reg:SI 3 r3 [orig:159 _47 ] [159])
        (and:SI (reg:SI 3 r3 [orig:158 _46 ] [158])
            (const_int 262144 [0x40000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":805:32 90 {*arm_andsi3_insn}
     (nil))
(insn 140 139 141 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:159 _47 ] [159])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":805:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 141 140 142 13 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":805:9 273 {arm_cond_branch}
     (nil)
 -> 174)
;;  succ:       14 (FALLTHRU)
;;              19
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 160 161 162 281
(note 142 141 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 14 (set (reg/f:SI 3 r3 [281])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":808:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 144 143 145 14 (set (reg/f:SI 3 r3 [orig:160 _48 ] [160])
        (mem/f:SI (reg/f:SI 3 r3 [281]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":808:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 145 144 146 14 (set (reg:SI 3 r3 [orig:161 _49 ] [161])
        (mem/v:SI (reg/f:SI 3 r3 [orig:160 _48 ] [160]) [1 _48->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":808:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 146 145 147 14 (set (reg:SI 3 r3 [orig:162 _50 ] [162])
        (and:SI (reg:SI 3 r3 [orig:161 _49 ] [161])
            (const_int 524288 [0x80000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":808:32 90 {*arm_andsi3_insn}
     (nil))
(insn 147 146 148 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:162 _50 ] [162])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":808:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 148 147 149 14 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":808:11 273 {arm_cond_branch}
     (nil)
 -> 161)
;;  succ:       15 (FALLTHRU)
;;              17
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 163 282
(note 149 148 150 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 15 (set (reg/f:SI 3 r3 [282])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":810:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 151 150 152 15 (set (reg/f:SI 3 r3 [orig:163 _51 ] [163])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [282])
                (const_int 64 [0x40])) [6 hdma_140(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":810:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 152 151 153 15 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:163 _51 ] [163])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":810:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 153 152 154 15 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":810:13 273 {arm_cond_branch}
     (nil)
 -> 201)
;;  succ:       16 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 164 283
(note 154 153 155 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 16 (set (reg/f:SI 3 r3 [283])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":813:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 156 155 157 16 (set (reg/f:SI 3 r3 [orig:164 _52 ] [164])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [283])
                (const_int 64 [0x40])) [6 hdma_140(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":813:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 157 156 158 16 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":813:13 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 158 157 436 16 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:164 _52 ] [164]) [0 *_52 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":813:13 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 436 158 437 16 (set (pc)
        (label_ref 201)) 284 {*arm_jump}
     (nil)
 -> 201)
;;  succ:       23 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 437 436 161)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 165 284
(code_label 161 437 162 17 58 (nil) [1 uses])
(note 162 161 163 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 17 (set (reg/f:SI 3 r3 [284])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":819:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 164 163 165 17 (set (reg/f:SI 3 r3 [orig:165 _53 ] [165])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [284])
                (const_int 72 [0x48])) [6 hdma_140(D)->XferM1HalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":819:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 165 164 166 17 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:165 _53 ] [165])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":819:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 166 165 167 17 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":819:13 273 {arm_cond_branch}
     (nil)
 -> 201)
;;  succ:       18 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 166 285
(note 167 166 168 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 18 (set (reg/f:SI 3 r3 [285])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":822:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 169 168 170 18 (set (reg/f:SI 3 r3 [orig:166 _54 ] [166])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [285])
                (const_int 72 [0x48])) [6 hdma_140(D)->XferM1HalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":822:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 170 169 171 18 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":822:13 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 171 170 438 18 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:166 _54 ] [166]) [0 *_54 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":822:13 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 438 171 439 18 (set (pc)
        (label_ref 201)) 284 {*arm_jump}
     (nil)
 -> 201)
;;  succ:       23 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 439 438 174)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 167 168 169 286
(code_label 174 439 175 19 57 (nil) [1 uses])
(note 175 174 176 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 19 (set (reg/f:SI 3 r3 [286])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":829:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 177 176 178 19 (set (reg/f:SI 3 r3 [orig:167 _55 ] [167])
        (mem/f:SI (reg/f:SI 3 r3 [286]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":829:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 178 177 179 19 (set (reg:SI 3 r3 [orig:168 _56 ] [168])
        (mem/v:SI (reg/f:SI 3 r3 [orig:167 _55 ] [167]) [1 _55->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":829:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 179 178 180 19 (set (reg:SI 3 r3 [orig:169 _57 ] [169])
        (and:SI (reg:SI 3 r3 [orig:168 _56 ] [168])
            (const_int 256 [0x100]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":829:32 90 {*arm_andsi3_insn}
     (nil))
(insn 180 179 181 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:169 _57 ] [169])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":829:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 181 180 182 19 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":829:11 273 {arm_cond_branch}
     (nil)
 -> 190)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 170 171 172 173 287 288
(note 182 181 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 20 (set (reg/f:SI 3 r3 [287])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 184 183 185 20 (set (reg/f:SI 3 r3 [orig:170 _58 ] [170])
        (mem/f:SI (reg/f:SI 3 r3 [287]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 185 184 186 20 (set (reg:SI 2 r2 [orig:171 _59 ] [171])
        (mem/v:SI (reg/f:SI 3 r3 [orig:170 _58 ] [170]) [1 _58->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 186 185 187 20 (set (reg/f:SI 3 r3 [288])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 187 186 188 20 (set (reg/f:SI 3 r3 [orig:172 _60 ] [172])
        (mem/f:SI (reg/f:SI 3 r3 [288]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 188 187 189 20 (set (reg:SI 2 r2 [orig:173 _61 ] [173])
        (and:SI (reg:SI 2 r2 [orig:171 _59 ] [171])
            (const_int -9 [0xfffffffffffffff7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:31 90 {*arm_andsi3_insn}
     (nil))
(insn 189 188 190 20 (set (mem/v:SI (reg/f:SI 3 r3 [orig:172 _60 ] [172]) [1 _60->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:173 _61 ] [173])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":832:31 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 174 289
(code_label 190 189 191 21 59 (nil) [1 uses])
(note 191 190 192 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 21 (set (reg/f:SI 3 r3 [289])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":835:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 193 192 194 21 (set (reg/f:SI 3 r3 [orig:174 _62 ] [174])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [289])
                (const_int 64 [0x40])) [6 hdma_140(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":835:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 194 193 195 21 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:174 _62 ] [174])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":835:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 195 194 196 21 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":835:11 273 {arm_cond_branch}
     (nil)
 -> 201)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 175 290
(note 196 195 197 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 22 (set (reg/f:SI 3 r3 [290])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":838:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 198 197 199 22 (set (reg/f:SI 3 r3 [orig:175 _63 ] [175])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [290])
                (const_int 64 [0x40])) [6 hdma_140(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":838:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 199 198 200 22 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":838:11 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 200 199 201 22 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:175 _63 ] [175]) [0 *_63 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":838:11 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       11
;;              12
;;              17
;;              21
;;              22 (FALLTHRU)
;;              16 [always] 
;;              15
;;              18 [always] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 176 177 178 291 292 293
(code_label 201 200 202 23 56 (nil) [7 uses])
(note 202 201 203 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 23 (set (reg/f:SI 3 r3 [291])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 204 203 205 23 (set (reg:SI 3 r3 [orig:176 _64 ] [176])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [291])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:42 749 {*thumb2_movsi_vfp}
     (nil))
(insn 205 204 206 23 (set (reg:SI 2 r2 [292])
        (const_int 32 [0x20])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 206 205 207 23 (set (reg:SI 2 r2 [orig:177 _65 ] [177])
        (ashift:SI (reg:SI 2 r2 [292])
            (reg:SI 3 r3 [orig:176 _64 ] [176]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:35 147 {*arm_shiftsi3}
     (nil))
(insn 207 206 208 23 (set (reg:SI 3 r3 [293])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 tmpisr+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 208 207 209 23 (set (reg:SI 3 r3 [orig:178 _66 ] [178])
        (and:SI (reg:SI 3 r3 [293])
            (reg:SI 2 r2 [orig:177 _65 ] [177]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:15 90 {*arm_andsi3_insn}
     (nil))
(insn 209 208 210 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:178 _66 ] [178])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 210 209 211 23 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":844:6 273 {arm_cond_branch}
     (nil)
 -> 368)
;;  succ:       24 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 179 180 181 294
(note 211 210 212 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 24 (set (reg/f:SI 3 r3 [294])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":846:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 213 212 214 24 (set (reg/f:SI 3 r3 [orig:179 _67 ] [179])
        (mem/f:SI (reg/f:SI 3 r3 [294]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":846:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 214 213 215 24 (set (reg:SI 3 r3 [orig:180 _68 ] [180])
        (mem/v:SI (reg/f:SI 3 r3 [orig:179 _67 ] [179]) [1 _67->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":846:8 749 {*thumb2_movsi_vfp}
     (nil))
(insn 215 214 216 24 (set (reg:SI 3 r3 [orig:181 _69 ] [181])
        (and:SI (reg:SI 3 r3 [orig:180 _68 ] [180])
            (const_int 16 [0x10]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":846:8 90 {*arm_andsi3_insn}
     (nil))
(insn 216 215 217 24 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:181 _69 ] [181])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":846:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 217 216 218 24 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":846:7 273 {arm_cond_branch}
     (nil)
 -> 368)
;;  succ:       25 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 182 183 184 295 296 297 298 300
(note 218 217 219 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 25 (set (reg/f:SI 3 r3 [295])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":849:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 220 219 221 25 (set (reg:SI 3 r3 [orig:182 _70 ] [182])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [295])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":849:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 221 220 222 25 (set (reg:SI 2 r2 [296])
        (const_int 32 [0x20])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":849:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 222 221 223 25 (set (reg:SI 2 r2 [orig:183 _71 ] [183])
        (ashift:SI (reg:SI 2 r2 [296])
            (reg:SI 3 r3 [orig:182 _70 ] [182]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":849:37 147 {*arm_shiftsi3}
     (nil))
(insn 223 222 224 25 (set (reg/f:SI 3 r3 [297])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":849:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 224 223 225 25 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [297])
                (const_int 8 [0x8])) [1 regs_141->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:183 _71 ] [183])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":849:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 225 224 227 25 (set (reg/f:SI 3 r3 [298])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":851:37 749 {*thumb2_movsi_vfp}
     (nil))
(insn 227 225 228 25 (set (reg:QI 3 r3 [300])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [298])
                (const_int 53 [0x35])) [0 hdma_140(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":851:37 263 {*arm_movqi_insn}
     (nil))
(insn 228 227 229 25 (set (reg:SI 3 r3 [orig:184 _72 ] [184])
        (zero_extend:SI (reg:QI 3 r3 [300]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":851:37 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 229 228 230 25 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:184 _72 ] [184])
            (const_int 5 [0x5]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":851:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 230 229 231 25 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":851:9 273 {arm_cond_branch}
     (nil)
 -> 293)
;;  succ:       26 (FALLTHRU)
;;              31
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 185 186 187 188 189 190 191 192 193 301 302 303 304 305
(note 231 230 232 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 26 (set (reg/f:SI 3 r3 [301])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 233 232 234 26 (set (reg/f:SI 3 r3 [orig:185 _73 ] [185])
        (mem/f:SI (reg/f:SI 3 r3 [301]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 234 233 235 26 (set (reg:SI 2 r2 [orig:186 _74 ] [186])
        (mem/v:SI (reg/f:SI 3 r3 [orig:185 _73 ] [185]) [1 _73->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 235 234 236 26 (set (reg/f:SI 3 r3 [302])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 236 235 237 26 (set (reg/f:SI 3 r3 [orig:187 _75 ] [187])
        (mem/f:SI (reg/f:SI 3 r3 [302]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 237 236 238 26 (set (reg:SI 2 r2 [orig:188 _76 ] [188])
        (and:SI (reg:SI 2 r2 [orig:186 _74 ] [186])
            (const_int -23 [0xffffffffffffffe9]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:29 90 {*arm_andsi3_insn}
     (nil))
(insn 238 237 239 26 (set (mem/v:SI (reg/f:SI 3 r3 [orig:187 _75 ] [187]) [1 _75->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:188 _76 ] [188])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":854:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 239 238 240 26 (set (reg/f:SI 3 r3 [303])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 240 239 241 26 (set (reg/f:SI 3 r3 [orig:189 _77 ] [189])
        (mem/f:SI (reg/f:SI 3 r3 [303]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 241 240 242 26 (set (reg:SI 2 r2 [orig:190 _78 ] [190])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:189 _77 ] [189])
                (const_int 20 [0x14])) [1 _77->FCR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 242 241 243 26 (set (reg/f:SI 3 r3 [304])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 243 242 244 26 (set (reg/f:SI 3 r3 [orig:191 _79 ] [191])
        (mem/f:SI (reg/f:SI 3 r3 [304]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 244 243 245 26 (set (reg:SI 2 r2 [orig:192 _80 ] [192])
        (and:SI (reg:SI 2 r2 [orig:190 _78 ] [190])
            (const_int -129 [0xffffffffffffff7f]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:29 90 {*arm_andsi3_insn}
     (nil))
(insn 245 244 246 26 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:191 _79 ] [191])
                (const_int 20 [0x14])) [1 _79->FCR+0 S4 A32])
        (reg:SI 2 r2 [orig:192 _80 ] [192])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":855:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 246 245 247 26 (set (reg/f:SI 3 r3 [305])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 247 246 248 26 (set (reg/f:SI 3 r3 [orig:193 _81 ] [193])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [305])
                (const_int 64 [0x40])) [6 hdma_140(D)->XferHalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 248 247 249 26 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:193 _81 ] [193])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 249 248 250 26 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:11 273 {arm_cond_branch}
     (nil)
 -> 255)
;;  succ:       28
;;              27 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 194 306
(note 250 249 251 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 27 (set (reg/f:SI 3 r3 [306])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:57 749 {*thumb2_movsi_vfp}
     (nil))
(insn 252 251 253 27 (set (reg/f:SI 3 r3 [orig:194 _82 ] [194])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [306])
                (const_int 72 [0x48])) [6 hdma_140(D)->XferM1HalfCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:57 749 {*thumb2_movsi_vfp}
     (nil))
(insn 253 252 254 27 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:194 _82 ] [194])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:49 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 254 253 255 27 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":857:49 273 {arm_cond_branch}
     (nil)
 -> 264)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       26
;;              27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 195 196 197 198 307 308
(code_label 255 254 256 28 62 (nil) [1 uses])
(note 256 255 257 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 28 (set (reg/f:SI 3 r3 [307])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 258 257 259 28 (set (reg/f:SI 3 r3 [orig:195 _83 ] [195])
        (mem/f:SI (reg/f:SI 3 r3 [307]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 259 258 260 28 (set (reg:SI 2 r2 [orig:196 _84 ] [196])
        (mem/v:SI (reg/f:SI 3 r3 [orig:195 _83 ] [195]) [1 _83->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 260 259 261 28 (set (reg/f:SI 3 r3 [308])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 261 260 262 28 (set (reg/f:SI 3 r3 [orig:197 _85 ] [197])
        (mem/f:SI (reg/f:SI 3 r3 [308]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 262 261 263 28 (set (reg:SI 2 r2 [orig:198 _86 ] [198])
        (and:SI (reg:SI 2 r2 [orig:196 _84 ] [196])
            (const_int -9 [0xfffffffffffffff7]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:31 90 {*arm_andsi3_insn}
     (nil))
(insn 263 262 264 28 (set (mem/v:SI (reg/f:SI 3 r3 [orig:197 _85 ] [197]) [1 _85->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:198 _86 ] [198])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":859:31 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       27
;;              28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 199 200 201 309 310 311 312 313 314 315 316 317 318
(code_label 264 263 265 29 63 (nil) [1 uses])
(note 265 264 266 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 29 (set (reg/f:SI 3 r3 [309])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":863:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 267 266 268 29 (set (reg:SI 3 r3 [orig:199 _87 ] [199])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [309])
                (const_int 92 [0x5c])) [1 hdma_140(D)->StreamIndex+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":863:35 749 {*thumb2_movsi_vfp}
     (nil))
(insn 268 267 269 29 (set (reg:SI 2 r2 [310])
        (const_int 63 [0x3f])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":863:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 269 268 270 29 (set (reg:SI 2 r2 [orig:200 _88 ] [200])
        (ashift:SI (reg:SI 2 r2 [310])
            (reg:SI 3 r3 [orig:199 _87 ] [199]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":863:28 147 {*arm_shiftsi3}
     (nil))
(insn 270 269 271 29 (set (reg/f:SI 3 r3 [311])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 16 [0x10])) [9 regs+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":863:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 271 270 272 29 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [311])
                (const_int 8 [0x8])) [1 regs_141->IFCR+0 S4 A32])
        (reg:SI 2 r2 [orig:200 _88 ] [200])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":863:20 749 {*thumb2_movsi_vfp}
     (nil))
(insn 272 271 273 29 (set (reg/f:SI 3 r3 [312])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":866:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 273 272 275 29 (set (reg:SI 2 r2 [313])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":866:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 275 273 276 29 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [312])
                (const_int 53 [0x35])) [0 hdma_140(D)->State+0 S1 A8])
        (reg:QI 2 r2 [314])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":866:21 263 {*arm_movqi_insn}
     (nil))
(insn 276 275 277 29 (set (reg/f:SI 3 r3 [315])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":869:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 277 276 279 29 (set (reg:SI 2 r2 [316])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":869:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 279 277 280 29 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [315])
                (const_int 52 [0x34])) [0 hdma_140(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [317])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":869:9 263 {*arm_movqi_insn}
     (nil))
(insn 280 279 281 29 (set (reg/f:SI 3 r3 [318])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":871:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 281 280 282 29 (set (reg/f:SI 3 r3 [orig:201 _89 ] [201])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [318])
                (const_int 80 [0x50])) [6 hdma_140(D)->XferAbortCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":871:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 282 281 283 29 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:201 _89 ] [201])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":871:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 283 282 284 29 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 449)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":871:11 273 {arm_cond_branch}
     (nil)
 -> 449)
;;  succ:       30 (FALLTHRU)
;;              50 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:875:9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 202 319
(note 284 283 285 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 30 (set (reg/f:SI 3 r3 [319])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":873:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 286 285 287 30 (set (reg/f:SI 3 r3 [orig:202 _90 ] [202])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [319])
                (const_int 80 [0x50])) [6 hdma_140(D)->XferAbortCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":873:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 287 286 288 30 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":873:11 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 288 287 440 30 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:202 _90 ] [202]) [0 *_90 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":873:11 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 440 288 441 30 (set (pc)
        (label_ref:SI 449)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":875:9 284 {*arm_jump}
     (nil)
 -> 449)
;;  succ:       50 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:875:9
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 441 440 293)
;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       25
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 203 204 205 320
(code_label 293 441 294 31 61 (nil) [1 uses])
(note 294 293 295 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 31 (set (reg/f:SI 3 r3 [320])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":878:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 296 295 297 31 (set (reg/f:SI 3 r3 [orig:203 _91 ] [203])
        (mem/f:SI (reg/f:SI 3 r3 [320]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":878:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 297 296 298 31 (set (reg:SI 3 r3 [orig:204 _92 ] [204])
        (mem/v:SI (reg/f:SI 3 r3 [orig:203 _91 ] [203]) [1 _91->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":878:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 298 297 299 31 (set (reg:SI 3 r3 [orig:205 _93 ] [205])
        (and:SI (reg:SI 3 r3 [orig:204 _92 ] [204])
            (const_int 262144 [0x40000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":878:32 90 {*arm_andsi3_insn}
     (nil))
(insn 299 298 300 31 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:205 _93 ] [205])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":878:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 300 299 301 31 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":878:9 273 {arm_cond_branch}
     (nil)
 -> 333)
;;  succ:       32 (FALLTHRU)
;;              37
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 206 207 208 321
(note 301 300 302 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 32 (set (reg/f:SI 3 r3 [321])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":881:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 303 302 304 32 (set (reg/f:SI 3 r3 [orig:206 _94 ] [206])
        (mem/f:SI (reg/f:SI 3 r3 [321]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":881:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 304 303 305 32 (set (reg:SI 3 r3 [orig:207 _95 ] [207])
        (mem/v:SI (reg/f:SI 3 r3 [orig:206 _94 ] [206]) [1 _94->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":881:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 305 304 306 32 (set (reg:SI 3 r3 [orig:208 _96 ] [208])
        (and:SI (reg:SI 3 r3 [orig:207 _95 ] [207])
            (const_int 524288 [0x80000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":881:32 90 {*arm_andsi3_insn}
     (nil))
(insn 306 305 307 32 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:208 _96 ] [208])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":881:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 307 306 308 32 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":881:11 273 {arm_cond_branch}
     (nil)
 -> 320)
;;  succ:       33 (FALLTHRU)
;;              35
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 209 322
(note 308 307 309 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 33 (set (reg/f:SI 3 r3 [322])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":883:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 310 309 311 33 (set (reg/f:SI 3 r3 [orig:209 _97 ] [209])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [322])
                (const_int 68 [0x44])) [6 hdma_140(D)->XferM1CpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":883:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 311 310 312 33 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:209 _97 ] [209])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":883:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 312 311 313 33 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":883:13 273 {arm_cond_branch}
     (nil)
 -> 368)
;;  succ:       34 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 210 323
(note 313 312 314 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 34 (set (reg/f:SI 3 r3 [323])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":886:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 315 314 316 34 (set (reg/f:SI 3 r3 [orig:210 _98 ] [210])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [323])
                (const_int 68 [0x44])) [6 hdma_140(D)->XferM1CpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":886:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 316 315 317 34 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":886:13 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 317 316 442 34 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:210 _98 ] [210]) [0 *_98 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":886:13 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 442 317 443 34 (set (pc)
        (label_ref 368)) 284 {*arm_jump}
     (nil)
 -> 368)
;;  succ:       41 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 443 442 320)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       32
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 211 324
(code_label 320 443 321 35 67 (nil) [1 uses])
(note 321 320 322 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 35 (set (reg/f:SI 3 r3 [324])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":892:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 323 322 324 35 (set (reg/f:SI 3 r3 [orig:211 _99 ] [211])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [324])
                (const_int 60 [0x3c])) [6 hdma_140(D)->XferCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":892:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 324 323 325 35 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:211 _99 ] [211])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":892:13 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 325 324 326 35 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":892:13 273 {arm_cond_branch}
     (nil)
 -> 368)
;;  succ:       36 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 212 325
(note 326 325 327 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 36 (set (reg/f:SI 3 r3 [325])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":895:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 328 327 329 36 (set (reg/f:SI 3 r3 [orig:212 _100 ] [212])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [325])
                (const_int 60 [0x3c])) [6 hdma_140(D)->XferCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":895:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 329 328 330 36 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":895:13 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 330 329 444 36 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:212 _100 ] [212]) [0 *_100 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":895:13 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 444 330 445 36 (set (pc)
        (label_ref 368)) 284 {*arm_jump}
     (nil)
 -> 368)
;;  succ:       41 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 445 444 333)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       31
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 213 214 215 326
(code_label 333 445 334 37 66 (nil) [1 uses])
(note 334 333 335 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 37 (set (reg/f:SI 3 r3 [326])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":902:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 336 335 337 37 (set (reg/f:SI 3 r3 [orig:213 _101 ] [213])
        (mem/f:SI (reg/f:SI 3 r3 [326]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":902:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 337 336 338 37 (set (reg:SI 3 r3 [orig:214 _102 ] [214])
        (mem/v:SI (reg/f:SI 3 r3 [orig:213 _101 ] [213]) [1 _101->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":902:27 749 {*thumb2_movsi_vfp}
     (nil))
(insn 338 337 339 37 (set (reg:SI 3 r3 [orig:215 _103 ] [215])
        (and:SI (reg:SI 3 r3 [orig:214 _102 ] [214])
            (const_int 256 [0x100]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":902:32 90 {*arm_andsi3_insn}
     (nil))
(insn 339 338 340 37 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:215 _103 ] [215])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":902:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 340 339 341 37 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 357)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":902:11 273 {arm_cond_branch}
     (nil)
 -> 357)
;;  succ:       38 (FALLTHRU)
;;              39
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 216 217 218 219 327 328 329 330 331 332 333 334
(note 341 340 342 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 38 (set (reg/f:SI 3 r3 [327])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 343 342 344 38 (set (reg/f:SI 3 r3 [orig:216 _104 ] [216])
        (mem/f:SI (reg/f:SI 3 r3 [327]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 344 343 345 38 (set (reg:SI 2 r2 [orig:217 _105 ] [217])
        (mem/v:SI (reg/f:SI 3 r3 [orig:216 _104 ] [216]) [1 _104->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 345 344 346 38 (set (reg/f:SI 3 r3 [328])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 346 345 347 38 (set (reg/f:SI 3 r3 [orig:218 _106 ] [218])
        (mem/f:SI (reg/f:SI 3 r3 [328]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 347 346 348 38 (set (reg:SI 2 r2 [orig:219 _107 ] [219])
        (and:SI (reg:SI 2 r2 [orig:217 _105 ] [217])
            (const_int -17 [0xffffffffffffffef]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:31 90 {*arm_andsi3_insn}
     (nil))
(insn 348 347 349 38 (set (mem/v:SI (reg/f:SI 3 r3 [orig:218 _106 ] [218]) [1 _106->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:219 _107 ] [219])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":905:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 349 348 350 38 (set (reg/f:SI 3 r3 [329])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":908:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 350 349 352 38 (set (reg:SI 2 r2 [330])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":908:23 749 {*thumb2_movsi_vfp}
     (nil))
(insn 352 350 353 38 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [329])
                (const_int 53 [0x35])) [0 hdma_140(D)->State+0 S1 A8])
        (reg:QI 2 r2 [331])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":908:23 263 {*arm_movqi_insn}
     (nil))
(insn 353 352 354 38 (set (reg/f:SI 3 r3 [332])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":911:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 354 353 356 38 (set (reg:SI 2 r2 [333])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":911:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 356 354 357 38 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [332])
                (const_int 52 [0x34])) [0 hdma_140(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [334])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":911:11 263 {*arm_movqi_insn}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       37
;;              38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 220 335
(code_label 357 356 358 39 68 (nil) [1 uses])
(note 358 357 359 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 39 (set (reg/f:SI 3 r3 [335])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":914:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 360 359 361 39 (set (reg/f:SI 3 r3 [orig:220 _108 ] [220])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [335])
                (const_int 60 [0x3c])) [6 hdma_140(D)->XferCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":914:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 361 360 362 39 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:220 _108 ] [220])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":914:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 362 361 363 39 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":914:11 273 {arm_cond_branch}
     (nil)
 -> 368)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 221 336
(note 363 362 364 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 40 (set (reg/f:SI 3 r3 [336])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":917:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 365 364 366 40 (set (reg/f:SI 3 r3 [orig:221 _109 ] [221])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [336])
                (const_int 60 [0x3c])) [6 hdma_140(D)->XferCpltCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":917:15 749 {*thumb2_movsi_vfp}
     (nil))
(insn 366 365 367 40 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":917:11 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 367 366 368 40 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:221 _109 ] [221]) [0 *_109 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":917:11 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       23
;;              24
;;              35
;;              39
;;              40 (FALLTHRU)
;;              34 [always] 
;;              33
;;              36 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 222 337
(code_label 368 367 369 41 60 (nil) [7 uses])
(note 369 368 370 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 41 (set (reg/f:SI 3 r3 [337])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":924:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 371 370 372 41 (set (reg:SI 3 r3 [orig:222 _110 ] [222])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [337])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":924:10 749 {*thumb2_movsi_vfp}
     (nil))
(insn 372 371 373 41 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:222 _110 ] [222])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":924:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 373 372 374 41 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 434)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":924:5 273 {arm_cond_branch}
     (nil)
 -> 434)
;;  succ:       42 (FALLTHRU)
;;              49
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 223 224 338
(note 374 373 375 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 42 (set (reg/f:SI 3 r3 [338])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":926:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 376 375 377 42 (set (reg:SI 3 r3 [orig:223 _111 ] [223])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [338])
                (const_int 84 [0x54])) [1 hdma_140(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":926:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 377 376 378 42 (set (reg:SI 3 r3 [orig:224 _112 ] [224])
        (and:SI (reg:SI 3 r3 [orig:223 _111 ] [223])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":926:25 90 {*arm_andsi3_insn}
     (nil))
(insn 378 377 379 42 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:224 _112 ] [224])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":926:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 379 378 380 42 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":926:7 273 {arm_cond_branch}
     (nil)
 -> 421)
;;  succ:       43 (FALLTHRU)
;;              47
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 225 226 227 228 339 340 341 342 343
(note 380 379 381 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 43 (set (reg/f:SI 3 r3 [339])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":928:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 382 381 384 43 (set (reg:SI 2 r2 [340])
        (const_int 5 [0x5])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":928:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 384 382 385 43 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [339])
                (const_int 53 [0x35])) [0 hdma_140(D)->State+0 S1 A8])
        (reg:QI 2 r2 [341])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":928:19 263 {*arm_movqi_insn}
     (nil))
(insn 385 384 386 43 (set (reg/f:SI 3 r3 [342])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 386 385 387 43 (set (reg/f:SI 3 r3 [orig:225 _113 ] [225])
        (mem/f:SI (reg/f:SI 3 r3 [342]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 387 386 388 43 (set (reg:SI 2 r2 [orig:226 _114 ] [226])
        (mem/v:SI (reg/f:SI 3 r3 [orig:225 _113 ] [225]) [1 _113->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 388 387 389 43 (set (reg/f:SI 3 r3 [343])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 389 388 390 43 (set (reg/f:SI 3 r3 [orig:227 _115 ] [227])
        (mem/f:SI (reg/f:SI 3 r3 [343]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 390 389 391 43 (set (reg:SI 2 r2 [orig:228 _116 ] [228])
        (and:SI (reg:SI 2 r2 [orig:226 _114 ] [226])
            (const_int -2 [0xfffffffffffffffe]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 90 {*arm_andsi3_insn}
     (nil))
(insn 391 390 408 43 (set (mem/v:SI (reg/f:SI 3 r3 [orig:227 _115 ] [227]) [1 _115->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:228 _116 ] [228])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":931:7 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       44 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;;              45 (DFS_BACK)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 229 230 344
(code_label 408 391 392 44 72 (nil) [1 uses])
(note 392 408 393 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 44 (set (reg:SI 3 r3 [orig:229 count.1_117 ] [229])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 count+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":935:13 749 {*thumb2_movsi_vfp}
     (nil))
(insn 394 393 395 44 (set (reg:SI 3 r3 [orig:230 _118 ] [230])
        (plus:SI (reg:SI 3 r3 [orig:229 count.1_117 ] [229])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":935:13 7 {*arm_addsi3}
     (nil))
(insn 395 394 396 44 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 count+0 S4 A64])
        (reg:SI 3 r3 [orig:230 _118 ] [230])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":935:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 396 395 397 44 (set (reg:SI 2 r2 [344])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 20 [0x14])) [1 timeout+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":935:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 397 396 398 44 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 2 r2 [344])
            (reg:SI 3 r3 [orig:230 _118 ] [230]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":935:12 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 398 397 403 44 (set (pc)
        (if_then_else (ltu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 455)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":935:12 273 {arm_cond_branch}
     (nil)
 -> 455)
;;  succ:       52 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:937:11
;;              45 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 51, flags: (RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 231 232 233 345
(note 403 398 404 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 45 (set (reg/f:SI 3 r3 [345])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":940:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 405 404 406 45 (set (reg/f:SI 3 r3 [orig:231 _120 ] [231])
        (mem/f:SI (reg/f:SI 3 r3 [345]) [3 hdma_140(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":940:18 749 {*thumb2_movsi_vfp}
     (nil))
(insn 406 405 407 45 (set (reg:SI 3 r3 [orig:232 _121 ] [232])
        (mem/v:SI (reg/f:SI 3 r3 [orig:231 _120 ] [231]) [1 _120->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":940:28 749 {*thumb2_movsi_vfp}
     (nil))
(insn 407 406 409 45 (set (reg:SI 3 r3 [orig:233 _122 ] [233])
        (and:SI (reg:SI 3 r3 [orig:232 _121 ] [232])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":940:33 90 {*arm_andsi3_insn}
     (nil))
(insn 409 407 410 45 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:233 _122 ] [233])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":940:48 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 410 409 451 45 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 408)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":940:48 273 {arm_cond_branch}
     (nil)
 -> 408)
;;  succ:       44 (DFS_BACK)
;;              51 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 45, next block 52, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 451 410 452 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(jump_insn 452 451 453 51 (set (pc)
        (label_ref 411)) 284 {*arm_jump}
     (nil)
 -> 411)
;;  succ:       46 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 453 452 455)
;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 46, flags: (RTL, MODIFIED)
;;  pred:       44 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:937:11
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 455 453 454 52 74 (nil) [1 uses])
(note 454 455 456 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 456 454 411 52 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":937:11 313 {nop}
     (nil))
;;  succ:       46 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 52, next block 47, flags: (RTL, MODIFIED)
;;  pred:       52 [always]  (FALLTHRU)
;;              51 [always] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 346 347 348 349 350 351
(code_label 411 456 412 46 71 (nil) [1 uses])
(note 412 411 413 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 46 (set (reg/f:SI 3 r3 [346])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":943:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 414 413 416 46 (set (reg:SI 2 r2 [347])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":943:19 749 {*thumb2_movsi_vfp}
     (nil))
(insn 416 414 417 46 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [346])
                (const_int 53 [0x35])) [0 hdma_140(D)->State+0 S1 A8])
        (reg:QI 2 r2 [348])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":943:19 263 {*arm_movqi_insn}
     (nil))
(insn 417 416 418 46 (set (reg/f:SI 3 r3 [349])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":946:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 418 417 420 46 (set (reg:SI 2 r2 [350])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":946:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 420 418 421 46 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [349])
                (const_int 52 [0x34])) [0 hdma_140(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [351])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":946:7 263 {*arm_movqi_insn}
     (nil))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       42
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 234 352
(code_label 421 420 422 47 69 (nil) [1 uses])
(note 422 421 423 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 47 (set (reg/f:SI 3 r3 [352])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":949:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 424 423 425 47 (set (reg/f:SI 3 r3 [orig:234 _123 ] [234])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [352])
                (const_int 76 [0x4c])) [6 hdma_140(D)->XferErrorCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":949:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 425 424 426 47 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:234 _123 ] [234])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":949:7 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 426 425 427 47 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 434)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":949:7 273 {arm_cond_branch}
     (nil)
 -> 434)
;;  succ:       48 (FALLTHRU)
;;              49
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 50, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 235 353
(note 427 426 428 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 48 (set (reg/f:SI 3 r3 [353])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":952:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 429 428 430 48 (set (reg/f:SI 3 r3 [orig:235 _124 ] [235])
        (mem/f:SI (plus:SI (reg/f:SI 3 r3 [353])
                (const_int 76 [0x4c])) [6 hdma_140(D)->XferErrorCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":952:11 749 {*thumb2_movsi_vfp}
     (nil))
(insn 430 429 431 48 (set (reg:SI 0 r0)
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":952:7 749 {*thumb2_movsi_vfp}
     (nil))
(call_insn 431 430 446 48 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:235 _124 ] [235]) [0 *_124 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":952:7 1008 {*call_reg_thumb2}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(jump_insn 446 431 447 48 (set (pc)
        (label_ref 434)) 284 {*arm_jump}
     (nil)
 -> 434)
;;  succ:       49
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 447 446 449)
;; basic block 50, loop depth 0, maybe hot
;;  prev block 48, next block 49, flags: (RTL, MODIFIED)
;;  pred:       29 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:875:9
;;              30 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:875:9
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 449 447 448 50 73 (nil) [2 uses])
(note 448 449 450 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 450 448 434 50 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":875:9 313 {nop}
     (nil))
;;  succ:       49 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 50, next block 1, flags: (RTL, MODIFIED)
;;  pred:       48
;;              50 [always]  (FALLTHRU)
;;              47
;;              41
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 434 450 435 49 52 (nil) [3 uses])
(note 435 434 458 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 458 435 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_RegisterCallback (HAL_DMA_RegisterCallback, funcdef_no=142, decl_uid=7199, cgraph_uid=147, symbol_order=146)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 5:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 26:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 29:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) r  (1) rI  (4) =&r {*thumb2_casesi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 43:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 50:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 64:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 71:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 78:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 85:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 94:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 100:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 109: point = 0, n_alt = -1
   Insn 108: point = 0, n_alt = -2
   Insn 104: point = 1, n_alt = -2
  BB 3
   Insn 111: point = 4, n_alt = -1
   Insn 18: point = 4, n_alt = 1
  BB 14
   Insn 101: point = 5, n_alt = 1
   Insn 100: point = 6, n_alt = 8
   Insn 99: point = 7, n_alt = 0
   Insn 98: point = 9, n_alt = 1
   Insn 97: point = 10, n_alt = 5
  BB 12
   Insn 125: point = 11, n_alt = -1
   Insn 85: point = 11, n_alt = 6
   Insn 84: point = 12, n_alt = 0
   Insn 83: point = 14, n_alt = 1
  BB 9
   Insn 119: point = 15, n_alt = -1
   Insn 64: point = 15, n_alt = 7
   Insn 63: point = 16, n_alt = 5
   Insn 62: point = 17, n_alt = 5
  BB 8
   Insn 117: point = 18, n_alt = -1
   Insn 57: point = 18, n_alt = 7
   Insn 56: point = 19, n_alt = 5
   Insn 55: point = 20, n_alt = 5
  BB 7
   Insn 115: point = 21, n_alt = -1
   Insn 50: point = 21, n_alt = 7
   Insn 49: point = 22, n_alt = 5
   Insn 48: point = 23, n_alt = 5
  BB 6
   Insn 113: point = 24, n_alt = -1
   Insn 43: point = 24, n_alt = 7
   Insn 42: point = 25, n_alt = 5
   Insn 41: point = 26, n_alt = 5
  BB 10
   Insn 121: point = 27, n_alt = -1
   Insn 71: point = 27, n_alt = 7
   Insn 70: point = 28, n_alt = 5
   Insn 69: point = 29, n_alt = 5
  BB 13
   Insn 94: point = 30, n_alt = 6
   Insn 93: point = 31, n_alt = 0
   Insn 92: point = 33, n_alt = 1
  BB 11
   Insn 123: point = 34, n_alt = -1
   Insn 78: point = 34, n_alt = 7
   Insn 77: point = 35, n_alt = 5
   Insn 76: point = 36, n_alt = 5
  BB 5
   Insn 35: point = 37, n_alt = 0
   Insn 34: point = 39, n_alt = 1
  BB 4
   Insn 32: point = 40, n_alt = -1
   Insn 31: point = 40, n_alt = 0
   Insn 30: point = 41, n_alt = 0
   Insn 29: point = 43, n_alt = 7
   Insn 27: point = 45, n_alt = 5
   Insn 26: point = 46, n_alt = 8
   Insn 25: point = 47, n_alt = 0
   Insn 24: point = 49, n_alt = 1
   Insn 23: point = 50, n_alt = 5
  BB 2
   Insn 16: point = 51, n_alt = -1
   Insn 15: point = 51, n_alt = 0
   Insn 14: point = 52, n_alt = 1
   Insn 13: point = 54, n_alt = 5
   Insn 12: point = 55, n_alt = 6
   Insn 11: point = 56, n_alt = 0
   Insn 10: point = 58, n_alt = 1
   Insn 5: point = 59, n_alt = 6
   Insn 4: point = 60, n_alt = 0
   Insn 6: point = 62, n_alt = 7
   Insn 3: point = 62, n_alt = -2
   Insn 2: point = 63, n_alt = 7
 r113: [51..52]
 r114: [40..41]
 r115: [38..39]
 r116: [2..5]
 r117: [0..1]
 r118: [61..62]
 r119: [59..60]
 r120: [57..58]
 r121: [55..56]
 r122: [53..54]
 r123: [46..50]
 r124: [48..49]
 r125: [46..47]
 r126: [44..45]
 r128: [42..43]
 r129: [24..26]
 r130: [24..25]
 r131: [21..23]
 r132: [21..22]
 r133: [18..20]
 r134: [18..19]
 r135: [15..17]
 r136: [15..16]
 r137: [27..29]
 r138: [27..28]
 r139: [34..36]
 r140: [34..35]
 r141: [13..14]
 r142: [11..12]
 r143: [32..33]
 r144: [30..31]
 r145: [6..10]
 r146: [8..9]
 r147: [6..7]
 r149: [37..38]
Compressing live ranges: from 63 to 53 - 84%
Ranges after the compression:
 r113: [41..42]
 r114: [31..32]
 r115: [29..30]
 r116: [2..3]
 r117: [0..1]
 r118: [51..52]
 r119: [49..50]
 r120: [47..48]
 r121: [45..46]
 r122: [43..44]
 r123: [37..40]
 r124: [39..40]
 r125: [37..38]
 r126: [35..36]
 r128: [33..34]
 r129: [18..19]
 r130: [18..19]
 r131: [16..17]
 r132: [16..17]
 r133: [14..15]
 r134: [14..15]
 r135: [12..13]
 r136: [12..13]
 r137: [20..21]
 r138: [20..21]
 r139: [26..27]
 r140: [26..27]
 r141: [10..11]
 r142: [8..9]
 r143: [24..25]
 r144: [22..23]
 r145: [4..7]
 r146: [6..7]
 r147: [4..5]
 r149: [28..29]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=24, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=24, prev_offset=24)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 101
changing reg in insn 18
changing reg in insn 104
changing reg in insn 104
changing reg in insn 108
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 23
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 41
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 48
changing reg in insn 50
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 69
changing reg in insn 71
changing reg in insn 70
changing reg in insn 71
changing reg in insn 76
changing reg in insn 78
changing reg in insn 77
changing reg in insn 78
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 97
changing reg in insn 100
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 35
deleting insn with uid = 4.
deleting insn with uid = 11.
deleting insn with uid = 25.
deleting insn with uid = 84.
deleting insn with uid = 93.
deleting insn with uid = 99.
deleting insn with uid = 104.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_RegisterCallback

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={10d,9u} r3={21d,20u} r7={1d,39u} r13={1d,15u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={3d,2u} r102={1d,1u} 
;;    total ref usage 147{57d,90u,0e} in 57{57 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 118 119 120 121 122
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":968:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 6 2 (set (reg:SI 3 r3 [118])
        (reg:SI 1 r1 [ CallbackID ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":968:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 6 3 5 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])
        (reg:SI 2 r2 [ pCallback ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":968:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 6 7 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 11 [0xb])) [0 CallbackID+0 S1 A8])
        (reg:QI 3 r3 [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":968:1 263 {*arm_movqi_insn}
     (nil))
(note 7 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 12 2 (set (reg:SI 3 r3 [120])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":970:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 10 13 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":970:21 263 {*arm_movqi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [122])
                    (const_int 52 [0x34])) [0 hdma_12(D)->Lock+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 15 14 16 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 111 3 (set (reg:SI 3 r3 [orig:116 _6 ] [116])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 111 18 112 3 (set (pc)
        (label_ref 102)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 284 {*arm_jump}
     (nil)
 -> 102)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:973:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116

(barrier 112 111 21)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 123 124 125 126 128
(code_label 21 112 22 4 78 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 23 26 4 (set (reg:SI 2 r2 [124])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 24 27 4 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 52 [0x34])) [0 hdma_12(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":973:3 263 {*arm_movqi_insn}
     (nil))
(insn 27 26 29 4 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":975:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 27 30 4 (set (reg:QI 3 r3 [128])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 53 [0x35])) [0 hdma_12(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":975:33 263 {*arm_movqi_insn}
     (nil))
(insn 30 29 31 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [128]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":975:33 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 31 30 32 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":975:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":975:5 273 {arm_cond_branch}
     (nil)
 -> 90)
;;  succ:       5 (FALLTHRU)
;;              13
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 149
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 11 [0xb])) [0 CallbackID+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":977:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 35 34 36 5 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [orig:115 _3 ] [115])
                        (const_int 5 [0x5]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
                                (const_int 4 [0x4]))
                            (label_ref:SI 36)) [0  S4 A32])
                    (label_ref:SI 81)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 2 r2 [149]))
            (use (label_ref:SI 36))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":977:5 1030 {*thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 81 (nil))
 -> 36)
;;  succ:       12 [never]  count:0 (precise)
;;              6 [16.7% (adjusted)] 
;;              7 [16.7% (adjusted)] 
;;              8 [16.7% (adjusted)] 
;;              9 [16.7% (adjusted)] 
;;              10 [16.7% (adjusted)] 
;;              11 [16.7% (adjusted)] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; Insn is not within a basic block
(code_label 36 35 37 83 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 37 36 38 (addr_diff_vec:SI (label_ref:SI 36)
         [
            (label_ref:SI 39)
            (label_ref:SI 46)
            (label_ref:SI 53)
            (label_ref:SI 60)
            (label_ref:SI 67)
            (label_ref:SI 74)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 38 37 39)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [16.7% (adjusted)] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 129 130
(code_label 39 38 40 6 88 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":980:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 2 r2 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":980:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 113 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [129])
                (const_int 60 [0x3c])) [6 hdma_12(D)->XferCpltCallback+0 S4 A32])
        (reg/f:SI 2 r2 [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":980:30 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 113 43 114 6 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":981:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:981:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 114 113 46)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5 [16.7% (adjusted)] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131 132
(code_label 46 114 47 7 87 (nil) [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":984:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 50 7 (set (reg/f:SI 2 r2 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":984:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 115 7 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 64 [0x40])) [6 hdma_12(D)->XferHalfCpltCallback+0 S4 A32])
        (reg/f:SI 2 r2 [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":984:34 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 115 50 116 7 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":985:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:985:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 116 115 53)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5 [16.7% (adjusted)] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 133 134
(code_label 53 116 54 8 86 (nil) [1 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":988:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 57 8 (set (reg/f:SI 2 r2 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":988:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 56 117 8 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 68 [0x44])) [6 hdma_12(D)->XferM1CpltCallback+0 S4 A32])
        (reg/f:SI 2 r2 [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":988:32 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 117 57 118 8 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":989:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:989:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 118 117 60)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5 [16.7% (adjusted)] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136
(code_label 60 118 61 9 85 (nil) [1 uses])
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":992:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 64 9 (set (reg/f:SI 2 r2 [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":992:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 119 9 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 72 [0x48])) [6 hdma_12(D)->XferM1HalfCpltCallback+0 S4 A32])
        (reg/f:SI 2 r2 [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":992:36 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 119 64 120 9 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":993:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:993:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 120 119 67)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       5 [16.7% (adjusted)] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137 138
(code_label 67 120 68 10 84 (nil) [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":996:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 71 10 (set (reg/f:SI 2 r2 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":996:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 71 70 121 10 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 76 [0x4c])) [6 hdma_12(D)->XferErrorCallback+0 S4 A32])
        (reg/f:SI 2 r2 [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":996:31 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 121 71 122 10 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":997:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:997:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 122 121 74)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       5 [16.7% (adjusted)] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 139 140
(code_label 74 122 75 11 82 (nil) [1 uses])
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1000:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 78 11 (set (reg/f:SI 2 r2 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [6 pCallback+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1000:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 78 77 123 11 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 80 [0x50])) [6 hdma_12(D)->XferAbortCallback+0 S4 A32])
        (reg/f:SI 2 r2 [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1000:31 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 123 78 124 11 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1001:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1001:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 124 123 81)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       5 [never]  count:0 (precise)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 141 142
(code_label 81 124 82 12 81 (nil) [1 uses])
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 85 12 (set (reg:SI 3 r3 [141])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1005:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 83 125 12 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1005:14 263 {*arm_movqi_insn}
     (nil))
(jump_insn 125 85 126 12 (set (pc)
        (label_ref 95)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1006:7 284 {*arm_jump}
     (nil)
 -> 95)
;;  succ:       14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1006:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 126 125 90)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 143 144
(code_label 90 126 91 13 80 (nil) [1 uses])
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 94 13 (set (reg:SI 3 r3 [143])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1012:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 94 92 95 13 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 23 [0x17])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1012:12 263 {*arm_movqi_insn}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       11 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1001:7
;;              13 (FALLTHRU)
;;              10 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:997:7
;;              6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:981:7
;;              7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:985:7
;;              8 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:989:7
;;              9 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:993:7
;;              12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1006:7
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116 145 146 147
(code_label 95 94 96 14 90 (nil) [7 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg/f:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1016:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 100 14 (set (reg:SI 2 r2 [146])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1016:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 100 98 101 14 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [145])
                (const_int 52 [0x34])) [0 hdma_12(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [147])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1016:3 263 {*arm_movqi_insn}
     (nil))
(insn 101 100 102 14 (set (reg:SI 3 r3 [orig:116 _6 ] [116])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 23 [0x17])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1018:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       15 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1018:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1018:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:973:3
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116
;; lr  def 	 0 [r0] 117
(code_label 102 101 103 15 79 (nil) [1 uses])
(note 103 102 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 108 103 109 15 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1019:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 109 108 127 15 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1019:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 127 109 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_UnRegisterCallback (HAL_DMA_UnRegisterCallback, funcdef_no=143, decl_uid=7202, cgraph_uid=148, symbol_order=147)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 5:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) r  (1) rI  (4) =&r {*thumb2_casesi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 42:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 47:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 49:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 56:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 63:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 84:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 85:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 87:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 88:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 90:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 91:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 93:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 96:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) I {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 99:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 106:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 115:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=6,losers=1,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=9,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 121:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 122:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16

********** Pseudo live ranges #1: **********

  BB 16
   Insn 130: point = 0, n_alt = -1
   Insn 129: point = 0, n_alt = -2
   Insn 125: point = 1, n_alt = -2
  BB 3
   Insn 132: point = 4, n_alt = -1
   Insn 17: point = 4, n_alt = 1
  BB 15
   Insn 122: point = 5, n_alt = 1
   Insn 121: point = 6, n_alt = 8
   Insn 120: point = 7, n_alt = 0
   Insn 119: point = 9, n_alt = 1
   Insn 118: point = 10, n_alt = 5
  BB 13
   Insn 148: point = 11, n_alt = -1
   Insn 106: point = 11, n_alt = 6
   Insn 105: point = 12, n_alt = 0
   Insn 104: point = 14, n_alt = 1
  BB 10
   Insn 142: point = 15, n_alt = -1
   Insn 70: point = 15, n_alt = 7
   Insn 69: point = 16, n_alt = 1
   Insn 68: point = 17, n_alt = 5
  BB 9
   Insn 140: point = 18, n_alt = -1
   Insn 63: point = 18, n_alt = 7
   Insn 62: point = 19, n_alt = 1
   Insn 61: point = 20, n_alt = 5
  BB 8
   Insn 138: point = 21, n_alt = -1
   Insn 56: point = 21, n_alt = 7
   Insn 55: point = 22, n_alt = 1
   Insn 54: point = 23, n_alt = 5
  BB 7
   Insn 136: point = 24, n_alt = -1
   Insn 49: point = 24, n_alt = 7
   Insn 48: point = 25, n_alt = 1
   Insn 47: point = 26, n_alt = 5
  BB 6
   Insn 134: point = 27, n_alt = -1
   Insn 42: point = 27, n_alt = 7
   Insn 41: point = 28, n_alt = 1
   Insn 40: point = 29, n_alt = 5
  BB 11
   Insn 144: point = 30, n_alt = -1
   Insn 77: point = 30, n_alt = 7
   Insn 76: point = 31, n_alt = 1
   Insn 75: point = 32, n_alt = 5
  BB 14
   Insn 115: point = 33, n_alt = 6
   Insn 114: point = 34, n_alt = 0
   Insn 113: point = 36, n_alt = 1
  BB 12
   Insn 146: point = 37, n_alt = -1
   Insn 99: point = 37, n_alt = 7
   Insn 98: point = 38, n_alt = 1
   Insn 97: point = 39, n_alt = 5
   Insn 96: point = 40, n_alt = 7
   Insn 95: point = 41, n_alt = 1
   Insn 94: point = 42, n_alt = 5
   Insn 93: point = 43, n_alt = 7
   Insn 92: point = 44, n_alt = 1
   Insn 91: point = 45, n_alt = 5
   Insn 90: point = 46, n_alt = 7
   Insn 89: point = 47, n_alt = 1
   Insn 88: point = 48, n_alt = 5
   Insn 87: point = 49, n_alt = 7
   Insn 86: point = 50, n_alt = 1
   Insn 85: point = 51, n_alt = 5
   Insn 84: point = 52, n_alt = 7
   Insn 83: point = 53, n_alt = 1
   Insn 82: point = 54, n_alt = 5
  BB 5
   Insn 34: point = 55, n_alt = 0
   Insn 33: point = 57, n_alt = 1
  BB 4
   Insn 31: point = 58, n_alt = -1
   Insn 30: point = 58, n_alt = 0
   Insn 29: point = 59, n_alt = 0
   Insn 28: point = 61, n_alt = 7
   Insn 26: point = 63, n_alt = 5
   Insn 25: point = 64, n_alt = 8
   Insn 24: point = 65, n_alt = 0
   Insn 23: point = 67, n_alt = 1
   Insn 22: point = 68, n_alt = 5
  BB 2
   Insn 15: point = 69, n_alt = -1
   Insn 14: point = 69, n_alt = 0
   Insn 13: point = 70, n_alt = 1
   Insn 12: point = 72, n_alt = 5
   Insn 11: point = 73, n_alt = 6
   Insn 10: point = 74, n_alt = 0
   Insn 9: point = 76, n_alt = 1
   Insn 5: point = 77, n_alt = 6
   Insn 4: point = 78, n_alt = 0
   Insn 3: point = 80, n_alt = -2
   Insn 2: point = 81, n_alt = 7
 r113: [69..70]
 r114: [58..59]
 r115: [56..57]
 r116: [2..5]
 r117: [0..1]
 r118: [79..80]
 r119: [77..78]
 r120: [75..76]
 r121: [73..74]
 r122: [71..72]
 r123: [64..68]
 r124: [66..67]
 r125: [64..65]
 r126: [62..63]
 r128: [60..61]
 r129: [27..29]
 r130: [27..28]
 r131: [24..26]
 r132: [24..25]
 r133: [21..23]
 r134: [21..22]
 r135: [18..20]
 r136: [18..19]
 r137: [15..17]
 r138: [15..16]
 r139: [30..32]
 r140: [30..31]
 r141: [52..54]
 r142: [52..53]
 r143: [49..51]
 r144: [49..50]
 r145: [46..48]
 r146: [46..47]
 r147: [43..45]
 r148: [43..44]
 r149: [40..42]
 r150: [40..41]
 r151: [37..39]
 r152: [37..38]
 r153: [13..14]
 r154: [11..12]
 r155: [35..36]
 r156: [33..34]
 r157: [6..10]
 r158: [8..9]
 r159: [6..7]
 r161: [55..56]
Compressing live ranges: from 81 to 65 - 80%
Ranges after the compression:
 r113: [53..54]
 r114: [43..44]
 r115: [41..42]
 r116: [2..3]
 r117: [0..1]
 r118: [63..64]
 r119: [61..62]
 r120: [59..60]
 r121: [57..58]
 r122: [55..56]
 r123: [49..52]
 r124: [51..52]
 r125: [49..50]
 r126: [47..48]
 r128: [45..46]
 r129: [20..21]
 r130: [20..21]
 r131: [18..19]
 r132: [18..19]
 r133: [16..17]
 r134: [16..17]
 r135: [14..15]
 r136: [14..15]
 r137: [12..13]
 r138: [12..13]
 r139: [22..23]
 r140: [22..23]
 r141: [38..39]
 r142: [38..39]
 r143: [36..37]
 r144: [36..37]
 r145: [34..35]
 r146: [34..35]
 r147: [32..33]
 r148: [32..33]
 r149: [30..31]
 r150: [30..31]
 r151: [28..29]
 r152: [28..29]
 r153: [10..11]
 r154: [8..9]
 r155: [26..27]
 r156: [24..25]
 r157: [4..7]
 r158: [6..7]
 r159: [4..5]
 r161: [40..41]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 122
changing reg in insn 17
changing reg in insn 125
changing reg in insn 125
changing reg in insn 129
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 22
changing reg in insn 25
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 47
changing reg in insn 49
changing reg in insn 48
changing reg in insn 49
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 56
changing reg in insn 61
changing reg in insn 63
changing reg in insn 62
changing reg in insn 63
changing reg in insn 68
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 82
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 87
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 93
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 96
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 99
changing reg in insn 98
changing reg in insn 99
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 118
changing reg in insn 121
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 34
deleting insn with uid = 4.
deleting insn with uid = 10.
deleting insn with uid = 24.
deleting insn with uid = 105.
deleting insn with uid = 114.
deleting insn with uid = 120.
deleting insn with uid = 125.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_UnRegisterCallback

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={16d,14u} r3={27d,26u} r7={1d,39u} r13={1d,16u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={3d,2u} r102={1d,1u} 
;;    total ref usage 171{69d,102u,0e} in 75{75 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 118 119 120 121 122
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1030:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [118])
        (reg:SI 1 r1 [ CallbackID ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1030:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 3 6 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 3 [0x3])) [0 CallbackID+0 S1 A8])
        (reg:QI 3 r3 [119])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1030:1 263 {*arm_movqi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 11 2 (set (reg:SI 3 r3 [120])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1031:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 9 12 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [121])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1031:21 263 {*arm_movqi_insn}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [122])
                    (const_int 52 [0x34])) [0 hdma_12(D)->Lock+0 S1 A32]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 273 {arm_cond_branch}
     (nil)
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 132 3 (set (reg:SI 3 r3 [orig:116 _6 ] [116])
        (const_int 2 [0x2])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 132 17 133 3 (set (pc)
        (label_ref 123)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 284 {*arm_jump}
     (nil)
 -> 123)
;;  succ:       16 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1034:3
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116

(barrier 133 132 20)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 123 124 125 126 128
(code_label 20 133 21 4 92 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 23 22 25 4 (set (reg:SI 2 r2 [124])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 23 26 4 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 52 [0x34])) [0 hdma_12(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1034:3 263 {*arm_movqi_insn}
     (nil))
(insn 26 25 28 4 (set (reg/f:SI 3 r3 [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1036:33 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 26 29 4 (set (reg:QI 3 r3 [128])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [126])
                (const_int 53 [0x35])) [0 hdma_12(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1036:33 263 {*arm_movqi_insn}
     (nil))
(insn 29 28 30 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (reg:QI 3 r3 [128]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1036:33 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 30 29 31 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 1 [0x1]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1036:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1036:5 273 {arm_cond_branch}
     (nil)
 -> 111)
;;  succ:       5 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 115 161
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 3 [0x3])) [0 CallbackID+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1038:5 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(jump_insn 34 33 35 5 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [orig:115 _3 ] [115])
                        (const_int 6 [0x6]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
                                (const_int 4 [0x4]))
                            (label_ref:SI 35)) [0  S4 A32])
                    (label_ref:SI 102)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 2 r2 [161]))
            (use (label_ref:SI 35))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1038:5 1030 {*thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 102 (nil))
 -> 35)
;;  succ:       13 [never]  count:0 (precise)
;;              6 [14.3% (adjusted)] 
;;              7 [14.3% (adjusted)] 
;;              8 [14.3% (adjusted)] 
;;              9 [14.3% (adjusted)] 
;;              10 [14.3% (adjusted)] 
;;              11 [14.3% (adjusted)] 
;;              12 [14.3% (adjusted)] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; Insn is not within a basic block
(code_label 35 34 36 97 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 36 35 37 (addr_diff_vec:SI (label_ref:SI 35)
         [
            (label_ref:SI 38)
            (label_ref:SI 45)
            (label_ref:SI 52)
            (label_ref:SI 59)
            (label_ref:SI 66)
            (label_ref:SI 73)
            (label_ref:SI 80)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 37 36 38)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 129 130
(code_label 38 37 39 6 103 (nil) [1 uses])
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1041:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 6 (set (reg:SI 2 r2 [130])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1041:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 134 6 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [129])
                (const_int 60 [0x3c])) [6 hdma_12(D)->XferCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [130])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1041:30 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 134 42 135 6 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1042:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1042:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 135 134 45)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 131 132
(code_label 45 135 46 7 102 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1045:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 48 47 49 7 (set (reg:SI 2 r2 [132])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1045:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 49 48 136 7 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 64 [0x40])) [6 hdma_12(D)->XferHalfCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [132])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1045:34 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 136 49 137 7 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1046:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1046:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 137 136 52)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 133 134
(code_label 52 137 53 8 101 (nil) [1 uses])
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1049:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 55 54 56 8 (set (reg:SI 2 r2 [134])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1049:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 56 55 138 8 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 68 [0x44])) [6 hdma_12(D)->XferM1CpltCallback+0 S4 A32])
        (reg:SI 2 r2 [134])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1049:32 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 138 56 139 8 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1050:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1050:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 139 138 59)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136
(code_label 59 139 60 9 100 (nil) [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1053:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 62 61 63 9 (set (reg:SI 2 r2 [136])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1053:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 63 62 140 9 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 72 [0x48])) [6 hdma_12(D)->XferM1HalfCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1053:36 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 140 63 141 9 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1054:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1054:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 141 140 66)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137 138
(code_label 66 141 67 10 99 (nil) [1 uses])
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 10 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1057:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 69 68 70 10 (set (reg:SI 2 r2 [138])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1057:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 70 69 142 10 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 76 [0x4c])) [6 hdma_12(D)->XferErrorCallback+0 S4 A32])
        (reg:SI 2 r2 [138])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1057:31 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 142 70 143 10 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1058:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1058:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 143 142 73)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 139 140
(code_label 73 143 74 11 98 (nil) [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1061:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 76 75 77 11 (set (reg:SI 2 r2 [140])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1061:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 76 144 11 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 80 [0x50])) [6 hdma_12(D)->XferAbortCallback+0 S4 A32])
        (reg:SI 2 r2 [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1061:31 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 144 77 145 11 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1062:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1062:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 145 144 80)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       5 [14.3% (adjusted)] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 141 142 143 144 145 146 147 148 149 150 151 152
(code_label 80 145 81 12 96 (nil) [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1065:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 12 (set (reg:SI 2 r2 [142])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1065:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 12 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 60 [0x3c])) [6 hdma_12(D)->XferCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [142])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1065:30 749 {*thumb2_movsi_vfp}
     (nil))
(insn 85 84 86 12 (set (reg/f:SI 3 r3 [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1066:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 86 85 87 12 (set (reg:SI 2 r2 [144])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1066:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 87 86 88 12 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 64 [0x40])) [6 hdma_12(D)->XferHalfCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [144])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1066:34 749 {*thumb2_movsi_vfp}
     (nil))
(insn 88 87 89 12 (set (reg/f:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1067:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 89 88 90 12 (set (reg:SI 2 r2 [146])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1067:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 89 91 12 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [145])
                (const_int 68 [0x44])) [6 hdma_12(D)->XferM1CpltCallback+0 S4 A32])
        (reg:SI 2 r2 [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1067:32 749 {*thumb2_movsi_vfp}
     (nil))
(insn 91 90 92 12 (set (reg/f:SI 3 r3 [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1068:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 92 91 93 12 (set (reg:SI 2 r2 [148])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1068:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 93 92 94 12 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 72 [0x48])) [6 hdma_12(D)->XferM1HalfCpltCallback+0 S4 A32])
        (reg:SI 2 r2 [148])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1068:36 749 {*thumb2_movsi_vfp}
     (nil))
(insn 94 93 95 12 (set (reg/f:SI 3 r3 [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1069:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 95 94 96 12 (set (reg:SI 2 r2 [150])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1069:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 96 95 97 12 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [149])
                (const_int 76 [0x4c])) [6 hdma_12(D)->XferErrorCallback+0 S4 A32])
        (reg:SI 2 r2 [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1069:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 97 96 98 12 (set (reg/f:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1070:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 12 (set (reg:SI 2 r2 [152])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1070:31 749 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 146 12 (set (mem/f:SI (plus:SI (reg/f:SI 3 r3 [151])
                (const_int 80 [0x50])) [6 hdma_12(D)->XferAbortCallback+0 S4 A32])
        (reg:SI 2 r2 [152])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1070:31 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 146 99 147 12 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1071:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1071:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 147 146 102)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       5 [never]  count:0 (precise)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 153 154
(code_label 102 147 103 13 95 (nil) [1 uses])
(note 103 102 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 106 13 (set (reg:SI 3 r3 [153])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1074:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 106 104 148 13 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [154])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1074:14 263 {*arm_movqi_insn}
     (nil))
(jump_insn 148 106 149 13 (set (pc)
        (label_ref 116)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1075:7 284 {*arm_jump}
     (nil)
 -> 116)
;;  succ:       15 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1075:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 149 148 111)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 155 156
(code_label 111 149 112 14 94 (nil) [1 uses])
(note 112 111 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 115 14 (set (reg:SI 3 r3 [155])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1080:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 115 113 116 14 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [156])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1080:12 263 {*arm_movqi_insn}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1071:7
;;              14 (FALLTHRU)
;;              11 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1062:7
;;              6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1042:7
;;              7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1046:7
;;              8 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1050:7
;;              9 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1054:7
;;              10 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1058:7
;;              13 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1075:7
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116 157 158 159
(code_label 116 115 117 15 105 (nil) [8 uses])
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg/f:SI 3 r3 [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1084:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 119 118 121 15 (set (reg:SI 2 r2 [158])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1084:3 749 {*thumb2_movsi_vfp}
     (nil))
(insn 121 119 122 15 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [157])
                (const_int 52 [0x34])) [0 hdma_12(D)->Lock+0 S1 A32])
        (reg:QI 2 r2 [159])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1084:3 263 {*arm_movqi_insn}
     (nil))
(insn 122 121 123 15 (set (reg:SI 3 r3 [orig:116 _6 ] [116])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1086:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
;;  succ:       16 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1086:10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 1, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1086:10
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1034:3
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116
;; lr  def 	 0 [r0] 117
(code_label 123 122 124 16 93 (nil) [1 uses])
(note 124 123 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 129 124 130 16 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1087:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 130 129 150 16 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1087:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 150 130 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_GetState (HAL_DMA_GetState, funcdef_no=144, decl_uid=7204, cgraph_uid=149, symbol_order=148)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=6,losers=1,rld_nregs=0
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 8:  (0) r  (1) Uh {*arm_movqi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = -2
   Insn 12: point = 1, n_alt = -2
   Insn 9: point = 3, n_alt = 0
   Insn 8: point = 5, n_alt = 7
   Insn 6: point = 7, n_alt = 5
   Insn 2: point = 8, n_alt = 7
 r113: [2..3]
 r114: [0..1]
 r115: [6..7]
 r117: [4..5]
Compressing live ranges: from 8 to 8 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]
 r115: [6..7]
 r117: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 6
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_GetState

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={4d,3u} r7={1d,4u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 41{28d,13u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 117
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1115:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg/f:SI 3 r3 [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1116:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (reg:QI 3 r3 [117])
        (mem/v:QI (plus:SI (reg/f:SI 3 r3 [115])
                (const_int 53 [0x35])) [0 hdma_2(D)->State+0 S1 A8])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1116:14 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 16 2 (set (reg:SI 3 r3 [orig:113 _3 ] [113])
        (zero_extend:SI (reg:QI 3 r3 [117]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1116:14 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 16 9 17 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1117:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 19 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1117:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 19 17 0 NOTE_INSN_DELETED)

;; Function HAL_DMA_GetError (HAL_DMA_GetError, funcdef_no=145, decl_uid=7206, cgraph_uid=150, symbol_order=149)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 7: point = 3, n_alt = 5
   Insn 6: point = 5, n_alt = 5
   Insn 2: point = 6, n_alt = 7
 r113: [2..3]
 r114: [0..1]
 r115: [4..5]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r113: [2..3]
 r114: [0..1]
 r115: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns


HAL_DMA_GetError

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={3d,2u} r7={1d,4u} r13={1d,2u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r102={1d,1u} 
;;    total ref usage 39{27d,12u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1126:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1127:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 14 2 (set (reg:SI 3 r3 [orig:113 _3 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [115])
                (const_int 84 [0x54])) [1 hdma_2(D)->ErrorCode+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1127:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 7 15 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:114 <retval> ] [114])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1128:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 17 2 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1128:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 17 15 0 NOTE_INSN_DELETED)

;; Function DMA_SetConfig (DMA_SetConfig, funcdef_no=146, decl_uid=7905, cgraph_uid=151, symbol_order=150)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4:  (0) m  (1) l {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 14:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 19:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 40:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 43:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 44:  (0) m  (1) l {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 52: point = 0, n_alt = -1
  BB 3
   Insn 49: point = 0, n_alt = -1
   Insn 32: point = 0, n_alt = 7
   Insn 31: point = 1, n_alt = 5
   Insn 30: point = 2, n_alt = 5
   Insn 29: point = 4, n_alt = 5
   Insn 28: point = 5, n_alt = 7
   Insn 27: point = 6, n_alt = 5
   Insn 26: point = 7, n_alt = 5
   Insn 25: point = 9, n_alt = 5
  BB 4
   Insn 44: point = 10, n_alt = 7
   Insn 43: point = 11, n_alt = 5
   Insn 42: point = 12, n_alt = 5
   Insn 41: point = 14, n_alt = 5
   Insn 40: point = 15, n_alt = 7
   Insn 39: point = 16, n_alt = 5
   Insn 38: point = 17, n_alt = 5
   Insn 37: point = 19, n_alt = 5
  BB 2
   Insn 23: point = 20, n_alt = -1
   Insn 22: point = 20, n_alt = 0
   Insn 21: point = 21, n_alt = 5
   Insn 20: point = 23, n_alt = 5
   Insn 19: point = 24, n_alt = 7
   Insn 18: point = 25, n_alt = 5
   Insn 17: point = 26, n_alt = 5
   Insn 16: point = 28, n_alt = 5
   Insn 15: point = 29, n_alt = 7
   Insn 14: point = 30, n_alt = 2
   Insn 13: point = 32, n_alt = 5
   Insn 12: point = 34, n_alt = 5
   Insn 11: point = 35, n_alt = 5
   Insn 10: point = 37, n_alt = 5
   Insn 9: point = 39, n_alt = 5
   Insn 5: point = 40, n_alt = 7
   Insn 4: point = 40, n_alt = 7
   Insn 3: point = 40, n_alt = 7
   Insn 2: point = 40, n_alt = 7
 r113: [36..37]
 r114: [31..35]
 r115: [29..32]
 r116: [29..30]
 r117: [24..26]
 r118: [20..21]
 r119: [5..7]
 r120: [0..2]
 r121: [15..17]
 r122: [10..12]
 r123: [38..39]
 r124: [33..34]
 r125: [27..28]
 r126: [24..25]
 r127: [22..23]
 r128: [8..9]
 r129: [5..6]
 r130: [3..4]
 r131: [0..1]
 r132: [18..19]
 r133: [15..16]
 r134: [13..14]
 r135: [10..11]
Compressing live ranges: from 40 to 34 - 85%
Ranges after the compression:
 r113: [30..31]
 r114: [26..29]
 r115: [24..27]
 r116: [24..25]
 r117: [20..21]
 r118: [16..17]
 r119: [4..5]
 r120: [0..1]
 r121: [12..13]
 r122: [8..9]
 r123: [32..33]
 r124: [28..29]
 r125: [22..23]
 r126: [20..21]
 r127: [18..19]
 r128: [6..7]
 r129: [4..5]
 r130: [2..3]
 r131: [0..1]
 r132: [14..15]
 r133: [12..13]
 r134: [10..11]
 r135: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 28
changing reg in insn 30
changing reg in insn 32
changing reg in insn 38
changing reg in insn 40
changing reg in insn 42
changing reg in insn 44
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
starting the processing of deferred insns
ending the processing of deferred insns


DMA_SetConfig

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={8d,8u} r3={17d,17u} r7={1d,23u} r13={1d,6u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 106{48d,58u,0e} in 37{37 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 117 118 123 124 125 126 127
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1152:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])
        (reg:SI 1 r1 [ SrcAddress ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1152:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])
        (reg:SI 2 r2 [ DstAddress ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1152:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (reg/f:SI 7 r7) [1 DataLength+0 S4 A32])
        (reg:SI 3 r3 [ DataLength ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1152:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/f:SI (reg/f:SI 3 r3 [123]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 r2 [orig:114 _2 ] [114])
        (mem/v:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113]) [1 _1->CR+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [orig:115 _3 ] [115])
        (mem/f:SI (reg/f:SI 3 r3 [124]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (and:SI (reg:SI 2 r2 [orig:114 _2 ] [114])
            (const_int -262145 [0xfffffffffffbffff]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:22 90 {*arm_andsi3_insn}
     (nil))
(insn 15 14 16 2 (set (mem/v:SI (reg/f:SI 3 r3 [orig:115 _3 ] [115]) [1 _3->CR+0 S4 A32])
        (reg:SI 2 r2 [orig:116 _4 ] [116])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1154:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1157:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (mem/f:SI (reg/f:SI 3 r3 [125]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1157:7 749 {*thumb2_movsi_vfp}
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 r2 [126])
        (mem/c:SI (reg/f:SI 7 r7) [1 DataLength+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1157:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 19 18 20 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 4 [0x4])) [1 _5->NDTR+0 S4 A32])
        (reg:SI 2 r2 [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1157:24 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1160:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 22 2 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [127])
                (const_int 8 [0x8])) [1 hdma_13(D)->Init.Direction+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1160:17 749 {*thumb2_movsi_vfp}
     (nil))
(insn 22 21 23 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 64 [0x40]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1160:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1160:5 273 {arm_cond_branch}
     (nil)
 -> 35)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 119 120 128 129 130 131
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg/f:SI 3 r3 [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1163:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 3 (set (reg/f:SI 3 r3 [orig:119 _7 ] [119])
        (mem/f:SI (reg/f:SI 3 r3 [128]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1163:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 27 26 28 3 (set (reg:SI 2 r2 [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1163:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 28 27 29 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:119 _7 ] [119])
                (const_int 8 [0x8])) [1 _7->PAR+0 S4 A32])
        (reg:SI 2 r2 [129])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1163:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 30 3 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1166:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 30 29 31 3 (set (reg/f:SI 3 r3 [orig:120 _8 ] [120])
        (mem/f:SI (reg/f:SI 3 r3 [130]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1166:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 30 32 3 (set (reg:SI 2 r2 [131])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1166:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 31 49 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:120 _8 ] [120])
                (const_int 12 [0xc])) [1 _8->M0AR+0 S4 A32])
        (reg:SI 2 r2 [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1166:26 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 49 32 50 3 (set (pc)
        (label_ref:SI 53)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1177:1 284 {*arm_jump}
     (nil)
 -> 53)
;;  succ:       6 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1177:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 50 49 35)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121 122 132 133 134 135
(code_label 35 50 36 4 111 (nil) [1 uses])
(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 4 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1172:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 38 37 39 4 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (mem/f:SI (reg/f:SI 3 r3 [132]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1172:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 39 38 40 4 (set (reg:SI 2 r2 [133])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 SrcAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1172:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 8 [0x8])) [1 _9->PAR+0 S4 A32])
        (reg:SI 2 r2 [133])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1172:25 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 4 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1175:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 42 41 43 4 (set (reg/f:SI 3 r3 [orig:122 _10 ] [122])
        (mem/f:SI (reg/f:SI 3 r3 [134]) [3 hdma_13(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1175:9 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 42 44 4 (set (reg:SI 2 r2 [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [1 DstAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1175:26 749 {*thumb2_movsi_vfp}
     (nil))
(insn 44 43 53 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:122 _10 ] [122])
                (const_int 12 [0xc])) [1 _10->M0AR+0 S4 A32])
        (reg:SI 2 r2 [135])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1175:26 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       6 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1177:1
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1177:1
;;              3 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1177:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 53 44 51 6 113 (nil) [1 uses])
(note 51 53 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 47 6 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1177:1 313 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 47 52 48 5 110 (nil) [0 uses])
(note 48 47 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 54 48 0 NOTE_INSN_DELETED)

;; Function DMA_CalcBaseAndBitshift (DMA_CalcBaseAndBitshift, funcdef_no=147, decl_uid=7907, cgraph_uid=152, symbol_order=151)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r {thumb2_zero_extendqisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 10:  (0) r  (1) rk  (2) L {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) l  (1) mi {*thumb2_movsi_vfp}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) %r  (2) r  (3) =r {*umull_high}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 17
	 Choosing alt 0 in insn 17:  (0) =rk  (1) %0  (2) rk {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 21:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 31:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 32:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) l  (1) l  (2) Pd {*arm_addsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 43:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 44:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 46:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) l  (1) mi {*thumb2_movsi_vfp}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 58: point = 0, n_alt = -1
   Insn 57: point = 0, n_alt = -2
   Insn 53: point = 1, n_alt = -2
   Insn 50: point = 3, n_alt = 5
   Insn 49: point = 5, n_alt = 5
  BB 3
   Insn 60: point = 6, n_alt = -1
   Insn 35: point = 6, n_alt = 7
   Insn 34: point = 7, n_alt = 5
   Insn 33: point = 8, n_alt = 3
   Insn 32: point = 10, n_alt = 2
   Insn 31: point = 11, n_alt = 2
   Insn 30: point = 13, n_alt = -2
   Insn 29: point = 15, n_alt = 5
   Insn 28: point = 17, n_alt = 5
  BB 4
   Insn 46: point = 18, n_alt = 7
   Insn 45: point = 19, n_alt = 5
   Insn 44: point = 20, n_alt = 2
   Insn 43: point = 21, n_alt = 2
   Insn 42: point = 23, n_alt = -2
   Insn 41: point = 25, n_alt = 5
   Insn 40: point = 27, n_alt = 5
  BB 2
   Insn 26: point = 28, n_alt = -1
   Insn 25: point = 28, n_alt = 0
   Insn 24: point = 29, n_alt = 5
   Insn 21: point = 30, n_alt = 7
   Insn 20: point = 31, n_alt = 5
   Insn 19: point = 32, n_alt = -2
   Insn 18: point = 34, n_alt = 1
   Insn 17: point = 36, n_alt = 0
   Insn 16: point = 38, n_alt = 5
   Insn 15: point = 39, n_alt = 5
   Insn 14: point = 40, n_alt = 7
   Insn 13: point = 41, n_alt = 1
   Insn 12: point = 43, n_alt = 0
   Insn 11: point = 45, n_alt = 5
   Insn 10: point = 46, n_alt = 10
   Insn 9: point = 48, n_alt = 0
   Insn 8: point = 50, n_alt = -2
   Insn 7: point = 52, n_alt = 5
   Insn 6: point = 54, n_alt = 5
   Insn 2: point = 55, n_alt = 7
 r113: [51..52]
 r114: [49..50]
 r115: [47..48]
 r116: [44..46]
 r117: [33..34]
 r118: [30..32]
 r119: [14..15]
 r120: [12..13]
 r121: [9..11]
 r122: [6..8]
 r123: [24..25]
 r124: [22..23]
 r125: [18..21]
 r126: [2..3]
 r127: [0..1]
 r128: [53..54]
 r129: [42..43]
 r130: [44..45]
 r131: [40..41]
 r132: [37..39]
 r133: [35..36]
 r134: [37..38]
 r135: [30..31]
 r136: [28..29]
 r137: [16..17]
 r138: [6..7]
 r139: [26..27]
 r140: [18..19]
 r141: [4..5]
 r143: [43..43]
Compressing live ranges: from 55 to 48 - 87%
Ranges after the compression:
 r113: [44..45]
 r114: [42..43]
 r115: [40..41]
 r116: [38..39]
 r117: [28..29]
 r118: [26..27]
 r119: [12..13]
 r120: [10..11]
 r121: [8..9]
 r122: [6..7]
 r123: [20..21]
 r124: [18..19]
 r125: [16..17]
 r126: [2..3]
 r127: [0..1]
 r128: [46..47]
 r129: [36..37]
 r130: [38..39]
 r131: [34..35]
 r132: [32..33]
 r133: [30..31]
 r134: [32..33]
 r135: [26..27]
 r136: [24..25]
 r137: [14..15]
 r138: [6..7]
 r139: [22..23]
 r140: [16..17]
 r141: [4..5]
 r143: [37..37]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 21
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 43
changing reg in insn 46
changing reg in insn 44
changing reg in insn 50
changing reg in insn 53
changing reg in insn 53
changing reg in insn 57
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 30.
deleting insn with uid = 42.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns


DMA_CalcBaseAndBitshift

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={7d,5u} r3={23d,22u} r7={1d,16u} r13={1d,5u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 107{54d,53u,0e} in 37{37 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 117 118 128 129 130 131 132 133 134 135 136 143
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1186:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 7 6 9 2 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (mem/f:SI (reg/f:SI 3 r3 [128]) [3 hdma_16(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:44 749 {*thumb2_movsi_vfp}
     (nil))
(insn 9 7 10 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (zero_extend:SI (reg:QI 3 r3 [orig:114 _2 ] [114]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:55 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (plus:SI (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int -16 [0xfffffffffffffff0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:64 7 {*arm_addsi3}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 r2 [130])
        (const_int -1431655765 [0xffffffffaaaaaaab])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 3 r3 [129])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 3 r3 [orig:116 _4 ] [116]))
                            (zero_extend:DI (reg:SI 2 r2 [130])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 2 r2 [143]))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:12 72 {*umull_high}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [131])
        (lshiftrt:SI (reg:SI 3 r3 [129])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:12 147 {*arm_shiftsi3}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 stream_number+0 S4 A32])
        (reg:SI 3 r3 [131])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1187:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 2 r2 [132])
        (symbol_ref:SI ("flagBitshiftOffset.0") [flags 0x2]  <var_decl 0000000006931ea0 flagBitshiftOffset>)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 16 15 17 2 (set (reg:SI 3 r3 [134])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 stream_number+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 3 r3 [133])
        (plus:SI (reg:SI 3 r3 [134])
            (reg/f:SI 2 r2 [132]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:41 7 {*arm_addsi3}
     (nil))
(insn 18 17 19 2 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (zero_extend:SI (mem/u:QI (reg/f:SI 3 r3 [133]) [0 flagBitshiftOffset[stream_number_17]+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:41 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 19 18 20 2 (set (reg:SI 2 r2 [orig:118 _6 ] [118])
        (reg:SI 3 r3 [orig:117 _5 ] [117])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:41 749 {*thumb2_movsi_vfp}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 21 20 24 2 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 92 [0x5c])) [1 hdma_16(D)->StreamIndex+0 S4 A32])
        (reg:SI 2 r2 [orig:118 _6 ] [118])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1191:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 24 21 25 2 (set (reg:SI 3 r3 [136])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 stream_number+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1193:6 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [136])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1193:6 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1193:6 273 {arm_cond_branch}
     (nil)
 -> 38)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 119 120 121 122 137 138
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:47 749 {*thumb2_movsi_vfp}
     (nil))
(insn 29 28 31 3 (set (reg/f:SI 3 r3 [orig:119 _7 ] [119])
        (mem/f:SI (reg/f:SI 3 r3 [137]) [3 hdma_16(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:47 749 {*thumb2_movsi_vfp}
     (nil))
(insn 31 29 32 3 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int -1021 [0xfffffffffffffc03]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:58 90 {*arm_andsi3_insn}
     (nil))
(insn 32 31 33 3 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (and:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int -4 [0xfffffffffffffffc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:58 90 {*arm_andsi3_insn}
     (nil))
(insn 33 32 34 3 (set (reg:SI 2 r2 [orig:122 _10 ] [122])
        (plus:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 4 [0x4]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:81 7 {*arm_addsi3}
     (nil))
(insn 34 33 35 3 (set (reg/f:SI 3 r3 [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 35 34 60 3 (set (mem:SI (plus:SI (reg/f:SI 3 r3 [138])
                (const_int 88 [0x58])) [1 hdma_16(D)->StreamBaseAddress+0 S4 A32])
        (reg:SI 2 r2 [orig:122 _10 ] [122])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1196:29 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 60 35 61 3 (set (pc)
        (label_ref 47)) 284 {*arm_jump}
     (nil)
 -> 47)
;;  succ:       5 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 61 60 38)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 123 124 125 139 140
(code_label 38 61 39 4 115 (nil) [1 uses])
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/f:SI 3 r3 [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1201:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 43 4 (set (reg/f:SI 3 r3 [orig:123 _11 ] [123])
        (mem/f:SI (reg/f:SI 3 r3 [139]) [3 hdma_16(D)->Instance+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1201:46 749 {*thumb2_movsi_vfp}
     (nil))
(insn 43 41 44 4 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (and:SI (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int -1021 [0xfffffffffffffc03]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1201:57 90 {*arm_andsi3_insn}
     (nil))
(insn 44 43 45 4 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (and:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int -4 [0xfffffffffffffffc]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1201:57 90 {*arm_andsi3_insn}
     (nil))
(insn 45 44 46 4 (set (reg/f:SI 2 r2 [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1201:29 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 45 47 4 (set (mem:SI (plus:SI (reg/f:SI 2 r2 [140])
                (const_int 88 [0x58])) [1 hdma_16(D)->StreamBaseAddress+0 S4 A32])
        (reg:SI 3 r3 [orig:125 _13 ] [125])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1201:29 749 {*thumb2_movsi_vfp}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 126 127 141
(code_label 47 46 48 5 116 (nil) [1 uses])
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1204:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 50 49 57 5 (set (reg:SI 3 r3 [orig:126 _21 ] [126])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 88 [0x58])) [1 hdma_16(D)->StreamBaseAddress+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1204:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 57 50 58 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:127 <retval> ] [127])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1205:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 58 57 63 5 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1205:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 63 58 0 NOTE_INSN_DELETED)

;; Function DMA_CheckFifoParam (DMA_CheckFifoParam, funcdef_no=148, decl_uid=7909, cgraph_uid=153, symbol_order=152)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=23,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=24,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) l  (1) mi {*thumb2_movsi_vfp}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=6,overall=22,losers=2 -- refuse
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) m  (1) l {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) l  (1) mi {*thumb2_movsi_vfp}
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) r  (1) rI  (4) =&r {*thumb2_casesi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 32:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 46:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) l  (1) mi {*thumb2_movsi_vfp}
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) r  (1) rI  (4) =&r {*thumb2_casesi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 77:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 83:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 90:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 98:  (0) l  (1) mi {*thumb2_movsi_vfp}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 99:  (0) r  (1) I {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 104:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 123:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 133:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 138:  (0) l  (1) mi {*thumb2_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 139:  (0) l  (1) mi {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) r  (1) I {*thumb2_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 146:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11 12
EBB 13 14
EBB 15 16 17
EBB 18
EBB 19 20
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
   Insn 163: point = 0, n_alt = -1
   Insn 162: point = 0, n_alt = -2
   Insn 158: point = 1, n_alt = -2
   Insn 155: point = 3, n_alt = 1
  BB 24
   Insn 194: point = 4, n_alt = -1
   Insn 193: point = 4, n_alt = -1
  BB 7
   Insn 167: point = 4, n_alt = -1
   Insn 46: point = 4, n_alt = 6
   Insn 45: point = 5, n_alt = 0
   Insn 44: point = 7, n_alt = 1
  BB 6
   Insn 42: point = 8, n_alt = -1
   Insn 41: point = 8, n_alt = 3
   Insn 40: point = 9, n_alt = 5
   Insn 39: point = 11, n_alt = 5
  BB 10
   Insn 169: point = 12, n_alt = -1
   Insn 77: point = 12, n_alt = 6
   Insn 76: point = 13, n_alt = 0
   Insn 75: point = 15, n_alt = 1
  BB 26
   Insn 204: point = 16, n_alt = -1
   Insn 203: point = 16, n_alt = -1
  BB 12
   Insn 171: point = 16, n_alt = -1
   Insn 90: point = 16, n_alt = 6
   Insn 89: point = 17, n_alt = 0
   Insn 88: point = 19, n_alt = 1
  BB 11
   Insn 86: point = 20, n_alt = -1
   Insn 85: point = 20, n_alt = 0
   Insn 84: point = 21, n_alt = 0
   Insn 83: point = 23, n_alt = 5
   Insn 82: point = 25, n_alt = 5
  BB 23
   Insn 189: point = 26, n_alt = -1
   Insn 188: point = 26, n_alt = -1
  BB 5
   Insn 165: point = 26, n_alt = -1
   Insn 32: point = 26, n_alt = 6
   Insn 31: point = 27, n_alt = 0
   Insn 30: point = 29, n_alt = 1
  BB 4
   Insn 28: point = 30, n_alt = -1
   Insn 27: point = 30, n_alt = 0
   Insn 26: point = 31, n_alt = 0
   Insn 25: point = 33, n_alt = 5
   Insn 24: point = 35, n_alt = 5
  BB 27
   Insn 209: point = 36, n_alt = -1
   Insn 208: point = 36, n_alt = -1
  BB 14
   Insn 173: point = 36, n_alt = -1
   Insn 104: point = 36, n_alt = 6
   Insn 103: point = 37, n_alt = 0
   Insn 102: point = 39, n_alt = 1
  BB 13
   Insn 100: point = 40, n_alt = -1
   Insn 99: point = 40, n_alt = 3
   Insn 98: point = 41, n_alt = 5
   Insn 97: point = 43, n_alt = 5
  BB 28
   Insn 213: point = 44, n_alt = -1
  BB 20
   Insn 179: point = 44, n_alt = -1
   Insn 146: point = 44, n_alt = 6
   Insn 145: point = 45, n_alt = 0
   Insn 144: point = 47, n_alt = 1
  BB 19
   Insn 142: point = 48, n_alt = -1
   Insn 141: point = 48, n_alt = 0
   Insn 140: point = 49, n_alt = 0
   Insn 139: point = 51, n_alt = 5
   Insn 138: point = 53, n_alt = 5
  BB 18
   Insn 177: point = 54, n_alt = -1
   Insn 133: point = 54, n_alt = 6
   Insn 132: point = 55, n_alt = 0
   Insn 131: point = 57, n_alt = 1
  BB 17
   Insn 175: point = 58, n_alt = -1
  BB 16
   Insn 125: point = 58, n_alt = -1
   Insn 124: point = 58, n_alt = 0
   Insn 123: point = 59, n_alt = 5
  BB 15
   Insn 121: point = 60, n_alt = -1
   Insn 120: point = 60, n_alt = 0
   Insn 119: point = 61, n_alt = 5
  BB 25
   Insn 199: point = 62, n_alt = -1
   Insn 198: point = 62, n_alt = -1
  BB 9
   Insn 69: point = 62, n_alt = 0
   Insn 68: point = 64, n_alt = 5
  BB 8
   Insn 66: point = 65, n_alt = -1
   Insn 65: point = 65, n_alt = 3
   Insn 64: point = 66, n_alt = 5
   Insn 63: point = 68, n_alt = 5
  BB 22
   Insn 184: point = 69, n_alt = -1
   Insn 183: point = 69, n_alt = -1
  BB 3
   Insn 18: point = 69, n_alt = 0
   Insn 17: point = 71, n_alt = 5
  BB 2
   Insn 15: point = 72, n_alt = -1
   Insn 14: point = 72, n_alt = 0
   Insn 13: point = 73, n_alt = 5
   Insn 12: point = 75, n_alt = 5
   Insn 11: point = 76, n_alt = 7
   Insn 10: point = 77, n_alt = 5
   Insn 9: point = 79, n_alt = 5
   Insn 8: point = 80, n_alt = 6
   Insn 7: point = 81, n_alt = 0
   Insn 6: point = 83, n_alt = 1
   Insn 2: point = 84, n_alt = 7
 r113: [72..73]
 r114: [32..33]
 r115: [30..31]
 r116: [8..9]
 r117: [65..66]
 r118: [22..23]
 r119: [20..21]
 r120: [40..41]
 r121: [50..51]
 r122: [48..49]
 r123: [2..3]
 r124: [0..1]
 r125: [82..83]
 r126: [80..81]
 r127: [78..79]
 r128: [76..77]
 r129: [74..75]
 r130: [70..71]
 r131: [34..35]
 r132: [28..29]
 r133: [26..27]
 r134: [10..11]
 r135: [6..7]
 r136: [4..5]
 r137: [67..68]
 r138: [63..64]
 r139: [14..15]
 r140: [12..13]
 r141: [24..25]
 r142: [18..19]
 r143: [16..17]
 r144: [42..43]
 r145: [38..39]
 r146: [36..37]
 r147: [60..61]
 r148: [58..59]
 r149: [56..57]
 r150: [54..55]
 r151: [52..53]
 r152: [46..47]
 r153: [44..45]
 r155: [69..70]
 r156: [62..63]
Compressing live ranges: from 84 to 84 - 100%
Ranges after the compression:
 r113: [72..73]
 r114: [32..33]
 r115: [30..31]
 r116: [8..9]
 r117: [65..66]
 r118: [22..23]
 r119: [20..21]
 r120: [40..41]
 r121: [50..51]
 r122: [48..49]
 r123: [2..3]
 r124: [0..1]
 r125: [82..83]
 r126: [80..81]
 r127: [78..79]
 r128: [76..77]
 r129: [74..75]
 r130: [70..71]
 r131: [34..35]
 r132: [28..29]
 r133: [26..27]
 r134: [10..11]
 r135: [6..7]
 r136: [4..5]
 r137: [67..68]
 r138: [63..64]
 r139: [14..15]
 r140: [12..13]
 r141: [24..25]
 r142: [18..19]
 r143: [16..17]
 r144: [42..43]
 r145: [38..39]
 r146: [36..37]
 r147: [60..61]
 r148: [58..59]
 r149: [56..57]
 r150: [54..55]
 r151: [52..53]
 r152: [46..47]
 r153: [44..45]
 r155: [69..70]
 r156: [62..63]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 40
changing reg in insn 41
changing reg in insn 64
changing reg in insn 65
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 98
changing reg in insn 99
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 141
changing reg in insn 155
changing reg in insn 158
changing reg in insn 158
changing reg in insn 162
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 39
changing reg in insn 40
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 63
changing reg in insn 64
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 82
changing reg in insn 83
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 97
changing reg in insn 98
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 119
changing reg in insn 120
changing reg in insn 123
changing reg in insn 124
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 138
changing reg in insn 139
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 18
changing reg in insn 69
deleting insn with uid = 7.
deleting insn with uid = 31.
deleting insn with uid = 45.
deleting insn with uid = 76.
deleting insn with uid = 89.
deleting insn with uid = 103.
deleting insn with uid = 132.
deleting insn with uid = 145.
deleting insn with uid = 158.
starting the processing of deferred insns
ending the processing of deferred insns


DMA_CheckFifoParam

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={3d} r3={33d,34u} r7={1d,51u} r13={1d,28u} r14={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r100={11d,9u} r102={1d,1u} 
;;    total ref usage 196{70d,126u,0e} in 85{85 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 125 126 127 128 129
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])
        (reg:SI 0 r0 [ hdma ])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1214:1 749 {*thumb2_movsi_vfp}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (set (reg:SI 3 r3 [125])
        (const_int 0 [0])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1215:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 8 6 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [126])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1215:21 263 {*arm_movqi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1216:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [128])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [127])
                (const_int 40 [0x28])) [1 hdma_21(D)->Init.FIFOThreshold+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1216:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmp+0 S4 A64])
        (reg:SI 3 r3 [128])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1216:12 749 {*thumb2_movsi_vfp}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1219:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [129])
                (const_int 24 [0x18])) [1 hdma_21(D)->Init.MemDataAlignment+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1219:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1219:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1219:5 273 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       3 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 130 155
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:SI 3 r3 [130])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmp+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1221:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 18 17 19 3 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [130])
                        (const_int 3 [0x3]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [130])
                                (const_int 4 [0x4]))
                            (label_ref:SI 19)) [0  S4 A32])
                    (label_ref:SI 182)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 2 r2 [155]))
            (use (label_ref:SI 19))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1221:5 1030 {*thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 182 (insn_list:REG_LABEL_TARGET 55 (nil)))
 -> 19)
;;  succ:       22 [25.0% (adjusted)]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1239:7
;;              4 [50.0% (adjusted)] 
;;              6 [25.0% (adjusted)] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; Insn is not within a basic block
(code_label 19 18 20 124 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 20 19 21 (addr_diff_vec:SI (label_ref:SI 19)
         [
            (label_ref:SI 22)
            (label_ref:SI 37)
            (label_ref:SI 22)
            (label_ref:SI 182)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 21 20 22)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 [50.0% (adjusted)] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 114 115 131
(code_label 22 21 23 4 125 (nil) [2 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1225:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 25 24 26 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 44 [0x2c])) [1 hdma_21(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1225:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 26 25 27 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 16777216 [0x1000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1225:32 90 {*arm_andsi3_insn}
     (nil))
(insn 27 26 28 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1225:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 187)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1225:10 273 {arm_cond_branch}
     (nil)
 -> 187)
;;  succ:       5 (FALLTHRU)
;;              23 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1229:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 132 133
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 5 (set (reg:SI 3 r3 [132])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1227:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 32 30 165 5 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [133])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1227:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 165 32 166 5 (set (pc)
        (label_ref:SI 187)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1229:7 284 {*arm_jump}
     (nil)
 -> 187)
;;  succ:       23 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1229:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 166 165 37)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 [25.0% (adjusted)] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 116 134
(code_label 37 166 38 6 126 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1231:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 40 39 41 6 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [134])
                (const_int 44 [0x2c])) [1 hdma_21(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1231:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 41 40 42 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:116 _4 ] [116])
            (const_int 25165824 [0x1800000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1231:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 192)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1231:10 273 {arm_cond_branch}
     (nil)
 -> 192)
;;  succ:       7 (FALLTHRU)
;;              24 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1235:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 135 136
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 46 7 (set (reg:SI 3 r3 [135])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1233:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 46 44 167 7 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [136])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1233:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 167 46 168 7 (set (pc)
        (label_ref:SI 192)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1235:7 284 {*arm_jump}
     (nil)
 -> 192)
;;  succ:       24 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1235:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 168 167 61)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117 137
(code_label 61 168 62 8 121 (nil) [1 uses])
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (set (reg/f:SI 3 r3 [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1244:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 64 63 65 8 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [137])
                (const_int 24 [0x18])) [1 hdma_21(D)->Init.MemDataAlignment+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1244:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 65 64 66 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:117 _5 ] [117])
            (const_int 8192 [0x2000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1244:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1244:11 273 {arm_cond_branch}
     (nil)
 -> 115)
;;  succ:       9 (FALLTHRU)
;;              15
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 138 156
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 9 (set (reg:SI 3 r3 [138])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmp+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1246:5 749 {*thumb2_movsi_vfp}
     (nil))
(jump_insn 69 68 70 9 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [138])
                        (const_int 3 [0x3]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [138])
                                (const_int 4 [0x4]))
                            (label_ref:SI 70)) [0  S4 A32])
                    (label_ref:SI 197)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 2 r2 [156]))
            (use (label_ref:SI 70))
        ]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1246:5 1030 {*thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 197 (insn_list:REG_LABEL_TARGET 109 (nil)))
 -> 70)
;;  succ:       25 [never]  count:0 (precise) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1265:7
;;              10 [50.0% (adjusted)] 
;;              11 [25.0% (adjusted)] 
;;              13 [25.0% (adjusted)] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; Insn is not within a basic block
(code_label 70 69 71 134 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 71 70 72 (addr_diff_vec:SI (label_ref:SI 70)
         [
            (label_ref:SI 73)
            (label_ref:SI 80)
            (label_ref:SI 73)
            (label_ref:SI 95)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 72 71 73)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 [50.0% (adjusted)] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 139 140
(code_label 73 72 74 10 135 (nil) [2 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 77 10 (set (reg:SI 3 r3 [139])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1250:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 77 75 169 10 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [140])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1250:14 263 {*arm_movqi_insn}
     (nil))
(jump_insn 169 77 170 10 (set (pc)
        (label_ref 153)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1251:7 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1251:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 170 169 80)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9 [25.0% (adjusted)] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 118 119 141
(code_label 80 170 81 11 136 (nil) [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg/f:SI 3 r3 [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1253:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 83 82 84 11 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 44 [0x2c])) [1 hdma_21(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1253:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 84 83 85 11 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 16777216 [0x1000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1253:32 90 {*arm_andsi3_insn}
     (nil))
(insn 85 84 86 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1253:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 202)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1253:10 273 {arm_cond_branch}
     (nil)
 -> 202)
;;  succ:       12 (FALLTHRU)
;;              26 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1257:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 142 143
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 90 12 (set (reg:SI 3 r3 [142])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1255:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 90 88 171 12 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [143])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1255:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 171 90 172 12 (set (pc)
        (label_ref:SI 202)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1257:7 284 {*arm_jump}
     (nil)
 -> 202)
;;  succ:       26 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1257:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 172 171 95)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9 [25.0% (adjusted)] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 120 144
(code_label 95 172 96 13 133 (nil) [1 uses])
(note 96 95 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 13 (set (reg/f:SI 3 r3 [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1259:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 98 97 99 13 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [144])
                (const_int 44 [0x2c])) [1 hdma_21(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1259:21 749 {*thumb2_movsi_vfp}
     (nil))
(insn 99 98 100 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:120 _8 ] [120])
            (const_int 25165824 [0x1800000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1259:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 100 99 101 13 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 207)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1259:10 273 {arm_cond_branch}
     (nil)
 -> 207)
;;  succ:       14 (FALLTHRU)
;;              27 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1263:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 145 146
(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 104 14 (set (reg:SI 3 r3 [145])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1261:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 104 102 173 14 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [146])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1261:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 173 104 174 14 (set (pc)
        (label_ref:SI 207)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1263:7 284 {*arm_jump}
     (nil)
 -> 207)
;;  succ:       27 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1263:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 174 173 115)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147
(code_label 115 174 116 15 131 (nil) [1 uses])
(note 116 115 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 119 116 120 15 (set (reg:SI 3 r3 [147])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmp+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1272:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 120 119 121 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [147])
            (const_int 2 [0x2]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1272:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 121 120 122 15 (set (pc)
        (if_then_else (leu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1272:5 273 {arm_cond_branch}
     (nil)
 -> 129)
;;  succ:       18
;;              16 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 148
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 16 (set (reg:SI 3 r3 [148])
        (mem/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 8 [0x8])) [1 tmp+0 S4 A64])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1272:5 749 {*thumb2_movsi_vfp}
     (nil))
(insn 124 123 125 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [148])
            (const_int 3 [0x3]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1272:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 125 124 128 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1272:5 273 {arm_cond_branch}
     (nil)
 -> 136)
;;  succ:       17 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1272:5
;;              19
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1272:5
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 128 125 175 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 175 128 176 17 (set (pc)
        (label_ref 153)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1286:7 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1286:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 176 175 129)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 149 150
(code_label 129 176 130 18 140 (nil) [1 uses])
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 133 18 (set (reg:SI 3 r3 [149])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1277:14 749 {*thumb2_movsi_vfp}
     (nil))
(insn 133 131 177 18 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [150])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1277:14 263 {*arm_movqi_insn}
     (nil))
(jump_insn 177 133 178 18 (set (pc)
        (label_ref 153)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1278:7 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1278:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 178 177 136)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 121 122 151
(code_label 136 178 137 19 141 (nil) [1 uses])
(note 137 136 138 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 19 (set (reg/f:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [10 hdma+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1280:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 139 138 140 19 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [151])
                (const_int 44 [0x2c])) [1 hdma_21(D)->Init.MemBurst+0 S4 A32])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1280:22 749 {*thumb2_movsi_vfp}
     (nil))
(insn 140 139 141 19 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (and:SI (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 16777216 [0x1000000]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1280:32 90 {*arm_andsi3_insn}
     (nil))
(insn 141 140 142 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 0 [0]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1280:10 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 142 141 143 19 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 212)
            (pc))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1280:10 273 {arm_cond_branch}
     (nil)
 -> 212)
;;  succ:       20 (FALLTHRU)
;;              28 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1284:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 22, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 152 153
(note 143 142 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 146 20 (set (reg:SI 3 r3 [152])
        (const_int 1 [0x1])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1282:16 749 {*thumb2_movsi_vfp}
     (nil))
(insn 146 144 179 20 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 15 [0xf])) [0 status+0 S1 A8])
        (reg:QI 3 r3 [153])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1282:16 263 {*arm_movqi_insn}
     (nil))
(jump_insn 179 146 180 20 (set (pc)
        (label_ref:SI 212)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1284:7 284 {*arm_jump}
     (nil)
 -> 212)
;;  succ:       28 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1284:7
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 180 179 182)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 20, next block 23, flags: (RTL, MODIFIED)
;;  pred:       3 [25.0% (adjusted)]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1239:7
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 182 180 181 22 145 (nil) [2 uses])
(note 181 182 183 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 183 181 184 22 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1239:7 313 {nop}
     (nil))
(jump_insn 184 183 185 22 (set (pc)
        (label_ref 153)) 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 185 184 187)
;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       4 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1229:7
;;              5 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1229:7
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 187 185 186 23 146 (nil) [2 uses])
(note 186 187 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 188 186 189 23 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1229:7 313 {nop}
     (nil))
(jump_insn 189 188 190 23 (set (pc)
        (label_ref 153)) 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 190 189 192)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       6 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1235:7
;;              7 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1235:7
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 192 190 191 24 147 (nil) [2 uses])
(note 191 192 193 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 193 191 194 24 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1235:7 313 {nop}
     (nil))
(jump_insn 194 193 195 24 (set (pc)
        (label_ref 153)) 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 195 194 197)
;; basic block 25, loop depth 0, count 0 (precise), probably never executed
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       9 [never]  count:0 (precise) ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1265:7
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 197 195 196 25 148 (nil) [1 uses])
(note 196 197 198 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 198 196 199 25 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1265:7 313 {nop}
     (nil))
(jump_insn 199 198 200 25 (set (pc)
        (label_ref 153)) 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always]  count:0 (precise)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 200 199 202)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       11 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1257:7
;;              12 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1257:7
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 202 200 201 26 149 (nil) [2 uses])
(note 201 202 203 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 203 201 204 26 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1257:7 313 {nop}
     (nil))
(jump_insn 204 203 205 26 (set (pc)
        (label_ref 153)) 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 205 204 207)
;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       13 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1263:7
;;              14 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1263:7
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 207 205 206 27 150 (nil) [2 uses])
(note 206 207 208 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 208 206 209 27 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1263:7 313 {nop}
     (nil))
(jump_insn 209 208 210 27 (set (pc)
        (label_ref 153)) 284 {*arm_jump}
     (nil)
 -> 153)
;;  succ:       21 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 210 209 212)
;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1284:7
;;              20 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1284:7
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 212 210 211 28 151 (nil) [2 uses])
(note 211 212 213 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 213 211 153 28 (const_int 0 [0]) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1284:7 313 {nop}
     (nil))
;;  succ:       21 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 28, next block 1, flags: (RTL, MODIFIED)
;;  pred:       22 [always] 
;;              25 [always]  count:0 (precise)
;;              17 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1286:7
;;              18 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1278:7
;;              28 [always]  (FALLTHRU)
;;              27 [always] 
;;              23 [always] 
;;              26 [always] 
;;              10 [always]  ../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c:1251:7
;;              24 [always] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 123 124
(code_label 153 213 154 21 130 (nil) [9 uses])
(note 154 153 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 162 21 (set (reg:SI 3 r3 [orig:123 _30 ] [123])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 15 [0xf])) [0 status+0 S1 A8]))) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1290:10 1029 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 162 155 163 21 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:124 <retval> ] [124])) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1291:1 749 {*thumb2_movsi_vfp}
     (nil))
(insn 163 162 214 21 (use (reg/i:SI 0 r0)) "../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c":1291:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 214 163 0 NOTE_INSN_DELETED)
